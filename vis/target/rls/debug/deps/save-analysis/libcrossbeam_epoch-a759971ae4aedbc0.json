{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5","program":"C:\\Users\\Ethan\\.rustup\\toolchains\\nightly-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","crossbeam_epoch","--edition=2018","C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"alloc\"","--cfg","feature=\"lazy_static\"","--cfg","feature=\"std\"","-C","metadata=a759971ae4aedbc0","-C","extra-filename=-a759971ae4aedbc0","--out-dir","c:\\Users\\Ethan\\Desktop\\repo\\sorting_visualizer\\vis\\target\\rls\\debug\\deps","-L","dependency=c:\\Users\\Ethan\\Desktop\\repo\\sorting_visualizer\\vis\\target\\rls\\debug\\deps","--extern","cfg_if=c:\\Users\\Ethan\\Desktop\\repo\\sorting_visualizer\\vis\\target\\rls\\debug\\deps\\libcfg_if-7c477a85dc09cdc2.rmeta","--extern","crossbeam_utils=c:\\Users\\Ethan\\Desktop\\repo\\sorting_visualizer\\vis\\target\\rls\\debug\\deps\\libcrossbeam_utils-bc212003180e2900.rmeta","--extern","lazy_static=c:\\Users\\Ethan\\Desktop\\repo\\sorting_visualizer\\vis\\target\\rls\\debug\\deps\\liblazy_static-77db95cc6b087085.rmeta","--extern","memoffset=c:\\Users\\Ethan\\Desktop\\repo\\sorting_visualizer\\vis\\target\\rls\\debug\\deps\\libmemoffset-823d0d660002356a.rmeta","--extern","scopeguard=c:\\Users\\Ethan\\Desktop\\repo\\sorting_visualizer\\vis\\target\\rls\\debug\\deps\\libscopeguard-fde48d42e80c0f23.rmeta","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\Ethan\\.rustup/toolchains/nightly-x86_64-pc-windows-msvc"],"output":"c:\\Users\\Ethan\\Desktop\\repo\\sorting_visualizer\\vis\\target\\rls\\debug\\deps\\libcrossbeam_epoch-a759971ae4aedbc0.rmeta"},"prelude":{"crate_id":{"name":"crossbeam_epoch","disambiguator":[6374986604848625524,0]},"crate_root":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src","external_crates":[{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[4355726627561370771,0]}},{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\lib.rs","num":2,"id":{"name":"core","disambiguator":[267229713070244971,0]}},{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[3683013900974168134,0]}},{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[15143829146767998538,0]}},{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[10594799546926461173,0]}},{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[5830232627024197309,0]}},{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[3472286635410469373,0]}},{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[1387985299865621046,0]}},{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[10967310900533047156,0]}},{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[16235493736143484136,0]}},{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[17010194385668190056,0]}},{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[14878302039127249509,0]}},{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\lib.rs","num":13,"id":{"name":"panic_unwind","disambiguator":[1028073505301703285,0]}},{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\lib.rs","num":14,"id":{"name":"cfg_if","disambiguator":[3991922908739949058,0]}},{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\lib.rs","num":15,"id":{"name":"lazy_static","disambiguator":[9903002029676483884,0]}},{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","num":16,"id":{"name":"crossbeam_utils","disambiguator":[180287433296261102,0]}},{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","num":17,"id":{"name":"scopeguard","disambiguator":[17428104027214378579,0]}},{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\internal.rs","num":18,"id":{"name":"memoffset","disambiguator":[369386892793526162,0]}}],"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\lib.rs","byte_start":0,"byte_end":7175,"line_start":1,"line_end":186,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":130},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\lib.rs","byte_start":6724,"byte_end":6733,"line_start":170,"line_end":170,"column_start":13,"column_end":22},"alias_span":null,"name":"Pointable","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":164},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\lib.rs","byte_start":6735,"byte_end":6741,"line_start":170,"line_end":170,"column_start":24,"column_end":30},"alias_span":null,"name":"Atomic","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":103},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\lib.rs","byte_start":6743,"byte_end":6763,"line_start":170,"line_end":170,"column_start":32,"column_end":52},"alias_span":null,"name":"CompareExchangeError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":246},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\lib.rs","byte_start":6777,"byte_end":6782,"line_start":171,"line_end":171,"column_start":13,"column_end":18},"alias_span":null,"name":"Owned","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":242},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\lib.rs","byte_start":6784,"byte_end":6791,"line_start":171,"line_end":171,"column_start":20,"column_end":27},"alias_span":null,"name":"Pointer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":300},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\lib.rs","byte_start":6793,"byte_end":6799,"line_start":171,"line_end":171,"column_start":29,"column_end":35},"alias_span":null,"name":"Shared","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":371},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\lib.rs","byte_start":6846,"byte_end":6855,"line_start":173,"line_end":173,"column_start":35,"column_end":44},"alias_span":null,"name":"Collector","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":387},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\lib.rs","byte_start":6857,"byte_end":6868,"line_start":173,"line_end":173,"column_start":46,"column_end":57},"alias_span":null,"name":"LocalHandle","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":499},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\lib.rs","byte_start":6901,"byte_end":6912,"line_start":174,"line_end":174,"column_start":31,"column_end":42},"alias_span":null,"name":"unprotected","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":475},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\lib.rs","byte_start":6914,"byte_end":6919,"line_start":174,"line_end":174,"column_start":44,"column_end":49},"alias_span":null,"name":"Guard","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":99},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\lib.rs","byte_start":6983,"byte_end":7001,"line_start":177,"line_end":177,"column_start":32,"column_end":50},"alias_span":null,"name":"CompareAndSetError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":113},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\lib.rs","byte_start":7003,"byte_end":7024,"line_start":177,"line_end":177,"column_start":52,"column_end":73},"alias_span":null,"name":"CompareAndSetOrdering","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":893},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\lib.rs","byte_start":7132,"byte_end":7149,"line_start":184,"line_end":184,"column_start":33,"column_end":50},"alias_span":null,"name":"default_collector","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":891},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\lib.rs","byte_start":7151,"byte_end":7160,"line_start":184,"line_end":184,"column_start":52,"column_end":61},"alias_span":null,"name":"is_pinned","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":889},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\lib.rs","byte_start":7162,"byte_end":7165,"line_start":184,"line_end":184,"column_start":63,"column_end":66},"alias_span":null,"name":"pin","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\lib.rs","byte_start":0,"byte_end":7175,"line_start":1,"line_end":186,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":6},{"krate":0,"index":44},{"krate":0,"index":45},{"krate":0,"index":354},{"krate":0,"index":397},{"krate":0,"index":434},{"krate":0,"index":453},{"krate":0,"index":505},{"krate":0,"index":650},{"krate":0,"index":773},{"krate":0,"index":774},{"krate":0,"index":777},{"krate":0,"index":780},{"krate":0,"index":783},{"krate":0,"index":786},{"krate":0,"index":789},{"krate":0,"index":792},{"krate":0,"index":793},{"krate":0,"index":796},{"krate":0,"index":799},{"krate":0,"index":800},{"krate":0,"index":803},{"krate":0,"index":806},{"krate":0,"index":807},{"krate":0,"index":810},{"krate":0,"index":871},{"krate":0,"index":899},{"krate":0,"index":900},{"krate":0,"index":903},{"krate":0,"index":906}],"decl_id":null,"docs":" Epoch-based memory reclamation.","sig":null,"attributes":[{"value":"/ Epoch-based memory reclamation.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\lib.rs","byte_start":0,"byte_end":35,"line_start":1,"line_end":1,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\lib.rs","byte_start":36,"byte_end":39,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ An interesting problem concurrent collections deal with comes from the remove operation.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\lib.rs","byte_start":40,"byte_end":132,"line_start":3,"line_end":3,"column_start":1,"column_end":93}},{"value":"/ Suppose that a thread removes an element from a lock-free map, while another thread is reading","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\lib.rs","byte_start":133,"byte_end":231,"line_start":4,"line_end":4,"column_start":1,"column_end":99}},{"value":"/ that same element at the same time. The first thread must wait until the second thread stops","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\lib.rs","byte_start":232,"byte_end":328,"line_start":5,"line_end":5,"column_start":1,"column_end":97}},{"value":"/ reading the element. Only then it is safe to destruct it.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\lib.rs","byte_start":329,"byte_end":390,"line_start":6,"line_end":6,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\lib.rs","byte_start":391,"byte_end":394,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ Programming languages that come with garbage collectors solve this problem trivially. The","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\lib.rs","byte_start":395,"byte_end":488,"line_start":8,"line_end":8,"column_start":1,"column_end":94}},{"value":"/ garbage collector will destruct the removed element when no thread can hold a reference to it","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\lib.rs","byte_start":489,"byte_end":586,"line_start":9,"line_end":9,"column_start":1,"column_end":98}},{"value":"/ anymore.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\lib.rs","byte_start":587,"byte_end":599,"line_start":10,"line_end":10,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\lib.rs","byte_start":600,"byte_end":603,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This crate implements a basic memory reclamation mechanism, which is based on epochs. When an","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\lib.rs","byte_start":604,"byte_end":701,"line_start":12,"line_end":12,"column_start":1,"column_end":98}},{"value":"/ element gets removed from a concurrent collection, it is inserted into a pile of garbage and","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\lib.rs","byte_start":702,"byte_end":798,"line_start":13,"line_end":13,"column_start":1,"column_end":97}},{"value":"/ marked with the current epoch. Every time a thread accesses a collection, it checks the current","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\lib.rs","byte_start":799,"byte_end":898,"line_start":14,"line_end":14,"column_start":1,"column_end":100}},{"value":"/ epoch, attempts to increment it, and destructs some garbage that became so old that no thread","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\lib.rs","byte_start":899,"byte_end":996,"line_start":15,"line_end":15,"column_start":1,"column_end":98}},{"value":"/ can be referencing it anymore.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\lib.rs","byte_start":997,"byte_end":1031,"line_start":16,"line_end":16,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\lib.rs","byte_start":1032,"byte_end":1035,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ That is the general mechanism behind epoch-based memory reclamation, but the details are a bit","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\lib.rs","byte_start":1036,"byte_end":1134,"line_start":18,"line_end":18,"column_start":1,"column_end":99}},{"value":"/ more complicated. Anyhow, memory reclamation is designed to be fully automatic and something","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\lib.rs","byte_start":1135,"byte_end":1231,"line_start":19,"line_end":19,"column_start":1,"column_end":97}},{"value":"/ users of concurrent collections don't have to worry much about.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\lib.rs","byte_start":1232,"byte_end":1299,"line_start":20,"line_end":20,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\lib.rs","byte_start":1300,"byte_end":1303,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # Pointers","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\lib.rs","byte_start":1304,"byte_end":1318,"line_start":22,"line_end":22,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\lib.rs","byte_start":1319,"byte_end":1322,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Concurrent collections are built using atomic pointers. This module provides [`Atomic`], which","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\lib.rs","byte_start":1323,"byte_end":1421,"line_start":24,"line_end":24,"column_start":1,"column_end":99}},{"value":"/ is just a shared atomic pointer to a heap-allocated object. Loading an [`Atomic`] yields a","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\lib.rs","byte_start":1422,"byte_end":1516,"line_start":25,"line_end":25,"column_start":1,"column_end":95}},{"value":"/ [`Shared`], which is an epoch-protected pointer through which the loaded object can be safely","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\lib.rs","byte_start":1517,"byte_end":1614,"line_start":26,"line_end":26,"column_start":1,"column_end":98}},{"value":"/ read.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\lib.rs","byte_start":1615,"byte_end":1624,"line_start":27,"line_end":27,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\lib.rs","byte_start":1625,"byte_end":1628,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ # Pinning","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\lib.rs","byte_start":1629,"byte_end":1642,"line_start":29,"line_end":29,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\lib.rs","byte_start":1643,"byte_end":1646,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ Before an [`Atomic`] can be loaded, a participant must be [`pin`]ned. By pinning a participant","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\lib.rs","byte_start":1647,"byte_end":1745,"line_start":31,"line_end":31,"column_start":1,"column_end":99}},{"value":"/ we declare that any object that gets removed from now on must not be destructed just","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\lib.rs","byte_start":1746,"byte_end":1834,"line_start":32,"line_end":32,"column_start":1,"column_end":89}},{"value":"/ yet. Garbage collection of newly removed objects is suspended until the participant gets","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\lib.rs","byte_start":1835,"byte_end":1927,"line_start":33,"line_end":33,"column_start":1,"column_end":93}},{"value":"/ unpinned.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\lib.rs","byte_start":1928,"byte_end":1941,"line_start":34,"line_end":34,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\lib.rs","byte_start":1942,"byte_end":1945,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ # Garbage","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\lib.rs","byte_start":1946,"byte_end":1959,"line_start":36,"line_end":36,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\lib.rs","byte_start":1960,"byte_end":1963,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ Objects that get removed from concurrent collections must be stashed away until all currently","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\lib.rs","byte_start":1964,"byte_end":2061,"line_start":38,"line_end":38,"column_start":1,"column_end":98}},{"value":"/ pinned participants get unpinned. Such objects can be stored into a thread-local or global","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\lib.rs","byte_start":2062,"byte_end":2156,"line_start":39,"line_end":39,"column_start":1,"column_end":95}},{"value":"/ storage, where they are kept until the right time for their destruction comes.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\lib.rs","byte_start":2157,"byte_end":2239,"line_start":40,"line_end":40,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\lib.rs","byte_start":2240,"byte_end":2243,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ There is a global shared instance of garbage queue. You can [`defer`](Guard::defer) the execution of an","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\lib.rs","byte_start":2244,"byte_end":2351,"line_start":42,"line_end":42,"column_start":1,"column_end":108}},{"value":"/ arbitrary function until the global epoch is advanced enough. Most notably, concurrent data","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\lib.rs","byte_start":2352,"byte_end":2447,"line_start":43,"line_end":43,"column_start":1,"column_end":96}},{"value":"/ structures may defer the deallocation of an object.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\lib.rs","byte_start":2448,"byte_end":2503,"line_start":44,"line_end":44,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\lib.rs","byte_start":2504,"byte_end":2507,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ # APIs","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\lib.rs","byte_start":2508,"byte_end":2518,"line_start":46,"line_end":46,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\lib.rs","byte_start":2519,"byte_end":2522,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ For majority of use cases, just use the default garbage collector by invoking [`pin`]. If you","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\lib.rs","byte_start":2523,"byte_end":2620,"line_start":48,"line_end":48,"column_start":1,"column_end":98}},{"value":"/ want to create your own garbage collector, use the [`Collector`] API.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\lib.rs","byte_start":2621,"byte_end":2694,"line_start":49,"line_end":49,"column_start":1,"column_end":74}},{"value":"warn(missing_docs, missing_debug_implementations, rust_2018_idioms,\n       unreachable_pub)","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\lib.rs","byte_start":2855,"byte_end":2961,"line_start":58,"line_end":63,"column_start":1,"column_end":3}}]},{"kind":"Type","id":{"krate":0,"index":99},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12754779,"byte_end":12754797,"line_start":31,"line_end":31,"column_start":10,"column_end":28},"name":"CompareAndSetError","qualname":"::atomic::CompareAndSetError","value":"CompareExchangeError","parent":null,"children":[],"decl_id":null,"docs":" The error returned on failed compare-and-set operation.\n","sig":null,"attributes":[{"value":"/ The error returned on failed compare-and-set operation.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12754608,"byte_end":12754667,"line_start":28,"line_end":28,"column_start":1,"column_end":60}},{"value":"deprecated(note = \"Use `CompareExchangeError` instead\")","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12754711,"byte_end":12754769,"line_start":30,"line_end":30,"column_start":1,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":103},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12754915,"byte_end":12754935,"line_start":34,"line_end":34,"column_start":12,"column_end":32},"name":"CompareExchangeError","qualname":"::atomic::CompareExchangeError","value":"CompareExchangeError { current, new }","parent":null,"children":[{"krate":0,"index":107},{"krate":0,"index":108}],"decl_id":null,"docs":" The error returned on failed compare-and-swap operation.\n","sig":null,"attributes":[{"value":"/ The error returned on failed compare-and-swap operation.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12754843,"byte_end":12754903,"line_start":33,"line_end":33,"column_start":1,"column_end":61}}]},{"kind":"Field","id":{"krate":0,"index":107},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12755065,"byte_end":12755072,"line_start":36,"line_end":36,"column_start":9,"column_end":16},"name":"current","qualname":"::atomic::CompareExchangeError::current","value":"atomic::Shared<'g, T>","parent":{"krate":0,"index":103},"children":[],"decl_id":null,"docs":" The value in the atomic pointer at the time of the failed operation.\n","sig":null,"attributes":[{"value":"/ The value in the atomic pointer at the time of the failed operation.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12754984,"byte_end":12755056,"line_start":35,"line_end":35,"column_start":5,"column_end":77}}]},{"kind":"Field","id":{"krate":0,"index":108},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12755158,"byte_end":12755161,"line_start":39,"line_end":39,"column_start":9,"column_end":12},"name":"new","qualname":"::atomic::CompareExchangeError::new","value":"P","parent":{"krate":0,"index":103},"children":[],"decl_id":null,"docs":" The new value, which the operation failed to store.\n","sig":null,"attributes":[{"value":"/ The new value, which the operation failed to store.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12755094,"byte_end":12755149,"line_start":38,"line_end":38,"column_start":5,"column_end":60}}]},{"kind":"Trait","id":{"krate":0,"index":113},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12756272,"byte_end":12756293,"line_start":67,"line_end":67,"column_start":11,"column_end":32},"name":"CompareAndSetOrdering","qualname":"::atomic::CompareAndSetOrdering","value":"CompareAndSetOrdering","parent":null,"children":[{"krate":0,"index":114},{"krate":0,"index":115}],"decl_id":null,"docs":" Memory orderings for compare-and-set operations.","sig":null,"attributes":[{"value":"/ Memory orderings for compare-and-set operations.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12755476,"byte_end":12755528,"line_start":51,"line_end":51,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12755529,"byte_end":12755532,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ A compare-and-set operation can have different memory orderings depending on whether it","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12755533,"byte_end":12755624,"line_start":53,"line_end":53,"column_start":1,"column_end":92}},{"value":"/ succeeds or fails. This trait generalizes different ways of specifying memory orderings.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12755625,"byte_end":12755717,"line_start":54,"line_end":54,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12755718,"byte_end":12755721,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ The two ways of specifying orderings for compare-and-set are:","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12755722,"byte_end":12755787,"line_start":56,"line_end":56,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12755788,"byte_end":12755791,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ 1. Just one `Ordering` for the success case. In case of failure, the strongest appropriate","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12755792,"byte_end":12755886,"line_start":58,"line_end":58,"column_start":1,"column_end":95}},{"value":"/    ordering is chosen.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12755887,"byte_end":12755913,"line_start":59,"line_end":59,"column_start":1,"column_end":27}},{"value":"/ 2. A pair of `Ordering`s. The first one is for the success case, while the second one is","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12755914,"byte_end":12756006,"line_start":60,"line_end":60,"column_start":1,"column_end":93}},{"value":"/    for the failure case.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12756007,"byte_end":12756035,"line_start":61,"line_end":61,"column_start":1,"column_end":29}},{"value":"deprecated(note =\n             \"`compare_and_set` and `compare_and_set_weak` that use this trait are deprecated, \\\n            use `compare_exchange` or `compare_exchange_weak instead`\")","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12756079,"byte_end":12756261,"line_start":63,"line_end":66,"column_start":1,"column_end":3}}]},{"kind":"Method","id":{"krate":0,"index":114},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12756359,"byte_end":12756366,"line_start":69,"line_end":69,"column_start":8,"column_end":15},"name":"success","qualname":"::atomic::CompareAndSetOrdering::success","value":"pub fn success(&Self) -> Ordering","parent":{"krate":0,"index":113},"children":[],"decl_id":null,"docs":" The ordering of the operation when it succeeds.\n","sig":null,"attributes":[{"value":"/ The ordering of the operation when it succeeds.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12756300,"byte_end":12756351,"line_start":68,"line_end":68,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":115},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12756584,"byte_end":12756591,"line_start":75,"line_end":75,"column_start":8,"column_end":15},"name":"failure","qualname":"::atomic::CompareAndSetOrdering::failure","value":"pub fn failure(&Self) -> Ordering","parent":{"krate":0,"index":113},"children":[],"decl_id":null,"docs":" The ordering of the operation when it fails.","sig":null,"attributes":[{"value":"/ The ordering of the operation when it fails.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12756392,"byte_end":12756440,"line_start":71,"line_end":71,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12756445,"byte_end":12756448,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ The failure ordering can't be `Release` or `AcqRel` and must be equivalent or weaker than","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12756453,"byte_end":12756546,"line_start":73,"line_end":73,"column_start":5,"column_end":98}},{"value":"/ the success ordering.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12756551,"byte_end":12756576,"line_start":74,"line_end":74,"column_start":5,"column_end":30}}]},{"kind":"Trait","id":{"krate":0,"index":130},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12758941,"byte_end":12758950,"line_start":150,"line_end":150,"column_start":11,"column_end":20},"name":"Pointable","qualname":"::atomic::Pointable","value":"Pointable","parent":null,"children":[{"krate":0,"index":131},{"krate":0,"index":132},{"krate":0,"index":133},{"krate":0,"index":134},{"krate":0,"index":136},{"krate":0,"index":138}],"decl_id":null,"docs":" Types that are pointed to by a single word.","sig":null,"attributes":[{"value":"/ Types that are pointed to by a single word.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12757968,"byte_end":12758015,"line_start":130,"line_end":130,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12758016,"byte_end":12758019,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/ In concurrent programming, it is necessary to represent an object within a word because atomic","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12758020,"byte_end":12758118,"line_start":132,"line_end":132,"column_start":1,"column_end":99}},{"value":"/ operations (e.g., reads, writes, read-modify-writes) support only single words.  This trait","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12758119,"byte_end":12758214,"line_start":133,"line_end":133,"column_start":1,"column_end":96}},{"value":"/ qualifies such types that are pointed to by a single word.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12758215,"byte_end":12758277,"line_start":134,"line_end":134,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12758278,"byte_end":12758281,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"/ The trait generalizes `Box<T>` for a sized type `T`.  In a box, an object of type `T` is","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12758282,"byte_end":12758374,"line_start":136,"line_end":136,"column_start":1,"column_end":93}},{"value":"/ allocated in heap and it is owned by a single-word pointer.  This trait is also implemented for","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12758375,"byte_end":12758474,"line_start":137,"line_end":137,"column_start":1,"column_end":100}},{"value":"/ `[MaybeUninit<T>]` by storing its size along with its elements and pointing to the pair of array","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12758475,"byte_end":12758575,"line_start":138,"line_end":138,"column_start":1,"column_end":101}},{"value":"/ size and elements.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12758576,"byte_end":12758598,"line_start":139,"line_end":139,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12758599,"byte_end":12758602,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ Pointers to `Pointable` types can be stored in [`Atomic`], [`Owned`], and [`Shared`].  In","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12758603,"byte_end":12758696,"line_start":141,"line_end":141,"column_start":1,"column_end":94}},{"value":"/ particular, Crossbeam supports dynamically sized slices as follows.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12758697,"byte_end":12758768,"line_start":142,"line_end":142,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12758769,"byte_end":12758772,"line_start":143,"line_end":143,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12758773,"byte_end":12758780,"line_start":144,"line_end":144,"column_start":1,"column_end":8}},{"value":"/ use std::mem::MaybeUninit;","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12758781,"byte_end":12758811,"line_start":145,"line_end":145,"column_start":1,"column_end":31}},{"value":"/ use crossbeam_epoch::Owned;","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12758812,"byte_end":12758843,"line_start":146,"line_end":146,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12758844,"byte_end":12758847,"line_start":147,"line_end":147,"column_start":1,"column_end":4}},{"value":"/ let o = Owned::<[MaybeUninit<i32>]>::init(10); // allocating [i32; 10]","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12758848,"byte_end":12758922,"line_start":148,"line_end":148,"column_start":1,"column_end":75}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12758923,"byte_end":12758930,"line_start":149,"line_end":149,"column_start":1,"column_end":8}}]},{"kind":"Const","id":{"krate":0,"index":131},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12758997,"byte_end":12759002,"line_start":152,"line_end":152,"column_start":11,"column_end":16},"name":"ALIGN","qualname":"::atomic::Pointable::ALIGN","value":"usize","parent":{"krate":0,"index":130},"children":[],"decl_id":null,"docs":" The alignment of pointer.\n","sig":null,"attributes":[{"value":"/ The alignment of pointer.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12758957,"byte_end":12758986,"line_start":151,"line_end":151,"column_start":5,"column_end":34}}]},{"kind":"Type","id":{"krate":0,"index":132},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12759056,"byte_end":12759060,"line_start":155,"line_end":155,"column_start":10,"column_end":14},"name":"Init","qualname":"::atomic::Pointable::Init","value":"type Init;","parent":{"krate":0,"index":130},"children":[],"decl_id":null,"docs":" The type for initializers.\n","sig":null,"attributes":[{"value":"/ The type for initializers.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12759016,"byte_end":12759046,"line_start":154,"line_end":154,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":133},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12759212,"byte_end":12759216,"line_start":162,"line_end":162,"column_start":15,"column_end":19},"name":"init","qualname":"::atomic::Pointable::init","value":"pub unsafe fn init(Self::Init) -> usize","parent":{"krate":0,"index":130},"children":[],"decl_id":null,"docs":" Initializes a with the given initializer.","sig":null,"attributes":[{"value":"/ Initializes a with the given initializer.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12759067,"byte_end":12759112,"line_start":157,"line_end":157,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12759117,"byte_end":12759120,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12759125,"byte_end":12759137,"line_start":159,"line_end":159,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12759142,"byte_end":12759145,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ The result should be a multiple of `ALIGN`.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12759150,"byte_end":12759197,"line_start":161,"line_end":161,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":134},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12759580,"byte_end":12759585,"line_start":171,"line_end":171,"column_start":15,"column_end":20},"name":"deref","qualname":"::atomic::Pointable::deref","value":"pub unsafe fn deref<'a>(usize) -> &'a Self","parent":{"krate":0,"index":130},"children":[],"decl_id":null,"docs":" Dereferences the given pointer.","sig":null,"attributes":[{"value":"/ Dereferences the given pointer.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12759250,"byte_end":12759285,"line_start":164,"line_end":164,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12759290,"byte_end":12759293,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12759298,"byte_end":12759310,"line_start":166,"line_end":166,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12759315,"byte_end":12759318,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ - The given `ptr` should have been initialized with [`Pointable::init`].","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12759323,"byte_end":12759399,"line_start":168,"line_end":168,"column_start":5,"column_end":81}},{"value":"/ - `ptr` should not have yet been dropped by [`Pointable::drop`].","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12759404,"byte_end":12759472,"line_start":169,"line_end":169,"column_start":5,"column_end":73}},{"value":"/ - `ptr` should not be mutably dereferenced by [`Pointable::deref_mut`] concurrently.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12759477,"byte_end":12759565,"line_start":170,"line_end":170,"column_start":5,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":136},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12759984,"byte_end":12759993,"line_start":181,"line_end":181,"column_start":15,"column_end":24},"name":"deref_mut","qualname":"::atomic::Pointable::deref_mut","value":"pub unsafe fn deref_mut<'a>(usize) -> &'a mut Self","parent":{"krate":0,"index":130},"children":[],"decl_id":null,"docs":" Mutably dereferences the given pointer.","sig":null,"attributes":[{"value":"/ Mutably dereferences the given pointer.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12759620,"byte_end":12759663,"line_start":173,"line_end":173,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12759668,"byte_end":12759671,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12759676,"byte_end":12759688,"line_start":175,"line_end":175,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12759693,"byte_end":12759696,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ - The given `ptr` should have been initialized with [`Pointable::init`].","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12759701,"byte_end":12759777,"line_start":177,"line_end":177,"column_start":5,"column_end":81}},{"value":"/ - `ptr` should not have yet been dropped by [`Pointable::drop`].","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12759782,"byte_end":12759850,"line_start":178,"line_end":178,"column_start":5,"column_end":73}},{"value":"/ - `ptr` should not be dereferenced by [`Pointable::deref`] or [`Pointable::deref_mut`]","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12759855,"byte_end":12759945,"line_start":179,"line_end":179,"column_start":5,"column_end":95}},{"value":"/   concurrently.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12759950,"byte_end":12759969,"line_start":180,"line_end":180,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":138},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12760406,"byte_end":12760410,"line_start":191,"line_end":191,"column_start":15,"column_end":19},"name":"drop","qualname":"::atomic::Pointable::drop","value":"pub unsafe fn drop(usize)","parent":{"krate":0,"index":130},"children":[],"decl_id":null,"docs":" Drops the object pointed to by the given pointer.","sig":null,"attributes":[{"value":"/ Drops the object pointed to by the given pointer.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12760032,"byte_end":12760085,"line_start":183,"line_end":183,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12760090,"byte_end":12760093,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12760098,"byte_end":12760110,"line_start":185,"line_end":185,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12760115,"byte_end":12760118,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ - The given `ptr` should have been initialized with [`Pointable::init`].","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12760123,"byte_end":12760199,"line_start":187,"line_end":187,"column_start":5,"column_end":81}},{"value":"/ - `ptr` should not have yet been dropped by [`Pointable::drop`].","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12760204,"byte_end":12760272,"line_start":188,"line_end":188,"column_start":5,"column_end":73}},{"value":"/ - `ptr` should not be dereferenced by [`Pointable::deref`] or [`Pointable::deref_mut`]","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12760277,"byte_end":12760367,"line_start":189,"line_end":189,"column_start":5,"column_end":95}},{"value":"/   concurrently.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12760372,"byte_end":12760391,"line_start":190,"line_end":190,"column_start":5,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":164},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12763519,"byte_end":12763525,"line_start":291,"line_end":291,"column_start":12,"column_end":18},"name":"Atomic","qualname":"::atomic::Atomic","value":"Atomic {  }","parent":null,"children":[{"krate":0,"index":166},{"krate":0,"index":167}],"decl_id":null,"docs":" An atomic pointer that can be safely shared between threads.","sig":null,"attributes":[{"value":"/ An atomic pointer that can be safely shared between threads.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12763001,"byte_end":12763065,"line_start":282,"line_end":282,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12763066,"byte_end":12763069,"line_start":283,"line_end":283,"column_start":1,"column_end":4}},{"value":"/ The pointer must be properly aligned. Since it is aligned, a tag can be stored into the unused","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12763070,"byte_end":12763168,"line_start":284,"line_end":284,"column_start":1,"column_end":99}},{"value":"/ least significant bits of the address. For example, the tag for a pointer to a sized type `T`","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12763169,"byte_end":12763266,"line_start":285,"line_end":285,"column_start":1,"column_end":98}},{"value":"/ should be less than `(1 << mem::align_of::<T>().trailing_zeros())`.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12763267,"byte_end":12763338,"line_start":286,"line_end":286,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12763339,"byte_end":12763342,"line_start":287,"line_end":287,"column_start":1,"column_end":4}},{"value":"/ Any method that loads the pointer must be passed a reference to a [`Guard`].","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12763343,"byte_end":12763423,"line_start":288,"line_end":288,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12763424,"byte_end":12763427,"line_start":289,"line_end":289,"column_start":1,"column_end":4}},{"value":"/ Crossbeam supports dynamically sized types.  See [`Pointable`] for details.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12763428,"byte_end":12763507,"line_start":290,"line_end":290,"column_start":1,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":174},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12764011,"byte_end":12764014,"line_start":309,"line_end":309,"column_start":12,"column_end":15},"name":"new","qualname":"<Atomic<T>>::new","value":"pub fn new(T) -> Atomic<T>","parent":null,"children":[],"decl_id":null,"docs":" Allocates `value` on the heap and returns a new atomic pointer pointing to it.","sig":null,"attributes":[{"value":"/ Allocates `value` on the heap and returns a new atomic pointer pointing to it.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12763778,"byte_end":12763860,"line_start":300,"line_end":300,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12763865,"byte_end":12763868,"line_start":301,"line_end":301,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12763873,"byte_end":12763887,"line_start":302,"line_end":302,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12763892,"byte_end":12763895,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12763900,"byte_end":12763907,"line_start":304,"line_end":304,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Atomic;","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12763912,"byte_end":12763944,"line_start":305,"line_end":305,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12763949,"byte_end":12763952,"line_start":306,"line_end":306,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12763957,"byte_end":12763987,"line_start":307,"line_end":307,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12763992,"byte_end":12763999,"line_start":308,"line_end":308,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":177},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12764358,"byte_end":12764362,"line_start":324,"line_end":324,"column_start":12,"column_end":16},"name":"init","qualname":"<Atomic<T>>::init","value":"pub fn init(T::Init) -> Atomic<T>","parent":null,"children":[],"decl_id":null,"docs":" Allocates `value` on the heap and returns a new atomic pointer pointing to it.","sig":null,"attributes":[{"value":"/ Allocates `value` on the heap and returns a new atomic pointer pointing to it.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12764117,"byte_end":12764199,"line_start":315,"line_end":315,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12764204,"byte_end":12764207,"line_start":316,"line_end":316,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12764212,"byte_end":12764226,"line_start":317,"line_end":317,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12764231,"byte_end":12764234,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12764239,"byte_end":12764246,"line_start":319,"line_end":319,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Atomic;","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12764251,"byte_end":12764283,"line_start":320,"line_end":320,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12764288,"byte_end":12764291,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::<i32>::init(1234);","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12764296,"byte_end":12764334,"line_start":322,"line_end":322,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12764339,"byte_end":12764346,"line_start":323,"line_end":323,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":179},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12764951,"byte_end":12764955,"line_start":347,"line_end":347,"column_start":12,"column_end":16},"name":"null","qualname":"<Atomic<T>>::null","value":"pub fn null() -> Atomic<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a new null atomic pointer.","sig":null,"attributes":[{"value":"/ Returns a new null atomic pointer.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12764667,"byte_end":12764705,"line_start":336,"line_end":336,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12764710,"byte_end":12764713,"line_start":337,"line_end":337,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12764718,"byte_end":12764732,"line_start":338,"line_end":338,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12764737,"byte_end":12764740,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12764745,"byte_end":12764752,"line_start":340,"line_end":340,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Atomic;","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12764757,"byte_end":12764789,"line_start":341,"line_end":341,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12764794,"byte_end":12764797,"line_start":342,"line_end":342,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::<i32>::null();","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12764802,"byte_end":12764836,"line_start":343,"line_end":343,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12764841,"byte_end":12764848,"line_start":344,"line_end":344,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12764853,"byte_end":12764856,"line_start":345,"line_end":345,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":180},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12765540,"byte_end":12765544,"line_start":369,"line_end":369,"column_start":12,"column_end":16},"name":"load","qualname":"<Atomic<T>>::load","value":"pub fn load<'g>(&Self, Ordering, &'g Guard) -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Loads a `Shared` from the atomic pointer.","sig":null,"attributes":[{"value":"/ Loads a `Shared` from the atomic pointer.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12765082,"byte_end":12765127,"line_start":354,"line_end":354,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12765132,"byte_end":12765135,"line_start":355,"line_end":355,"column_start":5,"column_end":8}},{"value":"/ This method takes an [`Ordering`] argument which describes the memory ordering of this","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12765140,"byte_end":12765230,"line_start":356,"line_end":356,"column_start":5,"column_end":95}},{"value":"/ operation.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12765235,"byte_end":12765249,"line_start":357,"line_end":357,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12765254,"byte_end":12765257,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12765262,"byte_end":12765276,"line_start":359,"line_end":359,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12765281,"byte_end":12765284,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12765289,"byte_end":12765296,"line_start":361,"line_end":361,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12765301,"byte_end":12765350,"line_start":362,"line_end":362,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12765355,"byte_end":12765399,"line_start":363,"line_end":363,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12765404,"byte_end":12765407,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12765412,"byte_end":12765442,"line_start":365,"line_end":365,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12765447,"byte_end":12765477,"line_start":366,"line_end":366,"column_start":5,"column_end":35}},{"value":"/ let p = a.load(SeqCst, guard);","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12765482,"byte_end":12765516,"line_start":367,"line_end":367,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12765521,"byte_end":12765528,"line_start":368,"line_end":368,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":182},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12766551,"byte_end":12766563,"line_start":394,"line_end":394,"column_start":12,"column_end":24},"name":"load_consume","qualname":"<Atomic<T>>::load_consume","value":"pub fn load_consume<'g>(&Self, &'g Guard) -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Loads a `Shared` from the atomic pointer using a \"consume\" memory ordering.","sig":null,"attributes":[{"value":"/ Loads a `Shared` from the atomic pointer using a \"consume\" memory ordering.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12765674,"byte_end":12765753,"line_start":373,"line_end":373,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12765758,"byte_end":12765761,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ This is similar to the \"acquire\" ordering, except that an ordering is","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12765766,"byte_end":12765839,"line_start":375,"line_end":375,"column_start":5,"column_end":78}},{"value":"/ only guaranteed with operations that \"depend on\" the result of the load.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12765844,"byte_end":12765920,"line_start":376,"line_end":376,"column_start":5,"column_end":81}},{"value":"/ However consume loads are usually much faster than acquire loads on","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12765925,"byte_end":12765996,"line_start":377,"line_end":377,"column_start":5,"column_end":76}},{"value":"/ architectures with a weak memory model since they don't require memory","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12766001,"byte_end":12766075,"line_start":378,"line_end":378,"column_start":5,"column_end":79}},{"value":"/ fence instructions.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12766080,"byte_end":12766103,"line_start":379,"line_end":379,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12766108,"byte_end":12766111,"line_start":380,"line_end":380,"column_start":5,"column_end":8}},{"value":"/ The exact definition of \"depend on\" is a bit vague, but it works as you","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12766116,"byte_end":12766191,"line_start":381,"line_end":381,"column_start":5,"column_end":80}},{"value":"/ would expect in practice since a lot of software, especially the Linux","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12766196,"byte_end":12766270,"line_start":382,"line_end":382,"column_start":5,"column_end":79}},{"value":"/ kernel, rely on this behavior.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12766275,"byte_end":12766309,"line_start":383,"line_end":383,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12766314,"byte_end":12766317,"line_start":384,"line_end":384,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12766322,"byte_end":12766336,"line_start":385,"line_end":385,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12766341,"byte_end":12766344,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12766349,"byte_end":12766356,"line_start":387,"line_end":387,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12766361,"byte_end":12766410,"line_start":388,"line_end":388,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12766415,"byte_end":12766418,"line_start":389,"line_end":389,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12766423,"byte_end":12766453,"line_start":390,"line_end":390,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12766458,"byte_end":12766488,"line_start":391,"line_end":391,"column_start":5,"column_end":35}},{"value":"/ let p = a.load_consume(guard);","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12766493,"byte_end":12766527,"line_start":392,"line_end":392,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12766532,"byte_end":12766539,"line_start":393,"line_end":393,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":184},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12767171,"byte_end":12767176,"line_start":413,"line_end":413,"column_start":12,"column_end":17},"name":"store","qualname":"<Atomic<T>>::store","value":"pub fn store<P: Pointer<T>>(&Self, P, Ordering)","parent":null,"children":[],"decl_id":null,"docs":" Stores a `Shared` or `Owned` pointer into the atomic pointer.","sig":null,"attributes":[{"value":"/ Stores a `Shared` or `Owned` pointer into the atomic pointer.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12766683,"byte_end":12766748,"line_start":398,"line_end":398,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12766753,"byte_end":12766756,"line_start":399,"line_end":399,"column_start":5,"column_end":8}},{"value":"/ This method takes an [`Ordering`] argument which describes the memory ordering of this","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12766761,"byte_end":12766851,"line_start":400,"line_end":400,"column_start":5,"column_end":95}},{"value":"/ operation.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12766856,"byte_end":12766870,"line_start":401,"line_end":401,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12766875,"byte_end":12766878,"line_start":402,"line_end":402,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12766883,"byte_end":12766897,"line_start":403,"line_end":403,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12766902,"byte_end":12766905,"line_start":404,"line_end":404,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12766910,"byte_end":12766917,"line_start":405,"line_end":405,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{Atomic, Owned, Shared};","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12766922,"byte_end":12766971,"line_start":406,"line_end":406,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12766976,"byte_end":12767020,"line_start":407,"line_end":407,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12767025,"byte_end":12767028,"line_start":408,"line_end":408,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12767033,"byte_end":12767063,"line_start":409,"line_end":409,"column_start":5,"column_end":35}},{"value":"/ a.store(Shared::null(), SeqCst);","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12767068,"byte_end":12767104,"line_start":410,"line_end":410,"column_start":5,"column_end":41}},{"value":"/ a.store(Owned::new(1234), SeqCst);","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12767109,"byte_end":12767147,"line_start":411,"line_end":411,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12767152,"byte_end":12767159,"line_start":412,"line_end":412,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":186},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12767826,"byte_end":12767830,"line_start":433,"line_end":433,"column_start":12,"column_end":16},"name":"swap","qualname":"<Atomic<T>>::swap","value":"pub fn swap<'g, P: Pointer<T>>(&Self, P, Ordering, &'g Guard) -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Stores a `Shared` or `Owned` pointer into the atomic pointer, returning the previous\n `Shared`.","sig":null,"attributes":[{"value":"/ Stores a `Shared` or `Owned` pointer into the atomic pointer, returning the previous","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12767283,"byte_end":12767371,"line_start":417,"line_end":417,"column_start":5,"column_end":93}},{"value":"/ `Shared`.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12767376,"byte_end":12767389,"line_start":418,"line_end":418,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12767394,"byte_end":12767397,"line_start":419,"line_end":419,"column_start":5,"column_end":8}},{"value":"/ This method takes an [`Ordering`] argument which describes the memory ordering of this","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12767402,"byte_end":12767492,"line_start":420,"line_end":420,"column_start":5,"column_end":95}},{"value":"/ operation.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12767497,"byte_end":12767511,"line_start":421,"line_end":421,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12767516,"byte_end":12767519,"line_start":422,"line_end":422,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12767524,"byte_end":12767538,"line_start":423,"line_end":423,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12767543,"byte_end":12767546,"line_start":424,"line_end":424,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12767551,"byte_end":12767558,"line_start":425,"line_end":425,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Shared};","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12767563,"byte_end":12767620,"line_start":426,"line_end":426,"column_start":5,"column_end":62}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12767625,"byte_end":12767669,"line_start":427,"line_end":427,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12767674,"byte_end":12767677,"line_start":428,"line_end":428,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12767682,"byte_end":12767712,"line_start":429,"line_end":429,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12767717,"byte_end":12767747,"line_start":430,"line_end":430,"column_start":5,"column_end":35}},{"value":"/ let p = a.swap(Shared::null(), SeqCst, guard);","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12767752,"byte_end":12767802,"line_start":431,"line_end":431,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12767807,"byte_end":12767814,"line_start":432,"line_end":432,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":189},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12769666,"byte_end":12769682,"line_start":467,"line_end":467,"column_start":12,"column_end":28},"name":"compare_exchange","qualname":"<Atomic<T>>::compare_exchange","value":"pub fn compare_exchange<'g,\n                        P>(&Self, Shared<, T>, P, Ordering, Ordering,\n                           &'g Guard) -> Result<Shared, CompareExchangeError>\nwhere P: Pointer<T>","parent":null,"children":[],"decl_id":null,"docs":" Stores the pointer `new` (either `Shared` or `Owned`) into the atomic pointer if the current\n value is the same as `current`. The tag is also taken into account, so two pointers to the\n same object, but with different tags, will not be considered equal.","sig":null,"attributes":[{"value":"/ Stores the pointer `new` (either `Shared` or `Owned`) into the atomic pointer if the current","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12768001,"byte_end":12768097,"line_start":437,"line_end":437,"column_start":5,"column_end":101}},{"value":"/ value is the same as `current`. The tag is also taken into account, so two pointers to the","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12768102,"byte_end":12768196,"line_start":438,"line_end":438,"column_start":5,"column_end":99}},{"value":"/ same object, but with different tags, will not be considered equal.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12768201,"byte_end":12768272,"line_start":439,"line_end":439,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12768277,"byte_end":12768280,"line_start":440,"line_end":440,"column_start":5,"column_end":8}},{"value":"/ The return value is a result indicating whether the new pointer was written. On success the","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12768285,"byte_end":12768380,"line_start":441,"line_end":441,"column_start":5,"column_end":100}},{"value":"/ pointer that was written is returned. On failure the actual current value and `new` are","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12768385,"byte_end":12768476,"line_start":442,"line_end":442,"column_start":5,"column_end":96}},{"value":"/ returned.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12768481,"byte_end":12768494,"line_start":443,"line_end":443,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12768499,"byte_end":12768502,"line_start":444,"line_end":444,"column_start":5,"column_end":8}},{"value":"/ This method takes two `Ordering` arguments to describe the memory","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12768507,"byte_end":12768576,"line_start":445,"line_end":445,"column_start":5,"column_end":74}},{"value":"/ ordering of this operation. `success` describes the required ordering for the","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12768581,"byte_end":12768662,"line_start":446,"line_end":446,"column_start":5,"column_end":86}},{"value":"/ read-modify-write operation that takes place if the comparison with `current` succeeds.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12768667,"byte_end":12768758,"line_start":447,"line_end":447,"column_start":5,"column_end":96}},{"value":"/ `failure` describes the required ordering for the load operation that takes place when","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12768763,"byte_end":12768853,"line_start":448,"line_end":448,"column_start":5,"column_end":95}},{"value":"/ the comparison fails. Using `Acquire` as success ordering makes the store part","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12768858,"byte_end":12768940,"line_start":449,"line_end":449,"column_start":5,"column_end":87}},{"value":"/ of this operation `Relaxed`, and using `Release` makes the successful load","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12768945,"byte_end":12769023,"line_start":450,"line_end":450,"column_start":5,"column_end":83}},{"value":"/ `Relaxed`. The failure ordering can only be `SeqCst`, `Acquire` or `Relaxed`","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12769028,"byte_end":12769108,"line_start":451,"line_end":451,"column_start":5,"column_end":85}},{"value":"/ and must be equivalent to or weaker than the success ordering.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12769113,"byte_end":12769179,"line_start":452,"line_end":452,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12769184,"byte_end":12769187,"line_start":453,"line_end":453,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12769192,"byte_end":12769206,"line_start":454,"line_end":454,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12769211,"byte_end":12769214,"line_start":455,"line_end":455,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12769219,"byte_end":12769226,"line_start":456,"line_end":456,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned, Shared};","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12769231,"byte_end":12769295,"line_start":457,"line_end":457,"column_start":5,"column_end":69}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12769300,"byte_end":12769344,"line_start":458,"line_end":458,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12769349,"byte_end":12769352,"line_start":459,"line_end":459,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12769357,"byte_end":12769387,"line_start":460,"line_end":460,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12769392,"byte_end":12769395,"line_start":461,"line_end":461,"column_start":5,"column_end":8}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12769400,"byte_end":12769430,"line_start":462,"line_end":462,"column_start":5,"column_end":35}},{"value":"/ let curr = a.load(SeqCst, guard);","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12769435,"byte_end":12769472,"line_start":463,"line_end":463,"column_start":5,"column_end":42}},{"value":"/ let res1 = a.compare_exchange(curr, Shared::null(), SeqCst, SeqCst, guard);","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12769477,"byte_end":12769556,"line_start":464,"line_end":464,"column_start":5,"column_end":84}},{"value":"/ let res2 = a.compare_exchange(curr, Owned::new(5678), SeqCst, SeqCst, guard);","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12769561,"byte_end":12769642,"line_start":465,"line_end":465,"column_start":5,"column_end":86}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12769647,"byte_end":12769654,"line_start":466,"line_end":466,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":194},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12772716,"byte_end":12772737,"line_start":542,"line_end":542,"column_start":12,"column_end":33},"name":"compare_exchange_weak","qualname":"<Atomic<T>>::compare_exchange_weak","value":"pub fn compare_exchange_weak<'g,\n                             P>(&Self, Shared<, T>, P, Ordering, Ordering,\n                                &'g Guard)\n-> Result<Shared, CompareExchangeError> where P: Pointer<T>","parent":null,"children":[],"decl_id":null,"docs":" Stores the pointer `new` (either `Shared` or `Owned`) into the atomic pointer if the current\n value is the same as `current`. The tag is also taken into account, so two pointers to the\n same object, but with different tags, will not be considered equal.","sig":null,"attributes":[{"value":"/ Stores the pointer `new` (either `Shared` or `Owned`) into the atomic pointer if the current","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12770344,"byte_end":12770440,"line_start":490,"line_end":490,"column_start":5,"column_end":101}},{"value":"/ value is the same as `current`. The tag is also taken into account, so two pointers to the","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12770445,"byte_end":12770539,"line_start":491,"line_end":491,"column_start":5,"column_end":99}},{"value":"/ same object, but with different tags, will not be considered equal.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12770544,"byte_end":12770615,"line_start":492,"line_end":492,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12770620,"byte_end":12770623,"line_start":493,"line_end":493,"column_start":5,"column_end":8}},{"value":"/ Unlike [`compare_exchange`], this method is allowed to spuriously fail even when comparison","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12770628,"byte_end":12770723,"line_start":494,"line_end":494,"column_start":5,"column_end":100}},{"value":"/ succeeds, which can result in more efficient code on some platforms.  The return value is a","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12770728,"byte_end":12770823,"line_start":495,"line_end":495,"column_start":5,"column_end":100}},{"value":"/ result indicating whether the new pointer was written. On success the pointer that was","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12770828,"byte_end":12770918,"line_start":496,"line_end":496,"column_start":5,"column_end":95}},{"value":"/ written is returned. On failure the actual current value and `new` are returned.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12770923,"byte_end":12771007,"line_start":497,"line_end":497,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12771012,"byte_end":12771015,"line_start":498,"line_end":498,"column_start":5,"column_end":8}},{"value":"/ This method takes two `Ordering` arguments to describe the memory","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12771020,"byte_end":12771089,"line_start":499,"line_end":499,"column_start":5,"column_end":74}},{"value":"/ ordering of this operation. `success` describes the required ordering for the","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12771094,"byte_end":12771175,"line_start":500,"line_end":500,"column_start":5,"column_end":86}},{"value":"/ read-modify-write operation that takes place if the comparison with `current` succeeds.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12771180,"byte_end":12771271,"line_start":501,"line_end":501,"column_start":5,"column_end":96}},{"value":"/ `failure` describes the required ordering for the load operation that takes place when","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12771276,"byte_end":12771366,"line_start":502,"line_end":502,"column_start":5,"column_end":95}},{"value":"/ the comparison fails. Using `Acquire` as success ordering makes the store part","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12771371,"byte_end":12771453,"line_start":503,"line_end":503,"column_start":5,"column_end":87}},{"value":"/ of this operation `Relaxed`, and using `Release` makes the successful load","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12771458,"byte_end":12771536,"line_start":504,"line_end":504,"column_start":5,"column_end":83}},{"value":"/ `Relaxed`. The failure ordering can only be `SeqCst`, `Acquire` or `Relaxed`","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12771541,"byte_end":12771621,"line_start":505,"line_end":505,"column_start":5,"column_end":85}},{"value":"/ and must be equivalent to or weaker than the success ordering.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12771626,"byte_end":12771692,"line_start":506,"line_end":506,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12771697,"byte_end":12771700,"line_start":507,"line_end":507,"column_start":5,"column_end":8}},{"value":"/ [`compare_exchange`]: Atomic::compare_exchange","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12771705,"byte_end":12771755,"line_start":508,"line_end":508,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12771760,"byte_end":12771763,"line_start":509,"line_end":509,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12771768,"byte_end":12771782,"line_start":510,"line_end":510,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12771787,"byte_end":12771790,"line_start":511,"line_end":511,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12771795,"byte_end":12771802,"line_start":512,"line_end":512,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned, Shared};","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12771807,"byte_end":12771871,"line_start":513,"line_end":513,"column_start":5,"column_end":69}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12771876,"byte_end":12771920,"line_start":514,"line_end":514,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12771925,"byte_end":12771928,"line_start":515,"line_end":515,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12771933,"byte_end":12771963,"line_start":516,"line_end":516,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12771968,"byte_end":12771998,"line_start":517,"line_end":517,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12772003,"byte_end":12772006,"line_start":518,"line_end":518,"column_start":5,"column_end":8}},{"value":"/ let mut new = Owned::new(5678);","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12772011,"byte_end":12772046,"line_start":519,"line_end":519,"column_start":5,"column_end":40}},{"value":"/ let mut ptr = a.load(SeqCst, guard);","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12772051,"byte_end":12772091,"line_start":520,"line_end":520,"column_start":5,"column_end":45}},{"value":"/ loop {","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12772096,"byte_end":12772106,"line_start":521,"line_end":521,"column_start":5,"column_end":15}},{"value":"/     match a.compare_exchange_weak(ptr, new, SeqCst, SeqCst, guard) {","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12772111,"byte_end":12772183,"line_start":522,"line_end":522,"column_start":5,"column_end":77}},{"value":"/         Ok(p) => {","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12772188,"byte_end":12772210,"line_start":523,"line_end":523,"column_start":5,"column_end":27}},{"value":"/             ptr = p;","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12772215,"byte_end":12772239,"line_start":524,"line_end":524,"column_start":5,"column_end":29}},{"value":"/             break;","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12772244,"byte_end":12772266,"line_start":525,"line_end":525,"column_start":5,"column_end":27}},{"value":"/         }","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12772271,"byte_end":12772284,"line_start":526,"line_end":526,"column_start":5,"column_end":18}},{"value":"/         Err(err) => {","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12772289,"byte_end":12772314,"line_start":527,"line_end":527,"column_start":5,"column_end":30}},{"value":"/             ptr = err.current;","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12772319,"byte_end":12772353,"line_start":528,"line_end":528,"column_start":5,"column_end":39}},{"value":"/             new = err.new;","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12772358,"byte_end":12772388,"line_start":529,"line_end":529,"column_start":5,"column_end":35}},{"value":"/         }","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12772393,"byte_end":12772406,"line_start":530,"line_end":530,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12772411,"byte_end":12772420,"line_start":531,"line_end":531,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12772425,"byte_end":12772430,"line_start":532,"line_end":532,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12772435,"byte_end":12772438,"line_start":533,"line_end":533,"column_start":5,"column_end":8}},{"value":"/ let mut curr = a.load(SeqCst, guard);","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12772443,"byte_end":12772484,"line_start":534,"line_end":534,"column_start":5,"column_end":46}},{"value":"/ loop {","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12772489,"byte_end":12772499,"line_start":535,"line_end":535,"column_start":5,"column_end":15}},{"value":"/     match a.compare_exchange_weak(curr, Shared::null(), SeqCst, SeqCst, guard) {","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12772504,"byte_end":12772588,"line_start":536,"line_end":536,"column_start":5,"column_end":89}},{"value":"/         Ok(_) => break,","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12772593,"byte_end":12772620,"line_start":537,"line_end":537,"column_start":5,"column_end":32}},{"value":"/         Err(err) => curr = err.current,","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12772625,"byte_end":12772668,"line_start":538,"line_end":538,"column_start":5,"column_end":48}},{"value":"/     }","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12772673,"byte_end":12772682,"line_start":539,"line_end":539,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12772687,"byte_end":12772692,"line_start":540,"line_end":540,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12772697,"byte_end":12772704,"line_start":541,"line_end":541,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":199},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12775106,"byte_end":12775121,"line_start":606,"line_end":606,"column_start":12,"column_end":27},"name":"compare_and_set","qualname":"<Atomic<T>>::compare_and_set","value":"pub fn compare_and_set<'g, O, P>(&Self, Shared<, T>, P, O, &'g Guard)\n-> Result<Shared, CompareAndSetError> where O: CompareAndSetOrdering,\nP: Pointer<T>","parent":null,"children":[],"decl_id":null,"docs":" Stores the pointer `new` (either `Shared` or `Owned`) into the atomic pointer if the current\n value is the same as `current`. The tag is also taken into account, so two pointers to the\n same object, but with different tags, will not be considered equal.","sig":null,"attributes":[{"value":"/ Stores the pointer `new` (either `Shared` or `Owned`) into the atomic pointer if the current","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12773404,"byte_end":12773500,"line_start":565,"line_end":565,"column_start":5,"column_end":101}},{"value":"/ value is the same as `current`. The tag is also taken into account, so two pointers to the","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12773505,"byte_end":12773599,"line_start":566,"line_end":566,"column_start":5,"column_end":99}},{"value":"/ same object, but with different tags, will not be considered equal.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12773604,"byte_end":12773675,"line_start":567,"line_end":567,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12773680,"byte_end":12773683,"line_start":568,"line_end":568,"column_start":5,"column_end":8}},{"value":"/ The return value is a result indicating whether the new pointer was written. On success the","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12773688,"byte_end":12773783,"line_start":569,"line_end":569,"column_start":5,"column_end":100}},{"value":"/ pointer that was written is returned. On failure the actual current value and `new` are","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12773788,"byte_end":12773879,"line_start":570,"line_end":570,"column_start":5,"column_end":96}},{"value":"/ returned.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12773884,"byte_end":12773897,"line_start":571,"line_end":571,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12773902,"byte_end":12773905,"line_start":572,"line_end":572,"column_start":5,"column_end":8}},{"value":"/ This method takes a [`CompareAndSetOrdering`] argument which describes the memory","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12773910,"byte_end":12773995,"line_start":573,"line_end":573,"column_start":5,"column_end":90}},{"value":"/ ordering of this operation.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12774000,"byte_end":12774031,"line_start":574,"line_end":574,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12774036,"byte_end":12774039,"line_start":575,"line_end":575,"column_start":5,"column_end":8}},{"value":"/ # Migrating to `compare_exchange`","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12774044,"byte_end":12774081,"line_start":576,"line_end":576,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12774086,"byte_end":12774089,"line_start":577,"line_end":577,"column_start":5,"column_end":8}},{"value":"/ `compare_and_set` is equivalent to `compare_exchange` with the following mapping for","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12774094,"byte_end":12774182,"line_start":578,"line_end":578,"column_start":5,"column_end":93}},{"value":"/ memory orderings:","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12774187,"byte_end":12774208,"line_start":579,"line_end":579,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12774213,"byte_end":12774216,"line_start":580,"line_end":580,"column_start":5,"column_end":8}},{"value":"/ Original | Success | Failure","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12774221,"byte_end":12774253,"line_start":581,"line_end":581,"column_start":5,"column_end":37}},{"value":"/ -------- | ------- | -------","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12774258,"byte_end":12774290,"line_start":582,"line_end":582,"column_start":5,"column_end":37}},{"value":"/ Relaxed  | Relaxed | Relaxed","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12774295,"byte_end":12774327,"line_start":583,"line_end":583,"column_start":5,"column_end":37}},{"value":"/ Acquire  | Acquire | Acquire","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12774332,"byte_end":12774364,"line_start":584,"line_end":584,"column_start":5,"column_end":37}},{"value":"/ Release  | Release | Relaxed","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12774369,"byte_end":12774401,"line_start":585,"line_end":585,"column_start":5,"column_end":37}},{"value":"/ AcqRel   | AcqRel  | Acquire","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12774406,"byte_end":12774438,"line_start":586,"line_end":586,"column_start":5,"column_end":37}},{"value":"/ SeqCst   | SeqCst  | SeqCst","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12774443,"byte_end":12774474,"line_start":587,"line_end":587,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12774479,"byte_end":12774482,"line_start":588,"line_end":588,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12774487,"byte_end":12774501,"line_start":589,"line_end":589,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12774506,"byte_end":12774509,"line_start":590,"line_end":590,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12774514,"byte_end":12774521,"line_start":591,"line_end":591,"column_start":5,"column_end":12}},{"value":"/ # #![allow(deprecated)]","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12774526,"byte_end":12774553,"line_start":592,"line_end":592,"column_start":5,"column_end":32}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned, Shared};","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12774558,"byte_end":12774622,"line_start":593,"line_end":593,"column_start":5,"column_end":69}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12774627,"byte_end":12774671,"line_start":594,"line_end":594,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12774676,"byte_end":12774679,"line_start":595,"line_end":595,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12774684,"byte_end":12774714,"line_start":596,"line_end":596,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12774719,"byte_end":12774722,"line_start":597,"line_end":597,"column_start":5,"column_end":8}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12774727,"byte_end":12774757,"line_start":598,"line_end":598,"column_start":5,"column_end":35}},{"value":"/ let curr = a.load(SeqCst, guard);","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12774762,"byte_end":12774799,"line_start":599,"line_end":599,"column_start":5,"column_end":42}},{"value":"/ let res1 = a.compare_and_set(curr, Shared::null(), SeqCst, guard);","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12774804,"byte_end":12774874,"line_start":600,"line_end":600,"column_start":5,"column_end":75}},{"value":"/ let res2 = a.compare_and_set(curr, Owned::new(5678), SeqCst, guard);","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12774879,"byte_end":12774951,"line_start":601,"line_end":601,"column_start":5,"column_end":77}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12774956,"byte_end":12774963,"line_start":602,"line_end":602,"column_start":5,"column_end":12}},{"value":"allow(deprecated)","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12775015,"byte_end":12775035,"line_start":604,"line_end":604,"column_start":5,"column_end":25}},{"value":"deprecated(note = \"Use `compare_exchange` instead\")","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12775040,"byte_end":12775094,"line_start":605,"line_end":605,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":203},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12777890,"byte_end":12777910,"line_start":683,"line_end":683,"column_start":12,"column_end":32},"name":"compare_and_set_weak","qualname":"<Atomic<T>>::compare_and_set_weak","value":"pub fn compare_and_set_weak<'g, O, P>(&Self, Shared<, T>, P, O, &'g Guard)\n-> Result<Shared, CompareAndSetError> where O: CompareAndSetOrdering,\nP: Pointer<T>","parent":null,"children":[],"decl_id":null,"docs":" Stores the pointer `new` (either `Shared` or `Owned`) into the atomic pointer if the current\n value is the same as `current`. The tag is also taken into account, so two pointers to the\n same object, but with different tags, will not be considered equal.","sig":null,"attributes":[{"value":"/ Stores the pointer `new` (either `Shared` or `Owned`) into the atomic pointer if the current","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12775464,"byte_end":12775560,"line_start":620,"line_end":620,"column_start":5,"column_end":101}},{"value":"/ value is the same as `current`. The tag is also taken into account, so two pointers to the","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12775565,"byte_end":12775659,"line_start":621,"line_end":621,"column_start":5,"column_end":99}},{"value":"/ same object, but with different tags, will not be considered equal.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12775664,"byte_end":12775735,"line_start":622,"line_end":622,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12775740,"byte_end":12775743,"line_start":623,"line_end":623,"column_start":5,"column_end":8}},{"value":"/ Unlike [`compare_and_set`], this method is allowed to spuriously fail even when comparison","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12775748,"byte_end":12775842,"line_start":624,"line_end":624,"column_start":5,"column_end":99}},{"value":"/ succeeds, which can result in more efficient code on some platforms.  The return value is a","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12775847,"byte_end":12775942,"line_start":625,"line_end":625,"column_start":5,"column_end":100}},{"value":"/ result indicating whether the new pointer was written. On success the pointer that was","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12775947,"byte_end":12776037,"line_start":626,"line_end":626,"column_start":5,"column_end":95}},{"value":"/ written is returned. On failure the actual current value and `new` are returned.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12776042,"byte_end":12776126,"line_start":627,"line_end":627,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12776131,"byte_end":12776134,"line_start":628,"line_end":628,"column_start":5,"column_end":8}},{"value":"/ This method takes a [`CompareAndSetOrdering`] argument which describes the memory","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12776139,"byte_end":12776224,"line_start":629,"line_end":629,"column_start":5,"column_end":90}},{"value":"/ ordering of this operation.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12776229,"byte_end":12776260,"line_start":630,"line_end":630,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12776265,"byte_end":12776268,"line_start":631,"line_end":631,"column_start":5,"column_end":8}},{"value":"/ [`compare_and_set`]: Atomic::compare_and_set","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12776273,"byte_end":12776321,"line_start":632,"line_end":632,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12776326,"byte_end":12776329,"line_start":633,"line_end":633,"column_start":5,"column_end":8}},{"value":"/ # Migrating to `compare_exchange_weak`","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12776334,"byte_end":12776376,"line_start":634,"line_end":634,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12776381,"byte_end":12776384,"line_start":635,"line_end":635,"column_start":5,"column_end":8}},{"value":"/ `compare_and_set_weak` is equivalent to `compare_exchange_weak` with the following mapping for","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12776389,"byte_end":12776487,"line_start":636,"line_end":636,"column_start":5,"column_end":103}},{"value":"/ memory orderings:","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12776492,"byte_end":12776513,"line_start":637,"line_end":637,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12776518,"byte_end":12776521,"line_start":638,"line_end":638,"column_start":5,"column_end":8}},{"value":"/ Original | Success | Failure","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12776526,"byte_end":12776558,"line_start":639,"line_end":639,"column_start":5,"column_end":37}},{"value":"/ -------- | ------- | -------","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12776563,"byte_end":12776595,"line_start":640,"line_end":640,"column_start":5,"column_end":37}},{"value":"/ Relaxed  | Relaxed | Relaxed","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12776600,"byte_end":12776632,"line_start":641,"line_end":641,"column_start":5,"column_end":37}},{"value":"/ Acquire  | Acquire | Acquire","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12776637,"byte_end":12776669,"line_start":642,"line_end":642,"column_start":5,"column_end":37}},{"value":"/ Release  | Release | Relaxed","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12776674,"byte_end":12776706,"line_start":643,"line_end":643,"column_start":5,"column_end":37}},{"value":"/ AcqRel   | AcqRel  | Acquire","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12776711,"byte_end":12776743,"line_start":644,"line_end":644,"column_start":5,"column_end":37}},{"value":"/ SeqCst   | SeqCst  | SeqCst","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12776748,"byte_end":12776779,"line_start":645,"line_end":645,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12776784,"byte_end":12776787,"line_start":646,"line_end":646,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12776792,"byte_end":12776806,"line_start":647,"line_end":647,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12776811,"byte_end":12776814,"line_start":648,"line_end":648,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12776819,"byte_end":12776826,"line_start":649,"line_end":649,"column_start":5,"column_end":12}},{"value":"/ # #![allow(deprecated)]","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12776831,"byte_end":12776858,"line_start":650,"line_end":650,"column_start":5,"column_end":32}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned, Shared};","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12776863,"byte_end":12776927,"line_start":651,"line_end":651,"column_start":5,"column_end":69}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12776932,"byte_end":12776976,"line_start":652,"line_end":652,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12776981,"byte_end":12776984,"line_start":653,"line_end":653,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12776989,"byte_end":12777019,"line_start":654,"line_end":654,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12777024,"byte_end":12777054,"line_start":655,"line_end":655,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12777059,"byte_end":12777062,"line_start":656,"line_end":656,"column_start":5,"column_end":8}},{"value":"/ let mut new = Owned::new(5678);","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12777067,"byte_end":12777102,"line_start":657,"line_end":657,"column_start":5,"column_end":40}},{"value":"/ let mut ptr = a.load(SeqCst, guard);","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12777107,"byte_end":12777147,"line_start":658,"line_end":658,"column_start":5,"column_end":45}},{"value":"/ loop {","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12777152,"byte_end":12777162,"line_start":659,"line_end":659,"column_start":5,"column_end":15}},{"value":"/     match a.compare_and_set_weak(ptr, new, SeqCst, guard) {","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12777167,"byte_end":12777230,"line_start":660,"line_end":660,"column_start":5,"column_end":68}},{"value":"/         Ok(p) => {","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12777235,"byte_end":12777257,"line_start":661,"line_end":661,"column_start":5,"column_end":27}},{"value":"/             ptr = p;","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12777262,"byte_end":12777286,"line_start":662,"line_end":662,"column_start":5,"column_end":29}},{"value":"/             break;","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12777291,"byte_end":12777313,"line_start":663,"line_end":663,"column_start":5,"column_end":27}},{"value":"/         }","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12777318,"byte_end":12777331,"line_start":664,"line_end":664,"column_start":5,"column_end":18}},{"value":"/         Err(err) => {","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12777336,"byte_end":12777361,"line_start":665,"line_end":665,"column_start":5,"column_end":30}},{"value":"/             ptr = err.current;","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12777366,"byte_end":12777400,"line_start":666,"line_end":666,"column_start":5,"column_end":39}},{"value":"/             new = err.new;","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12777405,"byte_end":12777435,"line_start":667,"line_end":667,"column_start":5,"column_end":35}},{"value":"/         }","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12777440,"byte_end":12777453,"line_start":668,"line_end":668,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12777458,"byte_end":12777467,"line_start":669,"line_end":669,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12777472,"byte_end":12777477,"line_start":670,"line_end":670,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12777482,"byte_end":12777485,"line_start":671,"line_end":671,"column_start":5,"column_end":8}},{"value":"/ let mut curr = a.load(SeqCst, guard);","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12777490,"byte_end":12777531,"line_start":672,"line_end":672,"column_start":5,"column_end":46}},{"value":"/ loop {","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12777536,"byte_end":12777546,"line_start":673,"line_end":673,"column_start":5,"column_end":15}},{"value":"/     match a.compare_and_set_weak(curr, Shared::null(), SeqCst, guard) {","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12777551,"byte_end":12777626,"line_start":674,"line_end":674,"column_start":5,"column_end":80}},{"value":"/         Ok(_) => break,","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12777631,"byte_end":12777658,"line_start":675,"line_end":675,"column_start":5,"column_end":32}},{"value":"/         Err(err) => curr = err.current,","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12777663,"byte_end":12777706,"line_start":676,"line_end":676,"column_start":5,"column_end":48}},{"value":"/     }","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12777711,"byte_end":12777720,"line_start":677,"line_end":677,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12777725,"byte_end":12777730,"line_start":678,"line_end":678,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12777735,"byte_end":12777742,"line_start":679,"line_end":679,"column_start":5,"column_end":12}},{"value":"allow(deprecated)","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12777794,"byte_end":12777814,"line_start":681,"line_end":681,"column_start":5,"column_end":25}},{"value":"deprecated(note = \"Use `compare_exchange_weak` instead\")","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12777819,"byte_end":12777878,"line_start":682,"line_end":682,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":207},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12778989,"byte_end":12778998,"line_start":716,"line_end":716,"column_start":12,"column_end":21},"name":"fetch_and","qualname":"<Atomic<T>>::fetch_and","value":"pub fn fetch_and<'g>(&Self, usize, Ordering, &'g Guard) -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Bitwise \"and\" with the current tag.","sig":null,"attributes":[{"value":"/ Bitwise \"and\" with the current tag.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12778258,"byte_end":12778297,"line_start":697,"line_end":697,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12778302,"byte_end":12778305,"line_start":698,"line_end":698,"column_start":5,"column_end":8}},{"value":"/ Performs a bitwise \"and\" operation on the current tag and the argument `val`, and sets the","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12778310,"byte_end":12778404,"line_start":699,"line_end":699,"column_start":5,"column_end":99}},{"value":"/ new tag to the result. Returns the previous pointer.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12778409,"byte_end":12778465,"line_start":700,"line_end":700,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12778470,"byte_end":12778473,"line_start":701,"line_end":701,"column_start":5,"column_end":8}},{"value":"/ This method takes an [`Ordering`] argument which describes the memory ordering of this","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12778478,"byte_end":12778568,"line_start":702,"line_end":702,"column_start":5,"column_end":95}},{"value":"/ operation.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12778573,"byte_end":12778587,"line_start":703,"line_end":703,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12778592,"byte_end":12778595,"line_start":704,"line_end":704,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12778600,"byte_end":12778614,"line_start":705,"line_end":705,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12778619,"byte_end":12778622,"line_start":706,"line_end":706,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12778627,"byte_end":12778634,"line_start":707,"line_end":707,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Shared};","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12778639,"byte_end":12778696,"line_start":708,"line_end":708,"column_start":5,"column_end":62}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12778701,"byte_end":12778745,"line_start":709,"line_end":709,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12778750,"byte_end":12778753,"line_start":710,"line_end":710,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::<i32>::from(Shared::null().with_tag(3));","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12778758,"byte_end":12778818,"line_start":711,"line_end":711,"column_start":5,"column_end":65}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12778823,"byte_end":12778853,"line_start":712,"line_end":712,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(a.fetch_and(2, SeqCst, guard).tag(), 3);","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12778858,"byte_end":12778913,"line_start":713,"line_end":713,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(a.load(SeqCst, guard).tag(), 2);","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12778918,"byte_end":12778965,"line_start":714,"line_end":714,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12778970,"byte_end":12778977,"line_start":715,"line_end":715,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":209},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12779897,"byte_end":12779905,"line_start":739,"line_end":739,"column_start":12,"column_end":20},"name":"fetch_or","qualname":"<Atomic<T>>::fetch_or","value":"pub fn fetch_or<'g>(&Self, usize, Ordering, &'g Guard) -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Bitwise \"or\" with the current tag.","sig":null,"attributes":[{"value":"/ Bitwise \"or\" with the current tag.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12779169,"byte_end":12779207,"line_start":720,"line_end":720,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12779212,"byte_end":12779215,"line_start":721,"line_end":721,"column_start":5,"column_end":8}},{"value":"/ Performs a bitwise \"or\" operation on the current tag and the argument `val`, and sets the","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12779220,"byte_end":12779313,"line_start":722,"line_end":722,"column_start":5,"column_end":98}},{"value":"/ new tag to the result. Returns the previous pointer.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12779318,"byte_end":12779374,"line_start":723,"line_end":723,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12779379,"byte_end":12779382,"line_start":724,"line_end":724,"column_start":5,"column_end":8}},{"value":"/ This method takes an [`Ordering`] argument which describes the memory ordering of this","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12779387,"byte_end":12779477,"line_start":725,"line_end":725,"column_start":5,"column_end":95}},{"value":"/ operation.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12779482,"byte_end":12779496,"line_start":726,"line_end":726,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12779501,"byte_end":12779504,"line_start":727,"line_end":727,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12779509,"byte_end":12779523,"line_start":728,"line_end":728,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12779528,"byte_end":12779531,"line_start":729,"line_end":729,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12779536,"byte_end":12779543,"line_start":730,"line_end":730,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Shared};","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12779548,"byte_end":12779605,"line_start":731,"line_end":731,"column_start":5,"column_end":62}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12779610,"byte_end":12779654,"line_start":732,"line_end":732,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12779659,"byte_end":12779662,"line_start":733,"line_end":733,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::<i32>::from(Shared::null().with_tag(1));","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12779667,"byte_end":12779727,"line_start":734,"line_end":734,"column_start":5,"column_end":65}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12779732,"byte_end":12779762,"line_start":735,"line_end":735,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(a.fetch_or(2, SeqCst, guard).tag(), 1);","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12779767,"byte_end":12779821,"line_start":736,"line_end":736,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(a.load(SeqCst, guard).tag(), 3);","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12779826,"byte_end":12779873,"line_start":737,"line_end":737,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12779878,"byte_end":12779885,"line_start":738,"line_end":738,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":211},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12780805,"byte_end":12780814,"line_start":762,"line_end":762,"column_start":12,"column_end":21},"name":"fetch_xor","qualname":"<Atomic<T>>::fetch_xor","value":"pub fn fetch_xor<'g>(&Self, usize, Ordering, &'g Guard) -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Bitwise \"xor\" with the current tag.","sig":null,"attributes":[{"value":"/ Bitwise \"xor\" with the current tag.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12780074,"byte_end":12780113,"line_start":743,"line_end":743,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12780118,"byte_end":12780121,"line_start":744,"line_end":744,"column_start":5,"column_end":8}},{"value":"/ Performs a bitwise \"xor\" operation on the current tag and the argument `val`, and sets the","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12780126,"byte_end":12780220,"line_start":745,"line_end":745,"column_start":5,"column_end":99}},{"value":"/ new tag to the result. Returns the previous pointer.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12780225,"byte_end":12780281,"line_start":746,"line_end":746,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12780286,"byte_end":12780289,"line_start":747,"line_end":747,"column_start":5,"column_end":8}},{"value":"/ This method takes an [`Ordering`] argument which describes the memory ordering of this","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12780294,"byte_end":12780384,"line_start":748,"line_end":748,"column_start":5,"column_end":95}},{"value":"/ operation.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12780389,"byte_end":12780403,"line_start":749,"line_end":749,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12780408,"byte_end":12780411,"line_start":750,"line_end":750,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12780416,"byte_end":12780430,"line_start":751,"line_end":751,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12780435,"byte_end":12780438,"line_start":752,"line_end":752,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12780443,"byte_end":12780450,"line_start":753,"line_end":753,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Shared};","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12780455,"byte_end":12780512,"line_start":754,"line_end":754,"column_start":5,"column_end":62}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12780517,"byte_end":12780561,"line_start":755,"line_end":755,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12780566,"byte_end":12780569,"line_start":756,"line_end":756,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::<i32>::from(Shared::null().with_tag(1));","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12780574,"byte_end":12780634,"line_start":757,"line_end":757,"column_start":5,"column_end":65}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12780639,"byte_end":12780669,"line_start":758,"line_end":758,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(a.fetch_xor(3, SeqCst, guard).tag(), 1);","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12780674,"byte_end":12780729,"line_start":759,"line_end":759,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(a.load(SeqCst, guard).tag(), 2);","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12780734,"byte_end":12780781,"line_start":760,"line_end":760,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12780786,"byte_end":12780793,"line_start":761,"line_end":761,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":213},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12782111,"byte_end":12782121,"line_start":800,"line_end":800,"column_start":19,"column_end":29},"name":"into_owned","qualname":"<Atomic<T>>::into_owned","value":"pub unsafe fn into_owned(Self) -> Owned<T>","parent":null,"children":[],"decl_id":null,"docs":" Takes ownership of the pointee.","sig":null,"attributes":[{"value":"/ Takes ownership of the pointee.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12780984,"byte_end":12781019,"line_start":766,"line_end":766,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12781024,"byte_end":12781027,"line_start":767,"line_end":767,"column_start":5,"column_end":8}},{"value":"/ This consumes the atomic and converts it into [`Owned`]. As [`Atomic`] doesn't have a","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12781032,"byte_end":12781121,"line_start":768,"line_end":768,"column_start":5,"column_end":94}},{"value":"/ destructor and doesn't drop the pointee while [`Owned`] does, this is suitable for","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12781126,"byte_end":12781212,"line_start":769,"line_end":769,"column_start":5,"column_end":91}},{"value":"/ destructors of data structures.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12781217,"byte_end":12781252,"line_start":770,"line_end":770,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12781257,"byte_end":12781260,"line_start":771,"line_end":771,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12781265,"byte_end":12781277,"line_start":772,"line_end":772,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12781282,"byte_end":12781285,"line_start":773,"line_end":773,"column_start":5,"column_end":8}},{"value":"/ Panics if this pointer is null, but only in debug mode.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12781290,"byte_end":12781349,"line_start":774,"line_end":774,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12781354,"byte_end":12781357,"line_start":775,"line_end":775,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12781362,"byte_end":12781374,"line_start":776,"line_end":776,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12781379,"byte_end":12781382,"line_start":777,"line_end":777,"column_start":5,"column_end":8}},{"value":"/ This method may be called only if the pointer is valid and nobody else is holding a","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12781387,"byte_end":12781474,"line_start":778,"line_end":778,"column_start":5,"column_end":92}},{"value":"/ reference to the same object.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12781479,"byte_end":12781512,"line_start":779,"line_end":779,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12781517,"byte_end":12781520,"line_start":780,"line_end":780,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12781525,"byte_end":12781539,"line_start":781,"line_end":781,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12781544,"byte_end":12781547,"line_start":782,"line_end":782,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12781552,"byte_end":12781563,"line_start":783,"line_end":783,"column_start":5,"column_end":16}},{"value":"/ # use std::mem;","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12781568,"byte_end":12781587,"line_start":784,"line_end":784,"column_start":5,"column_end":24}},{"value":"/ # use crossbeam_epoch::Atomic;","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12781592,"byte_end":12781626,"line_start":785,"line_end":785,"column_start":5,"column_end":39}},{"value":"/ struct DataStructure {","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12781631,"byte_end":12781657,"line_start":786,"line_end":786,"column_start":5,"column_end":31}},{"value":"/     ptr: Atomic<usize>,","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12781662,"byte_end":12781689,"line_start":787,"line_end":787,"column_start":5,"column_end":32}},{"value":"/ }","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12781694,"byte_end":12781699,"line_start":788,"line_end":788,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12781704,"byte_end":12781707,"line_start":789,"line_end":789,"column_start":5,"column_end":8}},{"value":"/ impl Drop for DataStructure {","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12781712,"byte_end":12781745,"line_start":790,"line_end":790,"column_start":5,"column_end":38}},{"value":"/     fn drop(&mut self) {","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12781750,"byte_end":12781778,"line_start":791,"line_end":791,"column_start":5,"column_end":33}},{"value":"/         // By now the DataStructure lives only in our thread and we are sure we don't hold","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12781783,"byte_end":12781877,"line_start":792,"line_end":792,"column_start":5,"column_end":99}},{"value":"/         // any Shared or & to it ourselves.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12781882,"byte_end":12781929,"line_start":793,"line_end":793,"column_start":5,"column_end":52}},{"value":"/         unsafe {","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12781934,"byte_end":12781954,"line_start":794,"line_end":794,"column_start":5,"column_end":25}},{"value":"/             drop(mem::replace(&mut self.ptr, Atomic::null()).into_owned());","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12781959,"byte_end":12782038,"line_start":795,"line_end":795,"column_start":5,"column_end":84}},{"value":"/         }","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12782043,"byte_end":12782056,"line_start":796,"line_end":796,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12782061,"byte_end":12782070,"line_start":797,"line_end":797,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12782075,"byte_end":12782080,"line_start":798,"line_end":798,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12782085,"byte_end":12782092,"line_start":799,"line_end":799,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":242},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12785138,"byte_end":12785145,"line_start":913,"line_end":913,"column_start":11,"column_end":18},"name":"Pointer","qualname":"::atomic::Pointer","value":"Pointer<T: ?Sized + Pointable>","parent":null,"children":[{"krate":0,"index":244},{"krate":0,"index":245}],"decl_id":null,"docs":" A trait for either `Owned` or `Shared` pointers.\n","sig":null,"attributes":[{"value":"/ A trait for either `Owned` or `Shared` pointers.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12785075,"byte_end":12785127,"line_start":912,"line_end":912,"column_start":1,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":244},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12785237,"byte_end":12785247,"line_start":915,"line_end":915,"column_start":8,"column_end":18},"name":"into_usize","qualname":"::atomic::Pointer::into_usize","value":"pub fn into_usize(Self) -> usize","parent":{"krate":0,"index":242},"children":[],"decl_id":null,"docs":" Returns the machine representation of the pointer.\n","sig":null,"attributes":[{"value":"/ Returns the machine representation of the pointer.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12785175,"byte_end":12785229,"line_start":914,"line_end":914,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":245},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12785554,"byte_end":12785564,"line_start":923,"line_end":923,"column_start":15,"column_end":25},"name":"from_usize","qualname":"::atomic::Pointer::from_usize","value":"pub unsafe fn from_usize(usize) -> Self","parent":{"krate":0,"index":242},"children":[],"decl_id":null,"docs":" Returns a new pointer pointing to the tagged pointer `data`.","sig":null,"attributes":[{"value":"/ Returns a new pointer pointing to the tagged pointer `data`.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12785269,"byte_end":12785333,"line_start":917,"line_end":917,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12785338,"byte_end":12785341,"line_start":918,"line_end":918,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12785346,"byte_end":12785358,"line_start":919,"line_end":919,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12785363,"byte_end":12785366,"line_start":920,"line_end":920,"column_start":5,"column_end":8}},{"value":"/ The given `data` should have been created by `Pointer::into_usize()`, and one `data` should","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12785371,"byte_end":12785466,"line_start":921,"line_end":921,"column_start":5,"column_end":100}},{"value":"/ not be converted back by `Pointer::from_usize()` multiple times.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12785471,"byte_end":12785539,"line_start":922,"line_end":922,"column_start":5,"column_end":73}}]},{"kind":"Struct","id":{"krate":0,"index":246},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12785830,"byte_end":12785835,"line_start":932,"line_end":932,"column_start":12,"column_end":17},"name":"Owned","qualname":"::atomic::Owned","value":"Owned {  }","parent":null,"children":[{"krate":0,"index":248},{"krate":0,"index":249}],"decl_id":null,"docs":" An owned heap-allocated object.","sig":null,"attributes":[{"value":"/ An owned heap-allocated object.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12785590,"byte_end":12785625,"line_start":926,"line_end":926,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12785626,"byte_end":12785629,"line_start":927,"line_end":927,"column_start":1,"column_end":4}},{"value":"/ This type is very similar to `Box<T>`.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12785630,"byte_end":12785672,"line_start":928,"line_end":928,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12785673,"byte_end":12785676,"line_start":929,"line_end":929,"column_start":1,"column_end":4}},{"value":"/ The pointer must be properly aligned. Since it is aligned, a tag can be stored into the unused","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12785677,"byte_end":12785775,"line_start":930,"line_end":930,"column_start":1,"column_end":99}},{"value":"/ least significant bits of the address.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12785776,"byte_end":12785818,"line_start":931,"line_end":931,"column_start":1,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":256},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12787233,"byte_end":12787241,"line_start":983,"line_end":983,"column_start":19,"column_end":27},"name":"from_raw","qualname":"<Owned<T>>::from_raw","value":"pub unsafe fn from_raw(*mut T) -> Owned<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a new owned pointer pointing to `raw`.","sig":null,"attributes":[{"value":"/ Returns a new owned pointer pointing to `raw`.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12786485,"byte_end":12786535,"line_start":961,"line_end":961,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12786540,"byte_end":12786543,"line_start":962,"line_end":962,"column_start":5,"column_end":8}},{"value":"/ This function is unsafe because improper use may lead to memory problems. Argument `raw`","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12786548,"byte_end":12786640,"line_start":963,"line_end":963,"column_start":5,"column_end":97}},{"value":"/ must be a valid pointer. Also, a double-free may occur if the function is called twice on","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12786645,"byte_end":12786738,"line_start":964,"line_end":964,"column_start":5,"column_end":98}},{"value":"/ the same raw pointer.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12786743,"byte_end":12786768,"line_start":965,"line_end":965,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12786773,"byte_end":12786776,"line_start":966,"line_end":966,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12786781,"byte_end":12786793,"line_start":967,"line_end":967,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12786798,"byte_end":12786801,"line_start":968,"line_end":968,"column_start":5,"column_end":8}},{"value":"/ Panics if `raw` is not properly aligned.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12786806,"byte_end":12786850,"line_start":969,"line_end":969,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12786855,"byte_end":12786858,"line_start":970,"line_end":970,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12786863,"byte_end":12786875,"line_start":971,"line_end":971,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12786880,"byte_end":12786883,"line_start":972,"line_end":972,"column_start":5,"column_end":8}},{"value":"/ The given `raw` should have been derived from `Owned`, and one `raw` should not be converted","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12786888,"byte_end":12786984,"line_start":973,"line_end":973,"column_start":5,"column_end":101}},{"value":"/ back by `Owned::from_raw()` multiple times.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12786989,"byte_end":12787036,"line_start":974,"line_end":974,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12787041,"byte_end":12787044,"line_start":975,"line_end":975,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12787049,"byte_end":12787063,"line_start":976,"line_end":976,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12787068,"byte_end":12787071,"line_start":977,"line_end":977,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12787076,"byte_end":12787083,"line_start":978,"line_end":978,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Owned;","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12787088,"byte_end":12787119,"line_start":979,"line_end":979,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12787124,"byte_end":12787127,"line_start":980,"line_end":980,"column_start":5,"column_end":8}},{"value":"/ let o = unsafe { Owned::from_raw(Box::into_raw(Box::new(1234))) };","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12787132,"byte_end":12787202,"line_start":981,"line_end":981,"column_start":5,"column_end":75}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12787207,"byte_end":12787214,"line_start":982,"line_end":982,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":257},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12787639,"byte_end":12787647,"line_start":1000,"line_end":1000,"column_start":12,"column_end":20},"name":"into_box","qualname":"<Owned<T>>::into_box","value":"pub fn into_box(Self) -> Box<T>","parent":null,"children":[],"decl_id":null,"docs":" Converts the owned pointer into a `Box`.","sig":null,"attributes":[{"value":"/ Converts the owned pointer into a `Box`.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12787376,"byte_end":12787420,"line_start":989,"line_end":989,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12787425,"byte_end":12787428,"line_start":990,"line_end":990,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12787433,"byte_end":12787447,"line_start":991,"line_end":991,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12787452,"byte_end":12787455,"line_start":992,"line_end":992,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12787460,"byte_end":12787467,"line_start":993,"line_end":993,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Owned;","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12787472,"byte_end":12787503,"line_start":994,"line_end":994,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12787508,"byte_end":12787511,"line_start":995,"line_end":995,"column_start":5,"column_end":8}},{"value":"/ let o = Owned::new(1234);","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12787516,"byte_end":12787545,"line_start":996,"line_end":996,"column_start":5,"column_end":34}},{"value":"/ let b: Box<i32> = o.into_box();","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12787550,"byte_end":12787585,"line_start":997,"line_end":997,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(*b, 1234);","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12787590,"byte_end":12787615,"line_start":998,"line_end":998,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12787620,"byte_end":12787627,"line_start":999,"line_end":999,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":258},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12788036,"byte_end":12788039,"line_start":1015,"line_end":1015,"column_start":12,"column_end":15},"name":"new","qualname":"<Owned<T>>::new","value":"pub fn new(T) -> Owned<T>","parent":null,"children":[],"decl_id":null,"docs":" Allocates `value` on the heap and returns a new owned pointer pointing to it.","sig":null,"attributes":[{"value":"/ Allocates `value` on the heap and returns a new owned pointer pointing to it.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12787806,"byte_end":12787887,"line_start":1006,"line_end":1006,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12787892,"byte_end":12787895,"line_start":1007,"line_end":1007,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12787900,"byte_end":12787914,"line_start":1008,"line_end":1008,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12787919,"byte_end":12787922,"line_start":1009,"line_end":1009,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12787927,"byte_end":12787934,"line_start":1010,"line_end":1010,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Owned;","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12787939,"byte_end":12787970,"line_start":1011,"line_end":1011,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12787975,"byte_end":12787978,"line_start":1012,"line_end":1012,"column_start":5,"column_end":8}},{"value":"/ let o = Owned::new(1234);","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12787983,"byte_end":12788012,"line_start":1013,"line_end":1013,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12788017,"byte_end":12788024,"line_start":1014,"line_end":1014,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":261},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12788378,"byte_end":12788382,"line_start":1030,"line_end":1030,"column_start":12,"column_end":16},"name":"init","qualname":"<Owned<T>>::init","value":"pub fn init(T::Init) -> Owned<T>","parent":null,"children":[],"decl_id":null,"docs":" Allocates `value` on the heap and returns a new owned pointer pointing to it.","sig":null,"attributes":[{"value":"/ Allocates `value` on the heap and returns a new owned pointer pointing to it.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12788140,"byte_end":12788221,"line_start":1021,"line_end":1021,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12788226,"byte_end":12788229,"line_start":1022,"line_end":1022,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12788234,"byte_end":12788248,"line_start":1023,"line_end":1023,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12788253,"byte_end":12788256,"line_start":1024,"line_end":1024,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12788261,"byte_end":12788268,"line_start":1025,"line_end":1025,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Owned;","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12788273,"byte_end":12788304,"line_start":1026,"line_end":1026,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12788309,"byte_end":12788312,"line_start":1027,"line_end":1027,"column_start":5,"column_end":8}},{"value":"/ let o = Owned::<i32>::init(1234);","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12788317,"byte_end":12788354,"line_start":1028,"line_end":1028,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12788359,"byte_end":12788366,"line_start":1029,"line_end":1029,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":262},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12788803,"byte_end":12788814,"line_start":1046,"line_end":1046,"column_start":12,"column_end":23},"name":"into_shared","qualname":"<Owned<T>>::into_shared","value":"pub fn into_shared<'g>(Self, &'g Guard) -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Converts the owned pointer into a [`Shared`].","sig":null,"attributes":[{"value":"/ Converts the owned pointer into a [`Shared`].","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12788474,"byte_end":12788523,"line_start":1034,"line_end":1034,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12788528,"byte_end":12788531,"line_start":1035,"line_end":1035,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12788536,"byte_end":12788550,"line_start":1036,"line_end":1036,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12788555,"byte_end":12788558,"line_start":1037,"line_end":1037,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12788563,"byte_end":12788570,"line_start":1038,"line_end":1038,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Owned};","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12788575,"byte_end":12788623,"line_start":1039,"line_end":1039,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12788628,"byte_end":12788631,"line_start":1040,"line_end":1040,"column_start":5,"column_end":8}},{"value":"/ let o = Owned::new(1234);","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12788636,"byte_end":12788665,"line_start":1041,"line_end":1041,"column_start":5,"column_end":34}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12788670,"byte_end":12788700,"line_start":1042,"line_end":1042,"column_start":5,"column_end":35}},{"value":"/ let p = o.into_shared(guard);","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12788705,"byte_end":12788738,"line_start":1043,"line_end":1043,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12788743,"byte_end":12788750,"line_start":1044,"line_end":1044,"column_start":5,"column_end":12}},{"value":"allow(clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12788755,"byte_end":12788791,"line_start":1045,"line_end":1045,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":264},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12789134,"byte_end":12789137,"line_start":1059,"line_end":1059,"column_start":12,"column_end":15},"name":"tag","qualname":"<Owned<T>>::tag","value":"pub fn tag(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the tag stored within the pointer.","sig":null,"attributes":[{"value":"/ Returns the tag stored within the pointer.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12788926,"byte_end":12788972,"line_start":1050,"line_end":1050,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12788977,"byte_end":12788980,"line_start":1051,"line_end":1051,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12788985,"byte_end":12788999,"line_start":1052,"line_end":1052,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12789004,"byte_end":12789007,"line_start":1053,"line_end":1053,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12789012,"byte_end":12789019,"line_start":1054,"line_end":1054,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Owned;","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12789024,"byte_end":12789055,"line_start":1055,"line_end":1055,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12789060,"byte_end":12789063,"line_start":1056,"line_end":1056,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Owned::new(1234).tag(), 0);","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12789068,"byte_end":12789110,"line_start":1057,"line_end":1057,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12789115,"byte_end":12789122,"line_start":1058,"line_end":1058,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":265},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12789610,"byte_end":12789618,"line_start":1077,"line_end":1077,"column_start":12,"column_end":20},"name":"with_tag","qualname":"<Owned<T>>::with_tag","value":"pub fn with_tag(Self, usize) -> Owned<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns the same pointer, but tagged with `tag`. `tag` is truncated to be fit into the\n unused bits of the pointer to `T`.","sig":null,"attributes":[{"value":"/ Returns the same pointer, but tagged with `tag`. `tag` is truncated to be fit into the","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12789233,"byte_end":12789323,"line_start":1064,"line_end":1064,"column_start":5,"column_end":95}},{"value":"/ unused bits of the pointer to `T`.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12789328,"byte_end":12789366,"line_start":1065,"line_end":1065,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12789371,"byte_end":12789374,"line_start":1066,"line_end":1066,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12789379,"byte_end":12789393,"line_start":1067,"line_end":1067,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12789398,"byte_end":12789401,"line_start":1068,"line_end":1068,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12789406,"byte_end":12789413,"line_start":1069,"line_end":1069,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Owned;","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12789418,"byte_end":12789449,"line_start":1070,"line_end":1070,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12789454,"byte_end":12789457,"line_start":1071,"line_end":1071,"column_start":5,"column_end":8}},{"value":"/ let o = Owned::new(0u64);","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12789462,"byte_end":12789491,"line_start":1072,"line_end":1072,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(o.tag(), 0);","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12789496,"byte_end":12789523,"line_start":1073,"line_end":1073,"column_start":5,"column_end":32}},{"value":"/ let o = o.with_tag(2);","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12789528,"byte_end":12789554,"line_start":1074,"line_end":1074,"column_start":5,"column_end":31}},{"value":"/ assert_eq!(o.tag(), 2);","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12789559,"byte_end":12789586,"line_start":1075,"line_end":1075,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12789591,"byte_end":12789598,"line_start":1076,"line_end":1076,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":300},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12792080,"byte_end":12792086,"line_start":1180,"line_end":1180,"column_start":12,"column_end":18},"name":"Shared","qualname":"::atomic::Shared","value":"Shared {  }","parent":null,"children":[{"krate":0,"index":303},{"krate":0,"index":304}],"decl_id":null,"docs":" A pointer to an object protected by the epoch GC.","sig":null,"attributes":[{"value":"/ A pointer to an object protected by the epoch GC.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12791801,"byte_end":12791854,"line_start":1174,"line_end":1174,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12791855,"byte_end":12791858,"line_start":1175,"line_end":1175,"column_start":1,"column_end":4}},{"value":"/ The pointer is valid for use only during the lifetime `'g`.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12791859,"byte_end":12791922,"line_start":1176,"line_end":1176,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12791923,"byte_end":12791926,"line_start":1177,"line_end":1177,"column_start":1,"column_end":4}},{"value":"/ The pointer must be properly aligned. Since it is aligned, a tag can be stored into the unused","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12791927,"byte_end":12792025,"line_start":1178,"line_end":1178,"column_start":1,"column_end":99}},{"value":"/ least significant bits of the address.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12792026,"byte_end":12792068,"line_start":1179,"line_end":1179,"column_start":1,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":317},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12793257,"byte_end":12793263,"line_start":1229,"line_end":1229,"column_start":12,"column_end":18},"name":"as_raw","qualname":"<Shared>::as_raw","value":"pub fn as_raw(&Self) -> *const T","parent":null,"children":[],"decl_id":null,"docs":" Converts the pointer to a raw pointer (without the tag).","sig":null,"attributes":[{"value":"/ Converts the pointer to a raw pointer (without the tag).","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12792738,"byte_end":12792798,"line_start":1212,"line_end":1212,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12792803,"byte_end":12792806,"line_start":1213,"line_end":1213,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12792811,"byte_end":12792825,"line_start":1214,"line_end":1214,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12792830,"byte_end":12792833,"line_start":1215,"line_end":1215,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12792838,"byte_end":12792845,"line_start":1216,"line_end":1216,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned};","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12792850,"byte_end":12792906,"line_start":1217,"line_end":1217,"column_start":5,"column_end":61}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12792911,"byte_end":12792955,"line_start":1218,"line_end":1218,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12792960,"byte_end":12792963,"line_start":1219,"line_end":1219,"column_start":5,"column_end":8}},{"value":"/ let o = Owned::new(1234);","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12792968,"byte_end":12792997,"line_start":1220,"line_end":1220,"column_start":5,"column_end":34}},{"value":"/ let raw = &*o as *const _;","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12793002,"byte_end":12793032,"line_start":1221,"line_end":1221,"column_start":5,"column_end":35}},{"value":"/ let a = Atomic::from(o);","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12793037,"byte_end":12793065,"line_start":1222,"line_end":1222,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12793070,"byte_end":12793073,"line_start":1223,"line_end":1223,"column_start":5,"column_end":8}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12793078,"byte_end":12793108,"line_start":1224,"line_end":1224,"column_start":5,"column_end":35}},{"value":"/ let p = a.load(SeqCst, guard);","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12793113,"byte_end":12793147,"line_start":1225,"line_end":1225,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(p.as_raw(), raw);","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12793152,"byte_end":12793184,"line_start":1226,"line_end":1226,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12793189,"byte_end":12793196,"line_start":1227,"line_end":1227,"column_start":5,"column_end":12}},{"value":"allow(clippy :: trivially_copy_pass_by_ref)","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12793201,"byte_end":12793245,"line_start":1228,"line_end":1228,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":321},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12793640,"byte_end":12793644,"line_start":1246,"line_end":1246,"column_start":12,"column_end":16},"name":"null","qualname":"<Shared>::null","value":"pub fn null() -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Returns a new null pointer.","sig":null,"attributes":[{"value":"/ Returns a new null pointer.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12793424,"byte_end":12793455,"line_start":1236,"line_end":1236,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12793460,"byte_end":12793463,"line_start":1237,"line_end":1237,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12793468,"byte_end":12793482,"line_start":1238,"line_end":1238,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12793487,"byte_end":12793490,"line_start":1239,"line_end":1239,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12793495,"byte_end":12793502,"line_start":1240,"line_end":1240,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Shared;","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12793507,"byte_end":12793539,"line_start":1241,"line_end":1241,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12793544,"byte_end":12793547,"line_start":1242,"line_end":1242,"column_start":5,"column_end":8}},{"value":"/ let p = Shared::<i32>::null();","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12793552,"byte_end":12793586,"line_start":1243,"line_end":1243,"column_start":5,"column_end":39}},{"value":"/ assert!(p.is_null());","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12793591,"byte_end":12793616,"line_start":1244,"line_end":1244,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12793621,"byte_end":12793628,"line_start":1245,"line_end":1245,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":322},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12794250,"byte_end":12794257,"line_start":1268,"line_end":1268,"column_start":12,"column_end":19},"name":"is_null","qualname":"<Shared>::is_null","value":"pub fn is_null(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the pointer is null.","sig":null,"attributes":[{"value":"/ Returns `true` if the pointer is null.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12793759,"byte_end":12793801,"line_start":1253,"line_end":1253,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12793806,"byte_end":12793809,"line_start":1254,"line_end":1254,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12793814,"byte_end":12793828,"line_start":1255,"line_end":1255,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12793833,"byte_end":12793836,"line_start":1256,"line_end":1256,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12793841,"byte_end":12793848,"line_start":1257,"line_end":1257,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned};","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12793853,"byte_end":12793909,"line_start":1258,"line_end":1258,"column_start":5,"column_end":61}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12793914,"byte_end":12793958,"line_start":1259,"line_end":1259,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12793963,"byte_end":12793966,"line_start":1260,"line_end":1260,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::null();","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12793971,"byte_end":12793998,"line_start":1261,"line_end":1261,"column_start":5,"column_end":32}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12794003,"byte_end":12794033,"line_start":1262,"line_end":1262,"column_start":5,"column_end":35}},{"value":"/ assert!(a.load(SeqCst, guard).is_null());","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12794038,"byte_end":12794083,"line_start":1263,"line_end":1263,"column_start":5,"column_end":50}},{"value":"/ a.store(Owned::new(1234), SeqCst);","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12794088,"byte_end":12794126,"line_start":1264,"line_end":1264,"column_start":5,"column_end":43}},{"value":"/ assert!(!a.load(SeqCst, guard).is_null());","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12794131,"byte_end":12794177,"line_start":1265,"line_end":1265,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12794182,"byte_end":12794189,"line_start":1266,"line_end":1266,"column_start":5,"column_end":12}},{"value":"allow(clippy :: trivially_copy_pass_by_ref)","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12794194,"byte_end":12794238,"line_start":1267,"line_end":1267,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":323},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12795631,"byte_end":12795636,"line_start":1306,"line_end":1306,"column_start":19,"column_end":24},"name":"deref","qualname":"<Shared>::deref","value":"pub unsafe fn deref(&Self) -> &'g T","parent":null,"children":[],"decl_id":null,"docs":" Dereferences the pointer.","sig":null,"attributes":[{"value":"/ Dereferences the pointer.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12794357,"byte_end":12794386,"line_start":1273,"line_end":1273,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12794391,"byte_end":12794394,"line_start":1274,"line_end":1274,"column_start":5,"column_end":8}},{"value":"/ Returns a reference to the pointee that is valid during the lifetime `'g`.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12794399,"byte_end":12794477,"line_start":1275,"line_end":1275,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12794482,"byte_end":12794485,"line_start":1276,"line_end":1276,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12794490,"byte_end":12794502,"line_start":1277,"line_end":1277,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12794507,"byte_end":12794510,"line_start":1278,"line_end":1278,"column_start":5,"column_end":8}},{"value":"/ Dereferencing a pointer is unsafe because it could be pointing to invalid memory.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12794515,"byte_end":12794600,"line_start":1279,"line_end":1279,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12794605,"byte_end":12794608,"line_start":1280,"line_end":1280,"column_start":5,"column_end":8}},{"value":"/ Another concern is the possibility of data races due to lack of proper synchronization.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12794613,"byte_end":12794704,"line_start":1281,"line_end":1281,"column_start":5,"column_end":96}},{"value":"/ For example, consider the following scenario:","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12794709,"byte_end":12794758,"line_start":1282,"line_end":1282,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12794763,"byte_end":12794766,"line_start":1283,"line_end":1283,"column_start":5,"column_end":8}},{"value":"/ 1. A thread creates a new object: `a.store(Owned::new(10), Relaxed)`","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12794771,"byte_end":12794843,"line_start":1284,"line_end":1284,"column_start":5,"column_end":77}},{"value":"/ 2. Another thread reads it: `*a.load(Relaxed, guard).as_ref().unwrap()`","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12794848,"byte_end":12794923,"line_start":1285,"line_end":1285,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12794928,"byte_end":12794931,"line_start":1286,"line_end":1286,"column_start":5,"column_end":8}},{"value":"/ The problem is that relaxed orderings don't synchronize initialization of the object with","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12794936,"byte_end":12795029,"line_start":1287,"line_end":1287,"column_start":5,"column_end":98}},{"value":"/ the read from the second thread. This is a data race. A possible solution would be to use","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12795034,"byte_end":12795127,"line_start":1288,"line_end":1288,"column_start":5,"column_end":98}},{"value":"/ `Release` and `Acquire` orderings.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12795132,"byte_end":12795170,"line_start":1289,"line_end":1289,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12795175,"byte_end":12795178,"line_start":1290,"line_end":1290,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12795183,"byte_end":12795197,"line_start":1291,"line_end":1291,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12795202,"byte_end":12795205,"line_start":1292,"line_end":1292,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12795210,"byte_end":12795217,"line_start":1293,"line_end":1293,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12795222,"byte_end":12795271,"line_start":1294,"line_end":1294,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12795276,"byte_end":12795320,"line_start":1295,"line_end":1295,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12795325,"byte_end":12795328,"line_start":1296,"line_end":1296,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12795333,"byte_end":12795363,"line_start":1297,"line_end":1297,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12795368,"byte_end":12795398,"line_start":1298,"line_end":1298,"column_start":5,"column_end":35}},{"value":"/ let p = a.load(SeqCst, guard);","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12795403,"byte_end":12795437,"line_start":1299,"line_end":1299,"column_start":5,"column_end":39}},{"value":"/ unsafe {","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12795442,"byte_end":12795454,"line_start":1300,"line_end":1300,"column_start":5,"column_end":17}},{"value":"/     assert_eq!(p.deref(), &1234);","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12795459,"byte_end":12795496,"line_start":1301,"line_end":1301,"column_start":5,"column_end":42}},{"value":"/ }","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12795501,"byte_end":12795506,"line_start":1302,"line_end":1302,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12795511,"byte_end":12795518,"line_start":1303,"line_end":1303,"column_start":5,"column_end":12}},{"value":"allow(clippy :: trivially_copy_pass_by_ref)","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12795523,"byte_end":12795567,"line_start":1304,"line_end":1304,"column_start":5,"column_end":49}},{"value":"allow(clippy :: should_implement_trait)","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12795572,"byte_end":12795612,"line_start":1305,"line_end":1305,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":324},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12796947,"byte_end":12796956,"line_start":1348,"line_end":1348,"column_start":19,"column_end":28},"name":"deref_mut","qualname":"<Shared>::deref_mut","value":"pub unsafe fn deref_mut(&mut Self) -> &'g mut T","parent":null,"children":[],"decl_id":null,"docs":" Dereferences the pointer.","sig":null,"attributes":[{"value":"/ Dereferences the pointer.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12795742,"byte_end":12795771,"line_start":1311,"line_end":1311,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12795776,"byte_end":12795779,"line_start":1312,"line_end":1312,"column_start":5,"column_end":8}},{"value":"/ Returns a mutable reference to the pointee that is valid during the lifetime `'g`.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12795784,"byte_end":12795870,"line_start":1313,"line_end":1313,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12795875,"byte_end":12795878,"line_start":1314,"line_end":1314,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12795883,"byte_end":12795895,"line_start":1315,"line_end":1315,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12795900,"byte_end":12795903,"line_start":1316,"line_end":1316,"column_start":5,"column_end":8}},{"value":"/ * There is no guarantee that there are no more threads attempting to read/write from/to the","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12795908,"byte_end":12796003,"line_start":1317,"line_end":1317,"column_start":5,"column_end":100}},{"value":"/   actual object at the same time.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12796008,"byte_end":12796045,"line_start":1318,"line_end":1318,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12796050,"byte_end":12796053,"line_start":1319,"line_end":1319,"column_start":5,"column_end":8}},{"value":"/   The user must know that there are no concurrent accesses towards the object itself.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12796058,"byte_end":12796147,"line_start":1320,"line_end":1320,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12796152,"byte_end":12796155,"line_start":1321,"line_end":1321,"column_start":5,"column_end":8}},{"value":"/ * Other than the above, all safety concerns of `deref()` applies here.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12796160,"byte_end":12796234,"line_start":1322,"line_end":1322,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12796239,"byte_end":12796242,"line_start":1323,"line_end":1323,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12796247,"byte_end":12796261,"line_start":1324,"line_end":1324,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12796266,"byte_end":12796269,"line_start":1325,"line_end":1325,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12796274,"byte_end":12796281,"line_start":1326,"line_end":1326,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12796286,"byte_end":12796335,"line_start":1327,"line_end":1327,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12796340,"byte_end":12796384,"line_start":1328,"line_end":1328,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12796389,"byte_end":12796392,"line_start":1329,"line_end":1329,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(vec![1, 2, 3, 4]);","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12796397,"byte_end":12796439,"line_start":1330,"line_end":1330,"column_start":5,"column_end":47}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12796444,"byte_end":12796474,"line_start":1331,"line_end":1331,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12796479,"byte_end":12796482,"line_start":1332,"line_end":1332,"column_start":5,"column_end":8}},{"value":"/ let mut p = a.load(SeqCst, guard);","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12796487,"byte_end":12796525,"line_start":1333,"line_end":1333,"column_start":5,"column_end":43}},{"value":"/ unsafe {","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12796530,"byte_end":12796542,"line_start":1334,"line_end":1334,"column_start":5,"column_end":17}},{"value":"/     assert!(!p.is_null());","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12796547,"byte_end":12796577,"line_start":1335,"line_end":1335,"column_start":5,"column_end":35}},{"value":"/     let b = p.deref_mut();","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12796582,"byte_end":12796612,"line_start":1336,"line_end":1336,"column_start":5,"column_end":35}},{"value":"/     assert_eq!(b, &vec![1, 2, 3, 4]);","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12796617,"byte_end":12796658,"line_start":1337,"line_end":1337,"column_start":5,"column_end":46}},{"value":"/     b.push(5);","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12796663,"byte_end":12796681,"line_start":1338,"line_end":1338,"column_start":5,"column_end":23}},{"value":"/     assert_eq!(b, &vec![1, 2, 3, 4, 5]);","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12796686,"byte_end":12796730,"line_start":1339,"line_end":1339,"column_start":5,"column_end":49}},{"value":"/ }","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12796735,"byte_end":12796740,"line_start":1340,"line_end":1340,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12796745,"byte_end":12796748,"line_start":1341,"line_end":1341,"column_start":5,"column_end":8}},{"value":"/ let p = a.load(SeqCst, guard);","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12796753,"byte_end":12796787,"line_start":1342,"line_end":1342,"column_start":5,"column_end":39}},{"value":"/ unsafe {","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12796792,"byte_end":12796804,"line_start":1343,"line_end":1343,"column_start":5,"column_end":17}},{"value":"/     assert_eq!(p.deref(), &vec![1, 2, 3, 4, 5]);","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12796809,"byte_end":12796861,"line_start":1344,"line_end":1344,"column_start":5,"column_end":57}},{"value":"/ }","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12796866,"byte_end":12796871,"line_start":1345,"line_end":1345,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12796876,"byte_end":12796883,"line_start":1346,"line_end":1346,"column_start":5,"column_end":12}},{"value":"allow(clippy :: should_implement_trait)","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12796888,"byte_end":12796928,"line_start":1347,"line_end":1347,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":325},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12798338,"byte_end":12798344,"line_start":1385,"line_end":1385,"column_start":19,"column_end":25},"name":"as_ref","qualname":"<Shared>::as_ref","value":"pub unsafe fn as_ref(&Self) -> Option<&'g T>","parent":null,"children":[],"decl_id":null,"docs":" Converts the pointer to a reference.","sig":null,"attributes":[{"value":"/ Converts the pointer to a reference.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12797074,"byte_end":12797114,"line_start":1353,"line_end":1353,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12797119,"byte_end":12797122,"line_start":1354,"line_end":1354,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if the pointer is null, or else a reference to the object wrapped in `Some`.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12797127,"byte_end":12797222,"line_start":1355,"line_end":1355,"column_start":5,"column_end":100}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12797227,"byte_end":12797230,"line_start":1356,"line_end":1356,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12797235,"byte_end":12797247,"line_start":1357,"line_end":1357,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12797252,"byte_end":12797255,"line_start":1358,"line_end":1358,"column_start":5,"column_end":8}},{"value":"/ Dereferencing a pointer is unsafe because it could be pointing to invalid memory.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12797260,"byte_end":12797345,"line_start":1359,"line_end":1359,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12797350,"byte_end":12797353,"line_start":1360,"line_end":1360,"column_start":5,"column_end":8}},{"value":"/ Another concern is the possibility of data races due to lack of proper synchronization.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12797358,"byte_end":12797449,"line_start":1361,"line_end":1361,"column_start":5,"column_end":96}},{"value":"/ For example, consider the following scenario:","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12797454,"byte_end":12797503,"line_start":1362,"line_end":1362,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12797508,"byte_end":12797511,"line_start":1363,"line_end":1363,"column_start":5,"column_end":8}},{"value":"/ 1. A thread creates a new object: `a.store(Owned::new(10), Relaxed)`","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12797516,"byte_end":12797588,"line_start":1364,"line_end":1364,"column_start":5,"column_end":77}},{"value":"/ 2. Another thread reads it: `*a.load(Relaxed, guard).as_ref().unwrap()`","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12797593,"byte_end":12797668,"line_start":1365,"line_end":1365,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12797673,"byte_end":12797676,"line_start":1366,"line_end":1366,"column_start":5,"column_end":8}},{"value":"/ The problem is that relaxed orderings don't synchronize initialization of the object with","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12797681,"byte_end":12797774,"line_start":1367,"line_end":1367,"column_start":5,"column_end":98}},{"value":"/ the read from the second thread. This is a data race. A possible solution would be to use","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12797779,"byte_end":12797872,"line_start":1368,"line_end":1368,"column_start":5,"column_end":98}},{"value":"/ `Release` and `Acquire` orderings.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12797877,"byte_end":12797915,"line_start":1369,"line_end":1369,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12797920,"byte_end":12797923,"line_start":1370,"line_end":1370,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12797928,"byte_end":12797942,"line_start":1371,"line_end":1371,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12797947,"byte_end":12797950,"line_start":1372,"line_end":1372,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12797955,"byte_end":12797962,"line_start":1373,"line_end":1373,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12797967,"byte_end":12798016,"line_start":1374,"line_end":1374,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12798021,"byte_end":12798065,"line_start":1375,"line_end":1375,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12798070,"byte_end":12798073,"line_start":1376,"line_end":1376,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12798078,"byte_end":12798108,"line_start":1377,"line_end":1377,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12798113,"byte_end":12798143,"line_start":1378,"line_end":1378,"column_start":5,"column_end":35}},{"value":"/ let p = a.load(SeqCst, guard);","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12798148,"byte_end":12798182,"line_start":1379,"line_end":1379,"column_start":5,"column_end":39}},{"value":"/ unsafe {","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12798187,"byte_end":12798199,"line_start":1380,"line_end":1380,"column_start":5,"column_end":17}},{"value":"/     assert_eq!(p.as_ref(), Some(&1234));","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12798204,"byte_end":12798248,"line_start":1381,"line_end":1381,"column_start":5,"column_end":49}},{"value":"/ }","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12798253,"byte_end":12798258,"line_start":1382,"line_end":1382,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12798263,"byte_end":12798270,"line_start":1383,"line_end":1383,"column_start":5,"column_end":12}},{"value":"allow(clippy :: trivially_copy_pass_by_ref)","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12798275,"byte_end":12798319,"line_start":1384,"line_end":1384,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":326},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12799204,"byte_end":12799214,"line_start":1418,"line_end":1418,"column_start":19,"column_end":29},"name":"into_owned","qualname":"<Shared>::into_owned","value":"pub unsafe fn into_owned(Self) -> Owned<T>","parent":null,"children":[],"decl_id":null,"docs":" Takes ownership of the pointee.","sig":null,"attributes":[{"value":"/ Takes ownership of the pointee.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12798534,"byte_end":12798569,"line_start":1394,"line_end":1394,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12798574,"byte_end":12798577,"line_start":1395,"line_end":1395,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12798582,"byte_end":12798594,"line_start":1396,"line_end":1396,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12798599,"byte_end":12798602,"line_start":1397,"line_end":1397,"column_start":5,"column_end":8}},{"value":"/ Panics if this pointer is null, but only in debug mode.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12798607,"byte_end":12798666,"line_start":1398,"line_end":1398,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12798671,"byte_end":12798674,"line_start":1399,"line_end":1399,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12798679,"byte_end":12798691,"line_start":1400,"line_end":1400,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12798696,"byte_end":12798699,"line_start":1401,"line_end":1401,"column_start":5,"column_end":8}},{"value":"/ This method may be called only if the pointer is valid and nobody else is holding a","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12798704,"byte_end":12798791,"line_start":1402,"line_end":1402,"column_start":5,"column_end":92}},{"value":"/ reference to the same object.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12798796,"byte_end":12798829,"line_start":1403,"line_end":1403,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12798834,"byte_end":12798837,"line_start":1404,"line_end":1404,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12798842,"byte_end":12798856,"line_start":1405,"line_end":1405,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12798861,"byte_end":12798864,"line_start":1406,"line_end":1406,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12798869,"byte_end":12798876,"line_start":1407,"line_end":1407,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12798881,"byte_end":12798930,"line_start":1408,"line_end":1408,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12798935,"byte_end":12798979,"line_start":1409,"line_end":1409,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12798984,"byte_end":12798987,"line_start":1410,"line_end":1410,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12798992,"byte_end":12799022,"line_start":1411,"line_end":1411,"column_start":5,"column_end":35}},{"value":"/ unsafe {","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12799027,"byte_end":12799039,"line_start":1412,"line_end":1412,"column_start":5,"column_end":17}},{"value":"/     let guard = &epoch::unprotected();","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12799044,"byte_end":12799086,"line_start":1413,"line_end":1413,"column_start":5,"column_end":47}},{"value":"/     let p = a.load(SeqCst, guard);","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12799091,"byte_end":12799129,"line_start":1414,"line_end":1414,"column_start":5,"column_end":43}},{"value":"/     drop(p.into_owned());","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12799134,"byte_end":12799163,"line_start":1415,"line_end":1415,"column_start":5,"column_end":34}},{"value":"/ }","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12799168,"byte_end":12799173,"line_start":1416,"line_end":1416,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12799178,"byte_end":12799185,"line_start":1417,"line_end":1417,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":327},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12799823,"byte_end":12799826,"line_start":1437,"line_end":1437,"column_start":12,"column_end":15},"name":"tag","qualname":"<Shared>::tag","value":"pub fn tag(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the tag stored within the pointer.","sig":null,"attributes":[{"value":"/ Returns the tag stored within the pointer.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12799366,"byte_end":12799412,"line_start":1423,"line_end":1423,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12799417,"byte_end":12799420,"line_start":1424,"line_end":1424,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12799425,"byte_end":12799439,"line_start":1425,"line_end":1425,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12799444,"byte_end":12799447,"line_start":1426,"line_end":1426,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12799452,"byte_end":12799459,"line_start":1427,"line_end":1427,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned};","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12799464,"byte_end":12799520,"line_start":1428,"line_end":1428,"column_start":5,"column_end":61}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12799525,"byte_end":12799569,"line_start":1429,"line_end":1429,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12799574,"byte_end":12799577,"line_start":1430,"line_end":1430,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::<u64>::from(Owned::new(0u64).with_tag(2));","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12799582,"byte_end":12799644,"line_start":1431,"line_end":1431,"column_start":5,"column_end":67}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12799649,"byte_end":12799679,"line_start":1432,"line_end":1432,"column_start":5,"column_end":35}},{"value":"/ let p = a.load(SeqCst, guard);","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12799684,"byte_end":12799718,"line_start":1433,"line_end":1433,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(p.tag(), 2);","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12799723,"byte_end":12799750,"line_start":1434,"line_end":1434,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12799755,"byte_end":12799762,"line_start":1435,"line_end":1435,"column_start":5,"column_end":12}},{"value":"allow(clippy :: trivially_copy_pass_by_ref)","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12799767,"byte_end":12799811,"line_start":1436,"line_end":1436,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":328},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12800549,"byte_end":12800557,"line_start":1461,"line_end":1461,"column_start":12,"column_end":20},"name":"with_tag","qualname":"<Shared>::with_tag","value":"pub fn with_tag(&Self, usize) -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Returns the same pointer, but tagged with `tag`. `tag` is truncated to be fit into the\n unused bits of the pointer to `T`.","sig":null,"attributes":[{"value":"/ Returns the same pointer, but tagged with `tag`. `tag` is truncated to be fit into the","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12799922,"byte_end":12800012,"line_start":1442,"line_end":1442,"column_start":5,"column_end":95}},{"value":"/ unused bits of the pointer to `T`.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12800017,"byte_end":12800055,"line_start":1443,"line_end":1443,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12800060,"byte_end":12800063,"line_start":1444,"line_end":1444,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12800068,"byte_end":12800082,"line_start":1445,"line_end":1445,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12800087,"byte_end":12800090,"line_start":1446,"line_end":1446,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12800095,"byte_end":12800102,"line_start":1447,"line_end":1447,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12800107,"byte_end":12800156,"line_start":1448,"line_end":1448,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12800161,"byte_end":12800205,"line_start":1449,"line_end":1449,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12800210,"byte_end":12800213,"line_start":1450,"line_end":1450,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(0u64);","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12800218,"byte_end":12800248,"line_start":1451,"line_end":1451,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12800253,"byte_end":12800283,"line_start":1452,"line_end":1452,"column_start":5,"column_end":35}},{"value":"/ let p1 = a.load(SeqCst, guard);","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12800288,"byte_end":12800323,"line_start":1453,"line_end":1453,"column_start":5,"column_end":40}},{"value":"/ let p2 = p1.with_tag(2);","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12800328,"byte_end":12800356,"line_start":1454,"line_end":1454,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12800361,"byte_end":12800364,"line_start":1455,"line_end":1455,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(p1.tag(), 0);","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12800369,"byte_end":12800397,"line_start":1456,"line_end":1456,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(p2.tag(), 2);","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12800402,"byte_end":12800430,"line_start":1457,"line_end":1457,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(p1.as_raw(), p2.as_raw());","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12800435,"byte_end":12800476,"line_start":1458,"line_end":1458,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12800481,"byte_end":12800488,"line_start":1459,"line_end":1459,"column_start":5,"column_end":12}},{"value":"allow(clippy :: trivially_copy_pass_by_ref)","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12800493,"byte_end":12800537,"line_start":1460,"line_end":1460,"column_start":5,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":371},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\collector.rs","byte_start":12803486,"byte_end":12803495,"line_start":22,"line_end":22,"column_start":12,"column_end":21},"name":"Collector","qualname":"::collector::Collector","value":"Collector {  }","parent":null,"children":[{"krate":0,"index":372}],"decl_id":null,"docs":" An epoch-based garbage collector.\n","sig":null,"attributes":[{"value":"/ An epoch-based garbage collector.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\collector.rs","byte_start":12803437,"byte_end":12803474,"line_start":21,"line_end":21,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":378},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\collector.rs","byte_start":12803802,"byte_end":12803805,"line_start":39,"line_end":39,"column_start":12,"column_end":15},"name":"new","qualname":"<Collector>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new collector.\n","sig":null,"attributes":[{"value":"/ Creates a new collector.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\collector.rs","byte_start":12803762,"byte_end":12803790,"line_start":38,"line_end":38,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":379},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\collector.rs","byte_start":12803910,"byte_end":12803918,"line_start":44,"line_end":44,"column_start":12,"column_end":20},"name":"register","qualname":"<Collector>::register","value":"pub fn register(&Self) -> LocalHandle","parent":null,"children":[],"decl_id":null,"docs":" Registers a new handle for the collector.\n","sig":null,"attributes":[{"value":"/ Registers a new handle for the collector.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\collector.rs","byte_start":12803853,"byte_end":12803898,"line_start":43,"line_end":43,"column_start":5,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":387},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\collector.rs","byte_start":12804586,"byte_end":12804597,"line_start":73,"line_end":73,"column_start":12,"column_end":23},"name":"LocalHandle","qualname":"::collector::LocalHandle","value":"LocalHandle {  }","parent":null,"children":[{"krate":0,"index":388}],"decl_id":null,"docs":" A handle to a garbage collector.\n","sig":null,"attributes":[{"value":"/ A handle to a garbage collector.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\collector.rs","byte_start":12804538,"byte_end":12804574,"line_start":72,"line_end":72,"column_start":1,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":390},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\collector.rs","byte_start":12804708,"byte_end":12804711,"line_start":80,"line_end":80,"column_start":12,"column_end":15},"name":"pin","qualname":"<LocalHandle>::pin","value":"pub fn pin(&Self) -> Guard","parent":null,"children":[],"decl_id":null,"docs":" Pins the handle.\n","sig":null,"attributes":[{"value":"/ Pins the handle.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\collector.rs","byte_start":12804662,"byte_end":12804682,"line_start":78,"line_end":78,"column_start":5,"column_end":25}},{"value":"inline","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\collector.rs","byte_start":12804687,"byte_end":12804696,"line_start":79,"line_end":79,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":391},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\collector.rs","byte_start":12804849,"byte_end":12804858,"line_start":86,"line_end":86,"column_start":12,"column_end":21},"name":"is_pinned","qualname":"<LocalHandle>::is_pinned","value":"pub fn is_pinned(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the handle is pinned.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the handle is pinned.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\collector.rs","byte_start":12804780,"byte_end":12804823,"line_start":84,"line_end":84,"column_start":5,"column_end":48}},{"value":"inline","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\collector.rs","byte_start":12804828,"byte_end":12804837,"line_start":85,"line_end":85,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":392},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\collector.rs","byte_start":12805014,"byte_end":12805023,"line_start":92,"line_end":92,"column_start":12,"column_end":21},"name":"collector","qualname":"<LocalHandle>::collector","value":"pub fn collector(&Self) -> &Collector","parent":null,"children":[],"decl_id":null,"docs":" Returns the `Collector` associated with this handle.\n","sig":null,"attributes":[{"value":"/ Returns the `Collector` associated with this handle.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\collector.rs","byte_start":12804932,"byte_end":12804988,"line_start":90,"line_end":90,"column_start":5,"column_end":61}},{"value":"inline","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\collector.rs","byte_start":12804993,"byte_end":12805002,"line_start":91,"line_end":91,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":475},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12825116,"byte_end":12825121,"line_start":70,"line_end":70,"column_start":12,"column_end":17},"name":"Guard","qualname":"::guard::Guard","value":"Guard {  }","parent":null,"children":[{"krate":0,"index":476}],"decl_id":null,"docs":" A guard that keeps the current thread pinned.","sig":null,"attributes":[{"value":"/ A guard that keeps the current thread pinned.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12823400,"byte_end":12823449,"line_start":11,"line_end":11,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12823450,"byte_end":12823453,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ # Pinning","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12823454,"byte_end":12823467,"line_start":13,"line_end":13,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12823468,"byte_end":12823471,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ The current thread is pinned by calling [`pin`], which returns a new guard:","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12823472,"byte_end":12823551,"line_start":15,"line_end":15,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12823552,"byte_end":12823555,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12823556,"byte_end":12823563,"line_start":17,"line_end":17,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_epoch as epoch;","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12823564,"byte_end":12823597,"line_start":18,"line_end":18,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12823598,"byte_end":12823601,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ // It is often convenient to prefix a call to `pin` with a `&` in order to create a reference.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12823602,"byte_end":12823700,"line_start":20,"line_end":20,"column_start":1,"column_end":99}},{"value":"/ // This is not really necessary, but makes passing references to the guard a bit easier.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12823701,"byte_end":12823793,"line_start":21,"line_end":21,"column_start":1,"column_end":93}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12823794,"byte_end":12823824,"line_start":22,"line_end":22,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12823825,"byte_end":12823832,"line_start":23,"line_end":23,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12823833,"byte_end":12823836,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ When a guard gets dropped, the current thread is automatically unpinned.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12823837,"byte_end":12823913,"line_start":25,"line_end":25,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12823914,"byte_end":12823917,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ # Pointers on the stack","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12823918,"byte_end":12823945,"line_start":27,"line_end":27,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12823946,"byte_end":12823949,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ Having a guard allows us to create pointers on the stack to heap-allocated objects.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12823950,"byte_end":12824037,"line_start":29,"line_end":29,"column_start":1,"column_end":88}},{"value":"/ For example:","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12824038,"byte_end":12824054,"line_start":30,"line_end":30,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12824055,"byte_end":12824058,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12824059,"byte_end":12824066,"line_start":32,"line_end":32,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12824067,"byte_end":12824116,"line_start":33,"line_end":33,"column_start":1,"column_end":50}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12824117,"byte_end":12824161,"line_start":34,"line_end":34,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12824162,"byte_end":12824165,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ // Create a heap-allocated number.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12824166,"byte_end":12824204,"line_start":36,"line_end":36,"column_start":1,"column_end":39}},{"value":"/ let a = Atomic::new(777);","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12824205,"byte_end":12824234,"line_start":37,"line_end":37,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12824235,"byte_end":12824238,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ // Pin the current thread.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12824239,"byte_end":12824269,"line_start":39,"line_end":39,"column_start":1,"column_end":31}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12824270,"byte_end":12824300,"line_start":40,"line_end":40,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12824301,"byte_end":12824304,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ // Load the heap-allocated object and create pointer `p` on the stack.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12824305,"byte_end":12824379,"line_start":42,"line_end":42,"column_start":1,"column_end":75}},{"value":"/ let p = a.load(SeqCst, guard);","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12824380,"byte_end":12824414,"line_start":43,"line_end":43,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12824415,"byte_end":12824418,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ // Dereference the pointer and print the value:","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12824419,"byte_end":12824470,"line_start":45,"line_end":45,"column_start":1,"column_end":52}},{"value":"/ if let Some(num) = unsafe { p.as_ref() } {","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12824471,"byte_end":12824517,"line_start":46,"line_end":46,"column_start":1,"column_end":47}},{"value":"/     println!(\"The number is {}.\", num);","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12824518,"byte_end":12824561,"line_start":47,"line_end":47,"column_start":1,"column_end":44}},{"value":"/ }","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12824562,"byte_end":12824567,"line_start":48,"line_end":48,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12824568,"byte_end":12824575,"line_start":49,"line_end":49,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12824576,"byte_end":12824579,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ # Multiple guards","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12824580,"byte_end":12824601,"line_start":51,"line_end":51,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12824602,"byte_end":12824605,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ Pinning is reentrant and it is perfectly legal to create multiple guards. In that case, the","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12824606,"byte_end":12824701,"line_start":53,"line_end":53,"column_start":1,"column_end":96}},{"value":"/ thread will actually be pinned only when the first guard is created and unpinned when the last","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12824702,"byte_end":12824800,"line_start":54,"line_end":54,"column_start":1,"column_end":99}},{"value":"/ one is dropped:","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12824801,"byte_end":12824820,"line_start":55,"line_end":55,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12824821,"byte_end":12824824,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12824825,"byte_end":12824832,"line_start":57,"line_end":57,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_epoch as epoch;","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12824833,"byte_end":12824866,"line_start":58,"line_end":58,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12824867,"byte_end":12824870,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ let guard1 = epoch::pin();","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12824871,"byte_end":12824901,"line_start":60,"line_end":60,"column_start":1,"column_end":31}},{"value":"/ let guard2 = epoch::pin();","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12824902,"byte_end":12824932,"line_start":61,"line_end":61,"column_start":1,"column_end":31}},{"value":"/ assert!(epoch::is_pinned());","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12824933,"byte_end":12824965,"line_start":62,"line_end":62,"column_start":1,"column_end":33}},{"value":"/ drop(guard1);","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12824966,"byte_end":12824983,"line_start":63,"line_end":63,"column_start":1,"column_end":18}},{"value":"/ assert!(epoch::is_pinned());","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12824984,"byte_end":12825016,"line_start":64,"line_end":64,"column_start":1,"column_end":33}},{"value":"/ drop(guard2);","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12825017,"byte_end":12825034,"line_start":65,"line_end":65,"column_start":1,"column_end":18}},{"value":"/ assert!(!epoch::is_pinned());","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12825035,"byte_end":12825068,"line_start":66,"line_end":66,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12825069,"byte_end":12825076,"line_start":67,"line_end":67,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12825077,"byte_end":12825080,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ [`pin`]: super::pin","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12825081,"byte_end":12825104,"line_start":69,"line_end":69,"column_start":1,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":478},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12826096,"byte_end":12826101,"line_start":90,"line_end":90,"column_start":12,"column_end":17},"name":"defer","qualname":"<Guard>::defer","value":"pub fn defer<F, R>(&Self, F) where F: FnOnce() -> R, F: Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Stores a function so that it can be executed at some point after all currently pinned\n threads get unpinned.","sig":null,"attributes":[{"value":"/ Stores a function so that it can be executed at some point after all currently pinned","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12825180,"byte_end":12825269,"line_start":75,"line_end":75,"column_start":5,"column_end":94}},{"value":"/ threads get unpinned.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12825274,"byte_end":12825299,"line_start":76,"line_end":76,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12825304,"byte_end":12825307,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ This method first stores `f` into the thread-local (or handle-local) cache. If this cache","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12825312,"byte_end":12825405,"line_start":78,"line_end":78,"column_start":5,"column_end":98}},{"value":"/ becomes full, some functions are moved into the global cache. At the same time, some","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12825410,"byte_end":12825498,"line_start":79,"line_end":79,"column_start":5,"column_end":93}},{"value":"/ functions from both local and global caches may get executed in order to incrementally","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12825503,"byte_end":12825593,"line_start":80,"line_end":80,"column_start":5,"column_end":95}},{"value":"/ clean up the caches as they fill up.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12825598,"byte_end":12825638,"line_start":81,"line_end":81,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12825643,"byte_end":12825646,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ There is no guarantee when exactly `f` will be executed. The only guarantee is that it","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12825651,"byte_end":12825741,"line_start":83,"line_end":83,"column_start":5,"column_end":95}},{"value":"/ won't be executed until all currently pinned threads get unpinned. In theory, `f` might","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12825746,"byte_end":12825837,"line_start":84,"line_end":84,"column_start":5,"column_end":96}},{"value":"/ never run, but the epoch-based garbage collection will make an effort to execute it","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12825842,"byte_end":12825929,"line_start":85,"line_end":85,"column_start":5,"column_end":92}},{"value":"/ reasonably soon.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12825934,"byte_end":12825954,"line_start":86,"line_end":86,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12825959,"byte_end":12825962,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ If this method is called from an [`unprotected`] guard, the function will simply be","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12825967,"byte_end":12826054,"line_start":88,"line_end":88,"column_start":5,"column_end":92}},{"value":"/ executed immediately.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12826059,"byte_end":12826084,"line_start":89,"line_end":89,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":481},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12830401,"byte_end":12830416,"line_start":188,"line_end":188,"column_start":19,"column_end":34},"name":"defer_unchecked","qualname":"<Guard>::defer_unchecked","value":"pub unsafe fn defer_unchecked<F, R>(&Self, F) where F: FnOnce() -> R","parent":null,"children":[],"decl_id":null,"docs":" Stores a function so that it can be executed at some point after all currently pinned\n threads get unpinned.","sig":null,"attributes":[{"value":"/ Stores a function so that it can be executed at some point after all currently pinned","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12826265,"byte_end":12826354,"line_start":100,"line_end":100,"column_start":5,"column_end":94}},{"value":"/ threads get unpinned.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12826359,"byte_end":12826384,"line_start":101,"line_end":101,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12826389,"byte_end":12826392,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ This method first stores `f` into the thread-local (or handle-local) cache. If this cache","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12826397,"byte_end":12826490,"line_start":103,"line_end":103,"column_start":5,"column_end":98}},{"value":"/ becomes full, some functions are moved into the global cache. At the same time, some","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12826495,"byte_end":12826583,"line_start":104,"line_end":104,"column_start":5,"column_end":93}},{"value":"/ functions from both local and global caches may get executed in order to incrementally","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12826588,"byte_end":12826678,"line_start":105,"line_end":105,"column_start":5,"column_end":95}},{"value":"/ clean up the caches as they fill up.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12826683,"byte_end":12826723,"line_start":106,"line_end":106,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12826728,"byte_end":12826731,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ There is no guarantee when exactly `f` will be executed. The only guarantee is that it","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12826736,"byte_end":12826826,"line_start":108,"line_end":108,"column_start":5,"column_end":95}},{"value":"/ won't be executed until all currently pinned threads get unpinned. In theory, `f` might","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12826831,"byte_end":12826922,"line_start":109,"line_end":109,"column_start":5,"column_end":96}},{"value":"/ never run, but the epoch-based garbage collection will make an effort to execute it","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12826927,"byte_end":12827014,"line_start":110,"line_end":110,"column_start":5,"column_end":92}},{"value":"/ reasonably soon.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12827019,"byte_end":12827039,"line_start":111,"line_end":111,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12827044,"byte_end":12827047,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ If this method is called from an [`unprotected`] guard, the function will simply be","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12827052,"byte_end":12827139,"line_start":113,"line_end":113,"column_start":5,"column_end":92}},{"value":"/ executed immediately.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12827144,"byte_end":12827169,"line_start":114,"line_end":114,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12827174,"byte_end":12827177,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12827182,"byte_end":12827194,"line_start":116,"line_end":116,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12827199,"byte_end":12827202,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ The given function must not hold reference onto the stack. It is highly recommended that","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12827207,"byte_end":12827299,"line_start":118,"line_end":118,"column_start":5,"column_end":97}},{"value":"/ the passed function is **always** marked with `move` in order to prevent accidental","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12827304,"byte_end":12827391,"line_start":119,"line_end":119,"column_start":5,"column_end":92}},{"value":"/ borrows.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12827396,"byte_end":12827408,"line_start":120,"line_end":120,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12827413,"byte_end":12827416,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12827421,"byte_end":12827428,"line_start":122,"line_end":122,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch as epoch;","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12827433,"byte_end":12827466,"line_start":123,"line_end":123,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12827471,"byte_end":12827474,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12827479,"byte_end":12827509,"line_start":125,"line_end":125,"column_start":5,"column_end":35}},{"value":"/ let message = \"Hello!\";","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12827514,"byte_end":12827541,"line_start":126,"line_end":126,"column_start":5,"column_end":32}},{"value":"/ unsafe {","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12827546,"byte_end":12827558,"line_start":127,"line_end":127,"column_start":5,"column_end":17}},{"value":"/     // ALWAYS use `move` when sending a closure into `defer_unchecked`.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12827563,"byte_end":12827638,"line_start":128,"line_end":128,"column_start":5,"column_end":80}},{"value":"/     guard.defer_unchecked(move || {","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12827643,"byte_end":12827682,"line_start":129,"line_end":129,"column_start":5,"column_end":44}},{"value":"/         println!(\"{}\", message);","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12827687,"byte_end":12827723,"line_start":130,"line_end":130,"column_start":5,"column_end":41}},{"value":"/     });","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12827728,"byte_end":12827739,"line_start":131,"line_end":131,"column_start":5,"column_end":16}},{"value":"/ }","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12827744,"byte_end":12827749,"line_start":132,"line_end":132,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12827754,"byte_end":12827761,"line_start":133,"line_end":133,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12827766,"byte_end":12827769,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ Apart from that, keep in mind that another thread may execute `f`, so anything accessed by","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12827774,"byte_end":12827868,"line_start":135,"line_end":135,"column_start":5,"column_end":99}},{"value":"/ the closure must be `Send`.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12827873,"byte_end":12827904,"line_start":136,"line_end":136,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12827909,"byte_end":12827912,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ We intentionally didn't require `F: Send`, because Rust's type systems usually cannot prove","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12827917,"byte_end":12828012,"line_start":138,"line_end":138,"column_start":5,"column_end":100}},{"value":"/ `F: Send` for typical use cases. For example, consider the following code snippet, which","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12828017,"byte_end":12828109,"line_start":139,"line_end":139,"column_start":5,"column_end":97}},{"value":"/ exemplifies the typical use case of deferring the deallocation of a shared reference:","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12828114,"byte_end":12828203,"line_start":140,"line_end":140,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12828208,"byte_end":12828211,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ ```ignore","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12828216,"byte_end":12828229,"line_start":142,"line_end":142,"column_start":5,"column_end":18}},{"value":"/ let shared = Owned::new(7i32).into_shared(guard);","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12828234,"byte_end":12828287,"line_start":143,"line_end":143,"column_start":5,"column_end":58}},{"value":"/ guard.defer_unchecked(move || shared.into_owned()); // `Shared` is not `Send`!","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12828292,"byte_end":12828374,"line_start":144,"line_end":144,"column_start":5,"column_end":87}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12828379,"byte_end":12828386,"line_start":145,"line_end":145,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12828391,"byte_end":12828394,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ While `Shared` is not `Send`, it's safe for another thread to call the deferred function,","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12828399,"byte_end":12828492,"line_start":147,"line_end":147,"column_start":5,"column_end":98}},{"value":"/ because it's called only after the grace period and `shared` is no longer shared with other","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12828497,"byte_end":12828592,"line_start":148,"line_end":148,"column_start":5,"column_end":100}},{"value":"/ threads. But we don't expect type systems to prove this.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12828597,"byte_end":12828657,"line_start":149,"line_end":149,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12828662,"byte_end":12828665,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12828670,"byte_end":12828684,"line_start":151,"line_end":151,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12828689,"byte_end":12828692,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ When a heap-allocated object in a data structure becomes unreachable, it has to be","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12828697,"byte_end":12828783,"line_start":153,"line_end":153,"column_start":5,"column_end":91}},{"value":"/ deallocated. However, the current thread and other threads may be still holding references","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12828788,"byte_end":12828882,"line_start":154,"line_end":154,"column_start":5,"column_end":99}},{"value":"/ on the stack to that same object. Therefore it cannot be deallocated before those references","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12828887,"byte_end":12828983,"line_start":155,"line_end":155,"column_start":5,"column_end":101}},{"value":"/ get dropped. This method can defer deallocation until all those threads get unpinned and","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12828988,"byte_end":12829080,"line_start":156,"line_end":156,"column_start":5,"column_end":97}},{"value":"/ consequently drop all their references on the stack.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12829085,"byte_end":12829141,"line_start":157,"line_end":157,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12829146,"byte_end":12829149,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12829154,"byte_end":12829161,"line_start":159,"line_end":159,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned};","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12829166,"byte_end":12829222,"line_start":160,"line_end":160,"column_start":5,"column_end":61}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12829227,"byte_end":12829271,"line_start":161,"line_end":161,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12829276,"byte_end":12829279,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(\"foo\");","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12829284,"byte_end":12829315,"line_start":163,"line_end":163,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12829320,"byte_end":12829323,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ // Now suppose that `a` is shared among multiple threads and concurrently","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12829328,"byte_end":12829405,"line_start":165,"line_end":165,"column_start":5,"column_end":82}},{"value":"/ // accessed and modified...","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12829410,"byte_end":12829441,"line_start":166,"line_end":166,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12829446,"byte_end":12829449,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ // Pin the current thread.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12829454,"byte_end":12829484,"line_start":168,"line_end":168,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12829489,"byte_end":12829519,"line_start":169,"line_end":169,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12829524,"byte_end":12829527,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ // Steal the object currently stored in `a` and swap it with another one.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12829532,"byte_end":12829609,"line_start":171,"line_end":171,"column_start":5,"column_end":82}},{"value":"/ let p = a.swap(Owned::new(\"bar\").into_shared(guard), SeqCst, guard);","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12829614,"byte_end":12829686,"line_start":172,"line_end":172,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12829691,"byte_end":12829694,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ if !p.is_null() {","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12829699,"byte_end":12829720,"line_start":174,"line_end":174,"column_start":5,"column_end":26}},{"value":"/     // The object `p` is pointing to is now unreachable.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12829725,"byte_end":12829785,"line_start":175,"line_end":175,"column_start":5,"column_end":65}},{"value":"/     // Defer its deallocation until all currently pinned threads get unpinned.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12829790,"byte_end":12829872,"line_start":176,"line_end":176,"column_start":5,"column_end":87}},{"value":"/     unsafe {","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12829877,"byte_end":12829893,"line_start":177,"line_end":177,"column_start":5,"column_end":21}},{"value":"/         // ALWAYS use `move` when sending a closure into `defer_unchecked`.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12829898,"byte_end":12829977,"line_start":178,"line_end":178,"column_start":5,"column_end":84}},{"value":"/         guard.defer_unchecked(move || {","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12829982,"byte_end":12830025,"line_start":179,"line_end":179,"column_start":5,"column_end":48}},{"value":"/             println!(\"{} is now being deallocated.\", p.deref());","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12830030,"byte_end":12830098,"line_start":180,"line_end":180,"column_start":5,"column_end":73}},{"value":"/             // Now we have unique access to the object pointed to by `p` and can turn it","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12830103,"byte_end":12830195,"line_start":181,"line_end":181,"column_start":5,"column_end":97}},{"value":"/             // into an `Owned`. Dropping the `Owned` will deallocate the object.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12830200,"byte_end":12830284,"line_start":182,"line_end":182,"column_start":5,"column_end":89}},{"value":"/             drop(p.into_owned());","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12830289,"byte_end":12830326,"line_start":183,"line_end":183,"column_start":5,"column_end":42}},{"value":"/         });","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12830331,"byte_end":12830346,"line_start":184,"line_end":184,"column_start":5,"column_end":20}},{"value":"/     }","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12830351,"byte_end":12830360,"line_start":185,"line_end":185,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12830365,"byte_end":12830370,"line_start":186,"line_end":186,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12830375,"byte_end":12830382,"line_start":187,"line_end":187,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":485},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12834003,"byte_end":12834016,"line_start":267,"line_end":267,"column_start":19,"column_end":32},"name":"defer_destroy","qualname":"<Guard>::defer_destroy","value":"pub unsafe fn defer_destroy<T>(&Self, Shared<, T>)","parent":null,"children":[],"decl_id":null,"docs":" Stores a destructor for an object so that it can be deallocated and dropped at some point\n after all currently pinned threads get unpinned.","sig":null,"attributes":[{"value":"/ Stores a destructor for an object so that it can be deallocated and dropped at some point","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12830655,"byte_end":12830748,"line_start":199,"line_end":199,"column_start":5,"column_end":98}},{"value":"/ after all currently pinned threads get unpinned.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12830753,"byte_end":12830805,"line_start":200,"line_end":200,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12830810,"byte_end":12830813,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ This method first stores the destructor into the thread-local (or handle-local) cache. If","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12830818,"byte_end":12830911,"line_start":202,"line_end":202,"column_start":5,"column_end":98}},{"value":"/ this cache becomes full, some destructors are moved into the global cache. At the same","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12830916,"byte_end":12831006,"line_start":203,"line_end":203,"column_start":5,"column_end":95}},{"value":"/ time, some destructors from both local and global caches may get executed in order to","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12831011,"byte_end":12831100,"line_start":204,"line_end":204,"column_start":5,"column_end":94}},{"value":"/ incrementally clean up the caches as they fill up.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12831105,"byte_end":12831159,"line_start":205,"line_end":205,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12831164,"byte_end":12831167,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ There is no guarantee when exactly the destructor will be executed. The only guarantee is","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12831172,"byte_end":12831265,"line_start":207,"line_end":207,"column_start":5,"column_end":98}},{"value":"/ that it won't be executed until all currently pinned threads get unpinned. In theory, the","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12831270,"byte_end":12831363,"line_start":208,"line_end":208,"column_start":5,"column_end":98}},{"value":"/ destructor might never run, but the epoch-based garbage collection will make an effort to","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12831368,"byte_end":12831461,"line_start":209,"line_end":209,"column_start":5,"column_end":98}},{"value":"/ execute it reasonably soon.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12831466,"byte_end":12831497,"line_start":210,"line_end":210,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12831502,"byte_end":12831505,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ If this method is called from an [`unprotected`] guard, the destructor will simply be","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12831510,"byte_end":12831599,"line_start":212,"line_end":212,"column_start":5,"column_end":94}},{"value":"/ executed immediately.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12831604,"byte_end":12831629,"line_start":213,"line_end":213,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12831634,"byte_end":12831637,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12831642,"byte_end":12831654,"line_start":215,"line_end":215,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12831659,"byte_end":12831662,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ The object must not be reachable by other threads anymore, otherwise it might be still in","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12831667,"byte_end":12831760,"line_start":217,"line_end":217,"column_start":5,"column_end":98}},{"value":"/ use when the destructor runs.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12831765,"byte_end":12831798,"line_start":218,"line_end":218,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12831803,"byte_end":12831806,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ Apart from that, keep in mind that another thread may execute the destructor, so the object","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12831811,"byte_end":12831906,"line_start":220,"line_end":220,"column_start":5,"column_end":100}},{"value":"/ must be sendable to other threads.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12831911,"byte_end":12831949,"line_start":221,"line_end":221,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12831954,"byte_end":12831957,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ We intentionally didn't require `T: Send`, because Rust's type systems usually cannot prove","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12831962,"byte_end":12832057,"line_start":223,"line_end":223,"column_start":5,"column_end":100}},{"value":"/ `T: Send` for typical use cases. For example, consider the following code snippet, which","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12832062,"byte_end":12832154,"line_start":224,"line_end":224,"column_start":5,"column_end":97}},{"value":"/ exemplifies the typical use case of deferring the deallocation of a shared reference:","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12832159,"byte_end":12832248,"line_start":225,"line_end":225,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12832253,"byte_end":12832256,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ ```ignore","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12832261,"byte_end":12832274,"line_start":227,"line_end":227,"column_start":5,"column_end":18}},{"value":"/ let shared = Owned::new(7i32).into_shared(guard);","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12832279,"byte_end":12832332,"line_start":228,"line_end":228,"column_start":5,"column_end":58}},{"value":"/ guard.defer_destroy(shared); // `Shared` is not `Send`!","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12832337,"byte_end":12832396,"line_start":229,"line_end":229,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12832401,"byte_end":12832408,"line_start":230,"line_end":230,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12832413,"byte_end":12832416,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ While `Shared` is not `Send`, it's safe for another thread to call the destructor, because","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12832421,"byte_end":12832515,"line_start":232,"line_end":232,"column_start":5,"column_end":99}},{"value":"/ it's called only after the grace period and `shared` is no longer shared with other","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12832520,"byte_end":12832607,"line_start":233,"line_end":233,"column_start":5,"column_end":92}},{"value":"/ threads. But we don't expect type systems to prove this.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12832612,"byte_end":12832672,"line_start":234,"line_end":234,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12832677,"byte_end":12832680,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12832685,"byte_end":12832699,"line_start":236,"line_end":236,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12832704,"byte_end":12832707,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ When a heap-allocated object in a data structure becomes unreachable, it has to be","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12832712,"byte_end":12832798,"line_start":238,"line_end":238,"column_start":5,"column_end":91}},{"value":"/ deallocated. However, the current thread and other threads may be still holding references","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12832803,"byte_end":12832897,"line_start":239,"line_end":239,"column_start":5,"column_end":99}},{"value":"/ on the stack to that same object. Therefore it cannot be deallocated before those references","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12832902,"byte_end":12832998,"line_start":240,"line_end":240,"column_start":5,"column_end":101}},{"value":"/ get dropped. This method can defer deallocation until all those threads get unpinned and","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12833003,"byte_end":12833095,"line_start":241,"line_end":241,"column_start":5,"column_end":97}},{"value":"/ consequently drop all their references on the stack.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12833100,"byte_end":12833156,"line_start":242,"line_end":242,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12833161,"byte_end":12833164,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12833169,"byte_end":12833176,"line_start":244,"line_end":244,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned};","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12833181,"byte_end":12833237,"line_start":245,"line_end":245,"column_start":5,"column_end":61}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12833242,"byte_end":12833286,"line_start":246,"line_end":246,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12833291,"byte_end":12833294,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(\"foo\");","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12833299,"byte_end":12833330,"line_start":248,"line_end":248,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12833335,"byte_end":12833338,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ // Now suppose that `a` is shared among multiple threads and concurrently","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12833343,"byte_end":12833420,"line_start":250,"line_end":250,"column_start":5,"column_end":82}},{"value":"/ // accessed and modified...","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12833425,"byte_end":12833456,"line_start":251,"line_end":251,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12833461,"byte_end":12833464,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ // Pin the current thread.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12833469,"byte_end":12833499,"line_start":253,"line_end":253,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12833504,"byte_end":12833534,"line_start":254,"line_end":254,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12833539,"byte_end":12833542,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ // Steal the object currently stored in `a` and swap it with another one.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12833547,"byte_end":12833624,"line_start":256,"line_end":256,"column_start":5,"column_end":82}},{"value":"/ let p = a.swap(Owned::new(\"bar\").into_shared(guard), SeqCst, guard);","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12833629,"byte_end":12833701,"line_start":257,"line_end":257,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12833706,"byte_end":12833709,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ if !p.is_null() {","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12833714,"byte_end":12833735,"line_start":259,"line_end":259,"column_start":5,"column_end":26}},{"value":"/     // The object `p` is pointing to is now unreachable.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12833740,"byte_end":12833800,"line_start":260,"line_end":260,"column_start":5,"column_end":65}},{"value":"/     // Defer its deallocation until all currently pinned threads get unpinned.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12833805,"byte_end":12833887,"line_start":261,"line_end":261,"column_start":5,"column_end":87}},{"value":"/     unsafe {","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12833892,"byte_end":12833908,"line_start":262,"line_end":262,"column_start":5,"column_end":21}},{"value":"/         guard.defer_destroy(p);","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12833913,"byte_end":12833948,"line_start":263,"line_end":263,"column_start":5,"column_end":40}},{"value":"/     }","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12833953,"byte_end":12833962,"line_start":264,"line_end":264,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12833967,"byte_end":12833972,"line_start":265,"line_end":265,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12833977,"byte_end":12833984,"line_start":266,"line_end":266,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":488},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12834901,"byte_end":12834906,"line_start":291,"line_end":291,"column_start":12,"column_end":17},"name":"flush","qualname":"<Guard>::flush","value":"pub fn flush(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Clears up the thread-local cache of deferred functions by executing them or moving into the\n global cache.","sig":null,"attributes":[{"value":"/ Clears up the thread-local cache of deferred functions by executing them or moving into the","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12834116,"byte_end":12834211,"line_start":271,"line_end":271,"column_start":5,"column_end":100}},{"value":"/ global cache.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12834216,"byte_end":12834233,"line_start":272,"line_end":272,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12834238,"byte_end":12834241,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ Call this method after deferring execution of a function if you want to get it executed as","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12834246,"byte_end":12834340,"line_start":274,"line_end":274,"column_start":5,"column_end":99}},{"value":"/ soon as possible. Flushing will make sure it is residing in in the global cache, so that","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12834345,"byte_end":12834437,"line_start":275,"line_end":275,"column_start":5,"column_end":97}},{"value":"/ any thread has a chance of taking the function and executing it.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12834442,"byte_end":12834510,"line_start":276,"line_end":276,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12834515,"byte_end":12834518,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ If this method is called from an [`unprotected`] guard, it is a no-op (nothing happens).","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12834523,"byte_end":12834615,"line_start":278,"line_end":278,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12834620,"byte_end":12834623,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12834628,"byte_end":12834642,"line_start":280,"line_end":280,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12834647,"byte_end":12834650,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12834655,"byte_end":12834662,"line_start":282,"line_end":282,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch as epoch;","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12834667,"byte_end":12834700,"line_start":283,"line_end":283,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12834705,"byte_end":12834708,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12834713,"byte_end":12834743,"line_start":285,"line_end":285,"column_start":5,"column_end":35}},{"value":"/ guard.defer(move || {","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12834748,"byte_end":12834773,"line_start":286,"line_end":286,"column_start":5,"column_end":30}},{"value":"/     println!(\"This better be printed as soon as possible!\");","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12834778,"byte_end":12834842,"line_start":287,"line_end":287,"column_start":5,"column_end":69}},{"value":"/ });","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12834847,"byte_end":12834854,"line_start":288,"line_end":288,"column_start":5,"column_end":12}},{"value":"/ guard.flush();","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12834859,"byte_end":12834877,"line_start":289,"line_end":289,"column_start":5,"column_end":23}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12834882,"byte_end":12834889,"line_start":290,"line_end":290,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":489},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12836068,"byte_end":12836073,"line_start":324,"line_end":324,"column_start":12,"column_end":17},"name":"repin","qualname":"<Guard>::repin","value":"pub fn repin(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Unpins and then immediately re-pins the thread.","sig":null,"attributes":[{"value":"/ Unpins and then immediately re-pins the thread.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12835030,"byte_end":12835081,"line_start":297,"line_end":297,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12835086,"byte_end":12835089,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ This method is useful when you don't want delay the advancement of the global epoch by","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12835094,"byte_end":12835184,"line_start":299,"line_end":299,"column_start":5,"column_end":95}},{"value":"/ holding an old epoch. For safety, you should not maintain any guard-based reference across","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12835189,"byte_end":12835283,"line_start":300,"line_end":300,"column_start":5,"column_end":99}},{"value":"/ the call (the latter is enforced by `&mut self`). The thread will only be repinned if this","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12835288,"byte_end":12835382,"line_start":301,"line_end":301,"column_start":5,"column_end":99}},{"value":"/ is the only active guard for the current thread.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12835387,"byte_end":12835439,"line_start":302,"line_end":302,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12835444,"byte_end":12835447,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ If this method is called from an [`unprotected`] guard, then the call will be just no-op.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12835452,"byte_end":12835545,"line_start":304,"line_end":304,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12835550,"byte_end":12835553,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12835558,"byte_end":12835572,"line_start":306,"line_end":306,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12835577,"byte_end":12835580,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12835585,"byte_end":12835592,"line_start":308,"line_end":308,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12835597,"byte_end":12835646,"line_start":309,"line_end":309,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12835651,"byte_end":12835695,"line_start":310,"line_end":310,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12835700,"byte_end":12835703,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(777);","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12835708,"byte_end":12835737,"line_start":312,"line_end":312,"column_start":5,"column_end":34}},{"value":"/ let mut guard = epoch::pin();","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12835742,"byte_end":12835775,"line_start":313,"line_end":313,"column_start":5,"column_end":38}},{"value":"/ {","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12835780,"byte_end":12835785,"line_start":314,"line_end":314,"column_start":5,"column_end":10}},{"value":"/     let p = a.load(SeqCst, &guard);","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12835790,"byte_end":12835829,"line_start":315,"line_end":315,"column_start":5,"column_end":44}},{"value":"/     assert_eq!(unsafe { p.as_ref() }, Some(&777));","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12835834,"byte_end":12835888,"line_start":316,"line_end":316,"column_start":5,"column_end":59}},{"value":"/ }","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12835893,"byte_end":12835898,"line_start":317,"line_end":317,"column_start":5,"column_end":10}},{"value":"/ guard.repin();","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12835903,"byte_end":12835921,"line_start":318,"line_end":318,"column_start":5,"column_end":23}},{"value":"/ {","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12835926,"byte_end":12835931,"line_start":319,"line_end":319,"column_start":5,"column_end":10}},{"value":"/     let p = a.load(SeqCst, &guard);","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12835936,"byte_end":12835975,"line_start":320,"line_end":320,"column_start":5,"column_end":44}},{"value":"/     assert_eq!(unsafe { p.as_ref() }, Some(&777));","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12835980,"byte_end":12836034,"line_start":321,"line_end":321,"column_start":5,"column_end":59}},{"value":"/ }","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12836039,"byte_end":12836044,"line_start":322,"line_end":322,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12836049,"byte_end":12836056,"line_start":323,"line_end":323,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":490},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12837400,"byte_end":12837411,"line_start":360,"line_end":360,"column_start":12,"column_end":23},"name":"repin_after","qualname":"<Guard>::repin_after","value":"pub fn repin_after<F, R>(&mut Self, F) -> R where F: FnOnce() -> R","parent":null,"children":[],"decl_id":null,"docs":" Temporarily unpins the thread, executes the given function and then re-pins the thread.","sig":null,"attributes":[{"value":"/ Temporarily unpins the thread, executes the given function and then re-pins the thread.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12836197,"byte_end":12836288,"line_start":330,"line_end":330,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12836293,"byte_end":12836296,"line_start":331,"line_end":331,"column_start":5,"column_end":8}},{"value":"/ This method is useful when you need to perform a long-running operation (e.g. sleeping)","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12836301,"byte_end":12836392,"line_start":332,"line_end":332,"column_start":5,"column_end":96}},{"value":"/ and don't need to maintain any guard-based reference across the call (the latter is enforced","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12836397,"byte_end":12836493,"line_start":333,"line_end":333,"column_start":5,"column_end":101}},{"value":"/ by `&mut self`). The thread will only be unpinned if this is the only active guard for the","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12836498,"byte_end":12836592,"line_start":334,"line_end":334,"column_start":5,"column_end":99}},{"value":"/ current thread.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12836597,"byte_end":12836616,"line_start":335,"line_end":335,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12836621,"byte_end":12836624,"line_start":336,"line_end":336,"column_start":5,"column_end":8}},{"value":"/ If this method is called from an [`unprotected`] guard, then the passed function is called","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12836629,"byte_end":12836723,"line_start":337,"line_end":337,"column_start":5,"column_end":99}},{"value":"/ directly without unpinning the thread.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12836728,"byte_end":12836770,"line_start":338,"line_end":338,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12836775,"byte_end":12836778,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12836783,"byte_end":12836797,"line_start":340,"line_end":340,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12836802,"byte_end":12836805,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12836810,"byte_end":12836817,"line_start":342,"line_end":342,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12836822,"byte_end":12836871,"line_start":343,"line_end":343,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12836876,"byte_end":12836920,"line_start":344,"line_end":344,"column_start":5,"column_end":49}},{"value":"/ use std::thread;","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12836925,"byte_end":12836945,"line_start":345,"line_end":345,"column_start":5,"column_end":25}},{"value":"/ use std::time::Duration;","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12836950,"byte_end":12836978,"line_start":346,"line_end":346,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12836983,"byte_end":12836986,"line_start":347,"line_end":347,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(777);","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12836991,"byte_end":12837020,"line_start":348,"line_end":348,"column_start":5,"column_end":34}},{"value":"/ let mut guard = epoch::pin();","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12837025,"byte_end":12837058,"line_start":349,"line_end":349,"column_start":5,"column_end":38}},{"value":"/ {","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12837063,"byte_end":12837068,"line_start":350,"line_end":350,"column_start":5,"column_end":10}},{"value":"/     let p = a.load(SeqCst, &guard);","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12837073,"byte_end":12837112,"line_start":351,"line_end":351,"column_start":5,"column_end":44}},{"value":"/     assert_eq!(unsafe { p.as_ref() }, Some(&777));","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12837117,"byte_end":12837171,"line_start":352,"line_end":352,"column_start":5,"column_end":59}},{"value":"/ }","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12837176,"byte_end":12837181,"line_start":353,"line_end":353,"column_start":5,"column_end":10}},{"value":"/ guard.repin_after(|| thread::sleep(Duration::from_millis(50)));","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12837186,"byte_end":12837253,"line_start":354,"line_end":354,"column_start":5,"column_end":72}},{"value":"/ {","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12837258,"byte_end":12837263,"line_start":355,"line_end":355,"column_start":5,"column_end":10}},{"value":"/     let p = a.load(SeqCst, &guard);","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12837268,"byte_end":12837307,"line_start":356,"line_end":356,"column_start":5,"column_end":44}},{"value":"/     assert_eq!(unsafe { p.as_ref() }, Some(&777));","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12837312,"byte_end":12837366,"line_start":357,"line_end":357,"column_start":5,"column_end":59}},{"value":"/ }","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12837371,"byte_end":12837376,"line_start":358,"line_end":358,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12837381,"byte_end":12837388,"line_start":359,"line_end":359,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":493},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12838557,"byte_end":12838566,"line_start":398,"line_end":398,"column_start":12,"column_end":21},"name":"collector","qualname":"<Guard>::collector","value":"pub fn collector(&Self) -> Option<&Collector>","parent":null,"children":[],"decl_id":null,"docs":" Returns the `Collector` associated with this guard.","sig":null,"attributes":[{"value":"/ Returns the `Collector` associated with this guard.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12838016,"byte_end":12838071,"line_start":382,"line_end":382,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12838076,"byte_end":12838079,"line_start":383,"line_end":383,"column_start":5,"column_end":8}},{"value":"/ This method is useful when you need to ensure that all guards used with","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12838084,"byte_end":12838159,"line_start":384,"line_end":384,"column_start":5,"column_end":80}},{"value":"/ a data structure come from the same collector.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12838164,"byte_end":12838214,"line_start":385,"line_end":385,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12838219,"byte_end":12838222,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ If this method is called from an [`unprotected`] guard, then `None` is returned.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12838227,"byte_end":12838311,"line_start":387,"line_end":387,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12838316,"byte_end":12838319,"line_start":388,"line_end":388,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12838324,"byte_end":12838338,"line_start":389,"line_end":389,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12838343,"byte_end":12838346,"line_start":390,"line_end":390,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12838351,"byte_end":12838358,"line_start":391,"line_end":391,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch as epoch;","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12838363,"byte_end":12838396,"line_start":392,"line_end":392,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12838401,"byte_end":12838404,"line_start":393,"line_end":393,"column_start":5,"column_end":8}},{"value":"/ let guard1 = epoch::pin();","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12838409,"byte_end":12838439,"line_start":394,"line_end":394,"column_start":5,"column_end":35}},{"value":"/ let guard2 = epoch::pin();","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12838444,"byte_end":12838474,"line_start":395,"line_end":395,"column_start":5,"column_end":35}},{"value":"/ assert!(guard1.collector() == guard2.collector());","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12838479,"byte_end":12838533,"line_start":396,"line_end":396,"column_start":5,"column_end":59}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12838538,"byte_end":12838545,"line_start":397,"line_end":397,"column_start":5,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":499},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12841865,"byte_end":12841876,"line_start":504,"line_end":504,"column_start":15,"column_end":26},"name":"unprotected","qualname":"::guard::unprotected","value":"pub unsafe fn unprotected() -> &'static Guard","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to a dummy guard that allows unprotected access to [`Atomic`]s.","sig":null,"attributes":[{"value":"/ Returns a reference to a dummy guard that allows unprotected access to [`Atomic`]s.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12838976,"byte_end":12839063,"line_start":418,"line_end":418,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12839064,"byte_end":12839067,"line_start":419,"line_end":419,"column_start":1,"column_end":4}},{"value":"/ This guard should be used in special occasions only. Note that it doesn't actually keep any","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12839068,"byte_end":12839163,"line_start":420,"line_end":420,"column_start":1,"column_end":96}},{"value":"/ thread pinned - it's just a fake guard that allows loading from [`Atomic`]s unsafely.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12839164,"byte_end":12839253,"line_start":421,"line_end":421,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12839254,"byte_end":12839257,"line_start":422,"line_end":422,"column_start":1,"column_end":4}},{"value":"/ Note that calling [`defer`] with a dummy guard will not defer the function - it will just","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12839258,"byte_end":12839351,"line_start":423,"line_end":423,"column_start":1,"column_end":94}},{"value":"/ execute the function immediately.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12839352,"byte_end":12839389,"line_start":424,"line_end":424,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12839390,"byte_end":12839393,"line_start":425,"line_end":425,"column_start":1,"column_end":4}},{"value":"/ If necessary, it's possible to create more dummy guards by cloning: `unprotected().clone()`.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12839394,"byte_end":12839490,"line_start":426,"line_end":426,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12839491,"byte_end":12839494,"line_start":427,"line_end":427,"column_start":1,"column_end":4}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12839495,"byte_end":12839507,"line_start":428,"line_end":428,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12839508,"byte_end":12839511,"line_start":429,"line_end":429,"column_start":1,"column_end":4}},{"value":"/ Loading and dereferencing data from an [`Atomic`] using this guard is safe only if the","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12839512,"byte_end":12839602,"line_start":430,"line_end":430,"column_start":1,"column_end":91}},{"value":"/ [`Atomic`] is not being concurrently modified by other threads.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12839603,"byte_end":12839670,"line_start":431,"line_end":431,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12839671,"byte_end":12839674,"line_start":432,"line_end":432,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12839675,"byte_end":12839689,"line_start":433,"line_end":433,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12839690,"byte_end":12839693,"line_start":434,"line_end":434,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12839694,"byte_end":12839701,"line_start":435,"line_end":435,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12839702,"byte_end":12839751,"line_start":436,"line_end":436,"column_start":1,"column_end":50}},{"value":"/ use std::sync::atomic::Ordering::Relaxed;","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12839752,"byte_end":12839797,"line_start":437,"line_end":437,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12839798,"byte_end":12839801,"line_start":438,"line_end":438,"column_start":1,"column_end":4}},{"value":"/ let a = Atomic::new(7);","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12839802,"byte_end":12839829,"line_start":439,"line_end":439,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12839830,"byte_end":12839833,"line_start":440,"line_end":440,"column_start":1,"column_end":4}},{"value":"/ unsafe {","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12839834,"byte_end":12839846,"line_start":441,"line_end":441,"column_start":1,"column_end":13}},{"value":"/     // Load `a` without pinning the current thread.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12839847,"byte_end":12839902,"line_start":442,"line_end":442,"column_start":1,"column_end":56}},{"value":"/     a.load(Relaxed, epoch::unprotected());","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12839903,"byte_end":12839949,"line_start":443,"line_end":443,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12839950,"byte_end":12839953,"line_start":444,"line_end":444,"column_start":1,"column_end":4}},{"value":"/     // It's possible to create more dummy guards by calling `clone()`.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12839954,"byte_end":12840028,"line_start":445,"line_end":445,"column_start":1,"column_end":75}},{"value":"/     let dummy = &epoch::unprotected().clone();","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12840029,"byte_end":12840079,"line_start":446,"line_end":446,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12840080,"byte_end":12840083,"line_start":447,"line_end":447,"column_start":1,"column_end":4}},{"value":"/     dummy.defer(move || {","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12840084,"byte_end":12840113,"line_start":448,"line_end":448,"column_start":1,"column_end":30}},{"value":"/         println!(\"This gets executed immediately.\");","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12840114,"byte_end":12840170,"line_start":449,"line_end":449,"column_start":1,"column_end":57}},{"value":"/     });","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12840171,"byte_end":12840182,"line_start":450,"line_end":450,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12840183,"byte_end":12840186,"line_start":451,"line_end":451,"column_start":1,"column_end":4}},{"value":"/     // Dropping `dummy` doesn't affect the current thread - it's just a noop.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12840187,"byte_end":12840268,"line_start":452,"line_end":452,"column_start":1,"column_end":82}},{"value":"/ }","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12840269,"byte_end":12840274,"line_start":453,"line_end":453,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12840275,"byte_end":12840282,"line_start":454,"line_end":454,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12840283,"byte_end":12840286,"line_start":455,"line_end":455,"column_start":1,"column_end":4}},{"value":"/ The most common use of this function is when constructing or destructing a data structure.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12840287,"byte_end":12840381,"line_start":456,"line_end":456,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12840382,"byte_end":12840385,"line_start":457,"line_end":457,"column_start":1,"column_end":4}},{"value":"/ For example, we can use a dummy guard in the destructor of a Treiber stack because at that","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12840386,"byte_end":12840480,"line_start":458,"line_end":458,"column_start":1,"column_end":95}},{"value":"/ point no other thread could concurrently modify the [`Atomic`]s we are accessing.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12840481,"byte_end":12840566,"line_start":459,"line_end":459,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12840567,"byte_end":12840570,"line_start":460,"line_end":460,"column_start":1,"column_end":4}},{"value":"/ If we were to actually pin the current thread during destruction, that would just unnecessarily","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12840571,"byte_end":12840670,"line_start":461,"line_end":461,"column_start":1,"column_end":100}},{"value":"/ delay garbage collection and incur some performance cost, so in cases like these `unprotected`","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12840671,"byte_end":12840769,"line_start":462,"line_end":462,"column_start":1,"column_end":99}},{"value":"/ is very helpful.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12840770,"byte_end":12840790,"line_start":463,"line_end":463,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12840791,"byte_end":12840794,"line_start":464,"line_end":464,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12840795,"byte_end":12840802,"line_start":465,"line_end":465,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12840803,"byte_end":12840852,"line_start":466,"line_end":466,"column_start":1,"column_end":50}},{"value":"/ use std::mem::ManuallyDrop;","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12840853,"byte_end":12840884,"line_start":467,"line_end":467,"column_start":1,"column_end":32}},{"value":"/ use std::sync::atomic::Ordering::Relaxed;","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12840885,"byte_end":12840930,"line_start":468,"line_end":468,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12840931,"byte_end":12840934,"line_start":469,"line_end":469,"column_start":1,"column_end":4}},{"value":"/ struct Stack<T> {","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12840935,"byte_end":12840956,"line_start":470,"line_end":470,"column_start":1,"column_end":22}},{"value":"/     head: Atomic<Node<T>>,","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12840957,"byte_end":12840987,"line_start":471,"line_end":471,"column_start":1,"column_end":31}},{"value":"/ }","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12840988,"byte_end":12840993,"line_start":472,"line_end":472,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12840994,"byte_end":12840997,"line_start":473,"line_end":473,"column_start":1,"column_end":4}},{"value":"/ struct Node<T> {","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12840998,"byte_end":12841018,"line_start":474,"line_end":474,"column_start":1,"column_end":21}},{"value":"/     data: ManuallyDrop<T>,","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12841019,"byte_end":12841049,"line_start":475,"line_end":475,"column_start":1,"column_end":31}},{"value":"/     next: Atomic<Node<T>>,","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12841050,"byte_end":12841080,"line_start":476,"line_end":476,"column_start":1,"column_end":31}},{"value":"/ }","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12841081,"byte_end":12841086,"line_start":477,"line_end":477,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12841087,"byte_end":12841090,"line_start":478,"line_end":478,"column_start":1,"column_end":4}},{"value":"/ impl<T> Drop for Stack<T> {","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12841091,"byte_end":12841122,"line_start":479,"line_end":479,"column_start":1,"column_end":32}},{"value":"/     fn drop(&mut self) {","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12841123,"byte_end":12841151,"line_start":480,"line_end":480,"column_start":1,"column_end":29}},{"value":"/         unsafe {","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12841152,"byte_end":12841172,"line_start":481,"line_end":481,"column_start":1,"column_end":21}},{"value":"/             // Unprotected load.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12841173,"byte_end":12841209,"line_start":482,"line_end":482,"column_start":1,"column_end":37}},{"value":"/             let mut node = self.head.load(Relaxed, epoch::unprotected());","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12841210,"byte_end":12841287,"line_start":483,"line_end":483,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12841288,"byte_end":12841291,"line_start":484,"line_end":484,"column_start":1,"column_end":4}},{"value":"/             while let Some(n) = node.as_ref() {","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12841292,"byte_end":12841343,"line_start":485,"line_end":485,"column_start":1,"column_end":52}},{"value":"/                 // Unprotected load.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12841344,"byte_end":12841384,"line_start":486,"line_end":486,"column_start":1,"column_end":41}},{"value":"/                 let next = n.next.load(Relaxed, epoch::unprotected());","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12841385,"byte_end":12841459,"line_start":487,"line_end":487,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12841460,"byte_end":12841463,"line_start":488,"line_end":488,"column_start":1,"column_end":4}},{"value":"/                 // Take ownership of the node, then drop its data and deallocate it.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12841464,"byte_end":12841552,"line_start":489,"line_end":489,"column_start":1,"column_end":89}},{"value":"/                 let mut o = node.into_owned();","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12841553,"byte_end":12841603,"line_start":490,"line_end":490,"column_start":1,"column_end":51}},{"value":"/                 ManuallyDrop::drop(&mut o.data);","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12841604,"byte_end":12841656,"line_start":491,"line_end":491,"column_start":1,"column_end":53}},{"value":"/                 drop(o);","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12841657,"byte_end":12841685,"line_start":492,"line_end":492,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12841686,"byte_end":12841689,"line_start":493,"line_end":493,"column_start":1,"column_end":4}},{"value":"/                 node = next;","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12841690,"byte_end":12841722,"line_start":494,"line_end":494,"column_start":1,"column_end":33}},{"value":"/             }","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12841723,"byte_end":12841740,"line_start":495,"line_end":495,"column_start":1,"column_end":18}},{"value":"/         }","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12841741,"byte_end":12841754,"line_start":496,"line_end":496,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12841755,"byte_end":12841764,"line_start":497,"line_end":497,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12841765,"byte_end":12841770,"line_start":498,"line_end":498,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12841771,"byte_end":12841778,"line_start":499,"line_end":499,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12841779,"byte_end":12841782,"line_start":500,"line_end":500,"column_start":1,"column_end":4}},{"value":"/ [`Atomic`]: super::Atomic","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12841783,"byte_end":12841812,"line_start":501,"line_end":501,"column_start":1,"column_end":30}},{"value":"/ [`defer`]: Guard::defer","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12841813,"byte_end":12841840,"line_start":502,"line_end":502,"column_start":1,"column_end":28}},{"value":"inline","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12841841,"byte_end":12841850,"line_start":503,"line_end":503,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":889},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\default.rs","byte_start":12897776,"byte_end":12897779,"line_start":23,"line_end":23,"column_start":8,"column_end":11},"name":"pin","qualname":"::default::pin","value":"pub fn pin() -> Guard","parent":null,"children":[],"decl_id":null,"docs":" Pins the current thread.\n","sig":null,"attributes":[{"value":"/ Pins the current thread.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\default.rs","byte_start":12897730,"byte_end":12897758,"line_start":21,"line_end":21,"column_start":1,"column_end":29}},{"value":"inline","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\default.rs","byte_start":12897759,"byte_end":12897768,"line_start":22,"line_end":22,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":891},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\default.rs","byte_start":12897904,"byte_end":12897913,"line_start":29,"line_end":29,"column_start":8,"column_end":17},"name":"is_pinned","qualname":"::default::is_pinned","value":"pub fn is_pinned() -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the current thread is pinned.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the current thread is pinned.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\default.rs","byte_start":12897835,"byte_end":12897886,"line_start":27,"line_end":27,"column_start":1,"column_end":52}},{"value":"inline","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\default.rs","byte_start":12897887,"byte_end":12897896,"line_start":28,"line_end":28,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":893},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\default.rs","byte_start":12898023,"byte_end":12898040,"line_start":34,"line_end":34,"column_start":8,"column_end":25},"name":"default_collector","qualname":"::default::default_collector","value":"pub fn default_collector() -> &'static Collector","parent":null,"children":[],"decl_id":null,"docs":" Returns the default global collector.\n","sig":null,"attributes":[{"value":"/ Returns the default global collector.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\default.rs","byte_start":12897974,"byte_end":12898015,"line_start":33,"line_end":33,"column_start":1,"column_end":42}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\lib.rs","byte_start":5471,"byte_end":5481,"line_start":122,"line_end":122,"column_start":17,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":14}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12755220,"byte_end":12755240,"line_start":42,"line_end":42,"column_start":52,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":112}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12756667,"byte_end":12756675,"line_start":79,"line_end":79,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":117},{"krate":0,"index":118}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12760449,"byte_end":12760450,"line_start":194,"line_end":194,"column_start":23,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":141},{"krate":0,"index":142},{"krate":0,"index":143},{"krate":0,"index":144},{"krate":0,"index":146},{"krate":0,"index":148}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12763669,"byte_end":12763675,"line_start":296,"line_end":296,"column_start":59,"column_end":65},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12763740,"byte_end":12763746,"line_start":297,"line_end":297,"column_start":59,"column_end":65},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12763762,"byte_end":12763768,"line_start":299,"line_end":299,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":174}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12764101,"byte_end":12764107,"line_start":314,"line_end":314,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":177},{"krate":0,"index":178},{"krate":0,"index":179},{"krate":0,"index":180},{"krate":0,"index":182},{"krate":0,"index":184},{"krate":0,"index":186},{"krate":0,"index":189},{"krate":0,"index":194},{"krate":0,"index":199},{"krate":0,"index":203},{"krate":0,"index":207},{"krate":0,"index":209},{"krate":0,"index":211},{"krate":0,"index":213}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12782630,"byte_end":12782636,"line_start":815,"line_end":815,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":216}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12782983,"byte_end":12782989,"line_start":827,"line_end":827,"column_start":46,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":219}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12783277,"byte_end":12783283,"line_start":835,"line_end":835,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":222}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12783630,"byte_end":12783636,"line_start":846,"line_end":846,"column_start":41,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":225}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12783748,"byte_end":12783754,"line_start":852,"line_end":852,"column_start":48,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":228}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12784149,"byte_end":12784155,"line_start":869,"line_end":869,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":231}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12784258,"byte_end":12784264,"line_start":875,"line_end":875,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":234}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12784384,"byte_end":12784390,"line_start":881,"line_end":881,"column_start":57,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":238}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12784739,"byte_end":12784745,"line_start":896,"line_end":896,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":241}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12785958,"byte_end":12785963,"line_start":937,"line_end":937,"column_start":44,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":252},{"krate":0,"index":253}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12786470,"byte_end":12786475,"line_start":960,"line_end":960,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":256},{"krate":0,"index":257},{"krate":0,"index":258}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12788125,"byte_end":12788130,"line_start":1020,"line_end":1020,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":261},{"krate":0,"index":262},{"krate":0,"index":264},{"krate":0,"index":265}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12789800,"byte_end":12789805,"line_start":1083,"line_end":1083,"column_start":38,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":268}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12789995,"byte_end":12790000,"line_start":1092,"line_end":1092,"column_start":44,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":271}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12790278,"byte_end":12790283,"line_start":1103,"line_end":1103,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":274}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12790424,"byte_end":12790429,"line_start":1109,"line_end":1109,"column_start":39,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":277},{"krate":0,"index":278}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12790622,"byte_end":12790627,"line_start":1118,"line_end":1118,"column_start":42,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":281}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12790793,"byte_end":12790798,"line_start":1125,"line_end":1125,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":284}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12790888,"byte_end":12790893,"line_start":1131,"line_end":1131,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":287}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12791366,"byte_end":12791371,"line_start":1150,"line_end":1150,"column_start":43,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":290}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12791481,"byte_end":12791486,"line_start":1156,"line_end":1156,"column_start":46,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":293}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12791608,"byte_end":12791613,"line_start":1162,"line_end":1162,"column_start":42,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":296}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12791719,"byte_end":12791724,"line_start":1168,"line_end":1168,"column_start":42,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":299}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12792225,"byte_end":12792231,"line_start":1185,"line_end":1185,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":307}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12792405,"byte_end":12792411,"line_start":1194,"line_end":1194,"column_start":38,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12792466,"byte_end":12792472,"line_start":1196,"line_end":1196,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":312},{"krate":0,"index":313}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12792718,"byte_end":12792724,"line_start":1211,"line_end":1211,"column_start":13,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":317}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12793404,"byte_end":12793410,"line_start":1235,"line_end":1235,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":321},{"krate":0,"index":322},{"krate":0,"index":323},{"krate":0,"index":324},{"krate":0,"index":325},{"krate":0,"index":326},{"krate":0,"index":327},{"krate":0,"index":328}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12800702,"byte_end":12800708,"line_start":1466,"line_end":1466,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":331}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12801271,"byte_end":12801277,"line_start":1488,"line_end":1488,"column_start":62,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":335}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12801404,"byte_end":12801410,"line_start":1494,"line_end":1494,"column_start":36,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12801484,"byte_end":12801490,"line_start":1496,"line_end":1496,"column_start":63,"column_end":69},"value":"","parent":null,"children":[{"krate":0,"index":341}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12801655,"byte_end":12801661,"line_start":1502,"line_end":1502,"column_start":37,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":344}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12801809,"byte_end":12801815,"line_start":1508,"line_end":1508,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":347}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12802118,"byte_end":12802124,"line_start":1519,"line_end":1519,"column_start":46,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":350}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12802315,"byte_end":12802321,"line_start":1525,"line_end":1525,"column_start":41,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":353}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\collector.rs","byte_start":12803558,"byte_end":12803567,"line_start":26,"line_end":26,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\collector.rs","byte_start":12803592,"byte_end":12803601,"line_start":27,"line_end":27,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\collector.rs","byte_start":12803623,"byte_end":12803632,"line_start":29,"line_end":29,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":376}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\collector.rs","byte_start":12803746,"byte_end":12803755,"line_start":37,"line_end":37,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":378},{"krate":0,"index":379}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\collector.rs","byte_start":12803997,"byte_end":12804006,"line_start":49,"line_end":49,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":381}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\collector.rs","byte_start":12804204,"byte_end":12804213,"line_start":58,"line_end":58,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":383}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\collector.rs","byte_start":12804341,"byte_end":12804350,"line_start":64,"line_end":64,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":385}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\collector.rs","byte_start":12804524,"byte_end":12804533,"line_start":70,"line_end":70,"column_start":13,"column_end":22},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\collector.rs","byte_start":12804644,"byte_end":12804655,"line_start":77,"line_end":77,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":390},{"krate":0,"index":391},{"krate":0,"index":392}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\collector.rs","byte_start":12805115,"byte_end":12805126,"line_start":97,"line_end":97,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":394}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\collector.rs","byte_start":12805273,"byte_end":12805284,"line_start":106,"line_end":106,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":396}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\deferred.rs","byte_start":12815400,"byte_end":12815408,"line_start":25,"line_end":25,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":425}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\deferred.rs","byte_start":12815532,"byte_end":12815540,"line_start":31,"line_end":31,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":427},{"krate":0,"index":433}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\epoch.rs","byte_start":12819468,"byte_end":12819473,"line_start":23,"line_end":23,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":442},{"krate":0,"index":443},{"krate":0,"index":444},{"krate":0,"index":445},{"krate":0,"index":446},{"krate":0,"index":447}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\epoch.rs","byte_start":12821277,"byte_end":12821288,"line_start":82,"line_end":82,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":449},{"krate":0,"index":450},{"krate":0,"index":451},{"krate":0,"index":452}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12825168,"byte_end":12825173,"line_start":74,"line_end":74,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":478},{"krate":0,"index":481},{"krate":0,"index":485},{"krate":0,"index":488},{"krate":0,"index":489},{"krate":0,"index":490},{"krate":0,"index":493}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12838691,"byte_end":12838696,"line_start":403,"line_end":403,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":496}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12838866,"byte_end":12838871,"line_start":412,"line_end":412,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":498}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12842155,"byte_end":12842167,"line_start":509,"line_end":509,"column_start":26,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\internal.rs","byte_start":12845240,"byte_end":12845243,"line_start":71,"line_end":71,"column_start":22,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\internal.rs","byte_start":12845253,"byte_end":12845256,"line_start":73,"line_end":73,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":595},{"krate":0,"index":596},{"krate":0,"index":597},{"krate":0,"index":598}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\internal.rs","byte_start":12846204,"byte_end":12846207,"line_start":108,"line_end":108,"column_start":18,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":835}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\internal.rs","byte_start":12849481,"byte_end":12849484,"line_start":193,"line_end":193,"column_start":15,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":601}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\internal.rs","byte_start":12849883,"byte_end":12849886,"line_start":205,"line_end":205,"column_start":21,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":603}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\internal.rs","byte_start":12850312,"byte_end":12850321,"line_start":223,"line_end":223,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\internal.rs","byte_start":12850331,"byte_end":12850340,"line_start":225,"line_end":225,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":607}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\internal.rs","byte_start":12851022,"byte_end":12851028,"line_start":246,"line_end":246,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":613},{"krate":0,"index":614},{"krate":0,"index":615},{"krate":0,"index":616},{"krate":0,"index":618}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\internal.rs","byte_start":12856153,"byte_end":12856158,"line_start":387,"line_end":387,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":628},{"krate":0,"index":629},{"krate":0,"index":630},{"krate":0,"index":631},{"krate":0,"index":633},{"krate":0,"index":634},{"krate":0,"index":636},{"krate":0,"index":638},{"krate":0,"index":639},{"krate":0,"index":640},{"krate":0,"index":641},{"krate":0,"index":642},{"krate":0,"index":643}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\internal.rs","byte_start":12864883,"byte_end":12864888,"line_start":611,"line_end":611,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":647},{"krate":0,"index":648},{"krate":0,"index":649}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\sync\\list.rs","byte_start":12870953,"byte_end":12870958,"line_start":131,"line_end":131,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":693}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\sync\\list.rs","byte_start":12871094,"byte_end":12871099,"line_start":140,"line_end":140,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":695}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\sync\\list.rs","byte_start":12871612,"byte_end":12871616,"line_start":153,"line_end":153,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":699},{"krate":0,"index":700},{"krate":0,"index":702}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\sync\\list.rs","byte_start":12874199,"byte_end":12874203,"line_start":218,"line_end":218,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":707}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\sync\\list.rs","byte_start":12874735,"byte_end":12874739,"line_start":235,"line_end":235,"column_start":47,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":712},{"krate":0,"index":713}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\sync\\queue.rs","byte_start":12884560,"byte_end":12884565,"line_start":40,"line_end":40,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\sync\\queue.rs","byte_start":12884602,"byte_end":12884607,"line_start":41,"line_end":41,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\sync\\queue.rs","byte_start":12884623,"byte_end":12884628,"line_start":43,"line_end":43,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":757},{"krate":0,"index":758},{"krate":0,"index":759},{"krate":0,"index":760},{"krate":0,"index":763},{"krate":0,"index":767},{"krate":0,"index":768}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\sync\\queue.rs","byte_start":12890548,"byte_end":12890553,"line_start":204,"line_end":204,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":772}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\lib.rs","byte_start":5471,"byte_end":5481,"line_start":122,"line_end":122,"column_start":17,"column_end":27},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":37},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12755220,"byte_end":12755240,"line_start":42,"line_end":42,"column_start":52,"column_end":72},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":103},"to":{"krate":2,"index":9401}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12756667,"byte_end":12756675,"line_start":79,"line_end":79,"column_start":32,"column_end":40},"kind":{"Impl":{"id":2}},"from":{"krate":2,"index":44778},"to":{"krate":0,"index":113}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12760449,"byte_end":12760450,"line_start":194,"line_end":194,"column_start":23,"column_end":24},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":140},"to":{"krate":0,"index":130}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12763669,"byte_end":12763675,"line_start":296,"line_end":296,"column_start":59,"column_end":65},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":164},"to":{"krate":2,"index":3016}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12763740,"byte_end":12763746,"line_start":297,"line_end":297,"column_start":59,"column_end":65},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":164},"to":{"krate":2,"index":3028}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12763762,"byte_end":12763768,"line_start":299,"line_end":299,"column_start":9,"column_end":15},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":164},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12764101,"byte_end":12764107,"line_start":314,"line_end":314,"column_start":29,"column_end":35},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":164},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12782630,"byte_end":12782636,"line_start":815,"line_end":815,"column_start":44,"column_end":50},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":164},"to":{"krate":2,"index":9401}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12782983,"byte_end":12782989,"line_start":827,"line_end":827,"column_start":46,"column_end":52},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":164},"to":{"krate":2,"index":9418}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12783277,"byte_end":12783283,"line_start":835,"line_end":835,"column_start":39,"column_end":45},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":164},"to":{"krate":2,"index":2637}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12783630,"byte_end":12783636,"line_start":846,"line_end":846,"column_start":41,"column_end":47},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":164},"to":{"krate":2,"index":2994}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12783748,"byte_end":12783754,"line_start":852,"line_end":852,"column_start":48,"column_end":54},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":164},"to":{"krate":2,"index":2922}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12784149,"byte_end":12784155,"line_start":869,"line_end":869,"column_start":26,"column_end":32},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":164},"to":{"krate":2,"index":2922}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12784258,"byte_end":12784264,"line_start":875,"line_end":875,"column_start":21,"column_end":27},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":164},"to":{"krate":2,"index":2922}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12784384,"byte_end":12784390,"line_start":881,"line_end":881,"column_start":57,"column_end":63},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":164},"to":{"krate":2,"index":2922}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12784739,"byte_end":12784745,"line_start":896,"line_end":896,"column_start":28,"column_end":34},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":164},"to":{"krate":2,"index":2922}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12785958,"byte_end":12785963,"line_start":937,"line_end":937,"column_start":44,"column_end":49},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":246},"to":{"krate":0,"index":242}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12786470,"byte_end":12786475,"line_start":960,"line_end":960,"column_start":9,"column_end":14},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":246},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12788125,"byte_end":12788130,"line_start":1020,"line_end":1020,"column_start":29,"column_end":34},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":246},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12789800,"byte_end":12789805,"line_start":1083,"line_end":1083,"column_start":38,"column_end":43},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":246},"to":{"krate":2,"index":3251}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12789995,"byte_end":12790000,"line_start":1092,"line_end":1092,"column_start":44,"column_end":49},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":246},"to":{"krate":2,"index":9401}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12790278,"byte_end":12790283,"line_start":1103,"line_end":1103,"column_start":26,"column_end":31},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":246},"to":{"krate":2,"index":2637}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12790424,"byte_end":12790429,"line_start":1109,"line_end":1109,"column_start":39,"column_end":44},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":246},"to":{"krate":2,"index":3227}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12790622,"byte_end":12790627,"line_start":1118,"line_end":1118,"column_start":42,"column_end":47},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":246},"to":{"krate":2,"index":3240}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12790793,"byte_end":12790798,"line_start":1125,"line_end":1125,"column_start":21,"column_end":26},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":246},"to":{"krate":2,"index":2922}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12790888,"byte_end":12790893,"line_start":1131,"line_end":1131,"column_start":26,"column_end":31},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":246},"to":{"krate":2,"index":2922}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12791366,"byte_end":12791371,"line_start":1150,"line_end":1150,"column_start":43,"column_end":48},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":246},"to":{"krate":2,"index":2615}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12791481,"byte_end":12791486,"line_start":1156,"line_end":1156,"column_start":46,"column_end":51},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":246},"to":{"krate":2,"index":2618}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12791608,"byte_end":12791613,"line_start":1162,"line_end":1162,"column_start":42,"column_end":47},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":246},"to":{"krate":2,"index":2913}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12791719,"byte_end":12791724,"line_start":1168,"line_end":1168,"column_start":42,"column_end":47},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":246},"to":{"krate":2,"index":2916}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12792225,"byte_end":12792231,"line_start":1185,"line_end":1185,"column_start":39,"column_end":45},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":300},"to":{"krate":2,"index":2637}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12792405,"byte_end":12792411,"line_start":1194,"line_end":1194,"column_start":38,"column_end":44},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":300},"to":{"krate":2,"index":3026}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12792466,"byte_end":12792472,"line_start":1196,"line_end":1196,"column_start":44,"column_end":50},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":300},"to":{"krate":0,"index":242}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12792718,"byte_end":12792724,"line_start":1211,"line_end":1211,"column_start":13,"column_end":19},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":300},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12793404,"byte_end":12793410,"line_start":1235,"line_end":1235,"column_start":33,"column_end":39},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":300},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12800702,"byte_end":12800708,"line_start":1466,"line_end":1466,"column_start":28,"column_end":34},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":300},"to":{"krate":2,"index":2922}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12801271,"byte_end":12801277,"line_start":1488,"line_end":1488,"column_start":62,"column_end":68},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":300},"to":{"krate":2,"index":2667}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12801404,"byte_end":12801410,"line_start":1494,"line_end":1494,"column_start":36,"column_end":42},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":300},"to":{"krate":2,"index":2672}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12801484,"byte_end":12801490,"line_start":1496,"line_end":1496,"column_start":63,"column_end":69},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":300},"to":{"krate":2,"index":2714}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12801655,"byte_end":12801661,"line_start":1502,"line_end":1502,"column_start":37,"column_end":43},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":300},"to":{"krate":2,"index":2703}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12801809,"byte_end":12801815,"line_start":1508,"line_end":1508,"column_start":44,"column_end":50},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":300},"to":{"krate":2,"index":9401}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12802118,"byte_end":12802124,"line_start":1519,"line_end":1519,"column_start":46,"column_end":52},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":300},"to":{"krate":2,"index":9418}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\atomic.rs","byte_start":12802315,"byte_end":12802321,"line_start":1525,"line_end":1525,"column_start":41,"column_end":47},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":300},"to":{"krate":2,"index":2994}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\collector.rs","byte_start":12803558,"byte_end":12803567,"line_start":26,"line_end":26,"column_start":22,"column_end":31},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":371},"to":{"krate":2,"index":3016}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\collector.rs","byte_start":12803592,"byte_end":12803601,"line_start":27,"line_end":27,"column_start":22,"column_end":31},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":371},"to":{"krate":2,"index":3028}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\collector.rs","byte_start":12803623,"byte_end":12803632,"line_start":29,"line_end":29,"column_start":18,"column_end":27},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":371},"to":{"krate":2,"index":2994}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\collector.rs","byte_start":12803746,"byte_end":12803755,"line_start":37,"line_end":37,"column_start":6,"column_end":15},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":371},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\collector.rs","byte_start":12803997,"byte_end":12804006,"line_start":49,"line_end":49,"column_start":16,"column_end":25},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":371},"to":{"krate":2,"index":2637}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\collector.rs","byte_start":12804204,"byte_end":12804213,"line_start":58,"line_end":58,"column_start":21,"column_end":30},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":371},"to":{"krate":2,"index":9401}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\collector.rs","byte_start":12804341,"byte_end":12804350,"line_start":64,"line_end":64,"column_start":20,"column_end":29},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":371},"to":{"krate":2,"index":2667}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\collector.rs","byte_start":12804524,"byte_end":12804533,"line_start":70,"line_end":70,"column_start":13,"column_end":22},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":371},"to":{"krate":2,"index":2672}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\collector.rs","byte_start":12804644,"byte_end":12804655,"line_start":77,"line_end":77,"column_start":6,"column_end":17},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":387},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\collector.rs","byte_start":12805115,"byte_end":12805126,"line_start":97,"line_end":97,"column_start":15,"column_end":26},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":387},"to":{"krate":2,"index":3251}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\collector.rs","byte_start":12805273,"byte_end":12805284,"line_start":106,"line_end":106,"column_start":21,"column_end":32},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":387},"to":{"krate":2,"index":9401}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\deferred.rs","byte_start":12815400,"byte_end":12815408,"line_start":25,"line_end":25,"column_start":21,"column_end":29},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":420},"to":{"krate":2,"index":9401}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\deferred.rs","byte_start":12815532,"byte_end":12815540,"line_start":31,"line_end":31,"column_start":6,"column_end":14},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":420},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\epoch.rs","byte_start":12819468,"byte_end":12819473,"line_start":23,"line_end":23,"column_start":6,"column_end":11},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":813},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\epoch.rs","byte_start":12821277,"byte_end":12821288,"line_start":82,"line_end":82,"column_start":6,"column_end":17},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":829},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12825168,"byte_end":12825173,"line_start":74,"line_end":74,"column_start":6,"column_end":11},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":475},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12838691,"byte_end":12838696,"line_start":403,"line_end":403,"column_start":15,"column_end":20},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":475},"to":{"krate":2,"index":3251}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12838866,"byte_end":12838871,"line_start":412,"line_end":412,"column_start":21,"column_end":26},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":475},"to":{"krate":2,"index":9401}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\guard.rs","byte_start":12842155,"byte_end":12842167,"line_start":509,"line_end":509,"column_start":26,"column_end":38},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":500},"to":{"krate":2,"index":3028}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\internal.rs","byte_start":12845240,"byte_end":12845243,"line_start":71,"line_end":71,"column_start":22,"column_end":25},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":589},"to":{"krate":2,"index":3016}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\internal.rs","byte_start":12845253,"byte_end":12845256,"line_start":73,"line_end":73,"column_start":6,"column_end":9},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":589},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\internal.rs","byte_start":12846204,"byte_end":12846207,"line_start":108,"line_end":108,"column_start":18,"column_end":21},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":589},"to":{"krate":2,"index":2994}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\internal.rs","byte_start":12849481,"byte_end":12849484,"line_start":193,"line_end":193,"column_start":15,"column_end":18},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":589},"to":{"krate":2,"index":3251}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\internal.rs","byte_start":12849883,"byte_end":12849886,"line_start":205,"line_end":205,"column_start":21,"column_end":24},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":589},"to":{"krate":2,"index":9401}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\internal.rs","byte_start":12850312,"byte_end":12850321,"line_start":223,"line_end":223,"column_start":22,"column_end":31},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":836},"to":{"krate":2,"index":3028}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\internal.rs","byte_start":12850331,"byte_end":12850340,"line_start":225,"line_end":225,"column_start":6,"column_end":15},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":836},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\internal.rs","byte_start":12851022,"byte_end":12851028,"line_start":246,"line_end":246,"column_start":6,"column_end":12},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":608},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\internal.rs","byte_start":12856153,"byte_end":12856158,"line_start":387,"line_end":387,"column_start":6,"column_end":11},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":619},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\internal.rs","byte_start":12864883,"byte_end":12864888,"line_start":611,"line_end":611,"column_start":27,"column_end":32},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":619},"to":{"krate":0,"index":678}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\sync\\list.rs","byte_start":12870953,"byte_end":12870958,"line_start":131,"line_end":131,"column_start":18,"column_end":23},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":843},"to":{"krate":2,"index":2994}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\sync\\list.rs","byte_start":12871094,"byte_end":12871099,"line_start":140,"line_end":140,"column_start":6,"column_end":11},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":843},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\sync\\list.rs","byte_start":12871612,"byte_end":12871616,"line_start":153,"line_end":153,"column_start":26,"column_end":30},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":847},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\sync\\list.rs","byte_start":12874199,"byte_end":12874203,"line_start":218,"line_end":218,"column_start":35,"column_end":39},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":847},"to":{"krate":2,"index":3251}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\sync\\list.rs","byte_start":12874735,"byte_end":12874739,"line_start":235,"line_end":235,"column_start":47,"column_end":51},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":683},"to":{"krate":2,"index":7653}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\sync\\queue.rs","byte_start":12884560,"byte_end":12884565,"line_start":40,"line_end":40,"column_start":31,"column_end":36},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":864},"to":{"krate":2,"index":3028}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\sync\\queue.rs","byte_start":12884602,"byte_end":12884607,"line_start":41,"line_end":41,"column_start":31,"column_end":36},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":864},"to":{"krate":2,"index":3016}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\sync\\queue.rs","byte_start":12884623,"byte_end":12884628,"line_start":43,"line_end":43,"column_start":9,"column_end":14},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":864},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.9.5\\src\\sync\\queue.rs","byte_start":12890548,"byte_end":12890553,"line_start":204,"line_end":204,"column_start":18,"column_end":23},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":864},"to":{"krate":2,"index":3251}}]}