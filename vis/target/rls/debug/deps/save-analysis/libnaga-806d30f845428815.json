{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3","program":"C:\\Users\\Ethan\\.rustup\\toolchains\\nightly-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","naga","--edition=2018","C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"codespan-reporting\"","--cfg","feature=\"default\"","--cfg","feature=\"hexf-parse\"","--cfg","feature=\"hlsl-out\"","--cfg","feature=\"spirv\"","--cfg","feature=\"spv-out\"","--cfg","feature=\"validate\"","--cfg","feature=\"wgsl-in\"","-C","metadata=806d30f845428815","-C","extra-filename=-806d30f845428815","--out-dir","c:\\Users\\Ethan\\Desktop\\repo\\sorting_visualizer\\vis\\target\\rls\\debug\\deps","-L","dependency=c:\\Users\\Ethan\\Desktop\\repo\\sorting_visualizer\\vis\\target\\rls\\debug\\deps","--extern","bit_set=c:\\Users\\Ethan\\Desktop\\repo\\sorting_visualizer\\vis\\target\\rls\\debug\\deps\\libbit_set-3b70fe322a5f7c64.rmeta","--extern","bitflags=c:\\Users\\Ethan\\Desktop\\repo\\sorting_visualizer\\vis\\target\\rls\\debug\\deps\\libbitflags-2782c434d426d8e6.rmeta","--extern","codespan_reporting=c:\\Users\\Ethan\\Desktop\\repo\\sorting_visualizer\\vis\\target\\rls\\debug\\deps\\libcodespan_reporting-5b132350000302e3.rmeta","--extern","fxhash=c:\\Users\\Ethan\\Desktop\\repo\\sorting_visualizer\\vis\\target\\rls\\debug\\deps\\libfxhash-1c467f8b08f57446.rmeta","--extern","hexf_parse=c:\\Users\\Ethan\\Desktop\\repo\\sorting_visualizer\\vis\\target\\rls\\debug\\deps\\libhexf_parse-5dfceb2aaf159b05.rmeta","--extern","indexmap=c:\\Users\\Ethan\\Desktop\\repo\\sorting_visualizer\\vis\\target\\rls\\debug\\deps\\libindexmap-4c1591d0bcce6a2f.rmeta","--extern","log=c:\\Users\\Ethan\\Desktop\\repo\\sorting_visualizer\\vis\\target\\rls\\debug\\deps\\liblog-069b0722d85b0d36.rmeta","--extern","num_traits=c:\\Users\\Ethan\\Desktop\\repo\\sorting_visualizer\\vis\\target\\rls\\debug\\deps\\libnum_traits-2fa7176bd9b20d8f.rmeta","--extern","spirv=c:\\Users\\Ethan\\Desktop\\repo\\sorting_visualizer\\vis\\target\\rls\\debug\\deps\\libspirv-4a1f8977c4be99fe.rmeta","--extern","thiserror=c:\\Users\\Ethan\\Desktop\\repo\\sorting_visualizer\\vis\\target\\rls\\debug\\deps\\libthiserror-d80cbb5ffbbd5120.rmeta","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\Ethan\\.rustup/toolchains/nightly-x86_64-pc-windows-msvc"],"output":"c:\\Users\\Ethan\\Desktop\\repo\\sorting_visualizer\\vis\\target\\rls\\debug\\deps\\libnaga-806d30f845428815.rmeta"},"prelude":{"crate_id":{"name":"naga","disambiguator":[3729481437005541450,0]},"crate_root":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src","external_crates":[{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[4355726627561370771,0]}},{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","num":2,"id":{"name":"core","disambiguator":[267229713070244971,0]}},{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[3683013900974168134,0]}},{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[15143829146767998538,0]}},{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[10594799546926461173,0]}},{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[5830232627024197309,0]}},{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[3472286635410469373,0]}},{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[1387985299865621046,0]}},{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[10967310900533047156,0]}},{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[16235493736143484136,0]}},{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[17010194385668190056,0]}},{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[14878302039127249509,0]}},{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","num":13,"id":{"name":"panic_unwind","disambiguator":[1028073505301703285,0]}},{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\arena.rs","num":14,"id":{"name":"indexmap","disambiguator":[10604732814453076193,0]}},{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\arena.rs","num":15,"id":{"name":"hashbrown","disambiguator":[5461629460425849450,0]}},{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\arena.rs","num":16,"id":{"name":"ahash","disambiguator":[10817290254778178182,0]}},{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\arena.rs","num":17,"id":{"name":"once_cell","disambiguator":[10221698252932934158,0]}},{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\arena.rs","num":18,"id":{"name":"getrandom","disambiguator":[17308934061476616526,0]}},{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\arena.rs","num":19,"id":{"name":"cfg_if","disambiguator":[3991922908739949058,0]}},{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\hlsl\\mod.rs","num":20,"id":{"name":"thiserror","disambiguator":[2732225001183617550,0]}},{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\hlsl\\mod.rs","num":21,"id":{"name":"thiserror_impl","disambiguator":[6775027650505520895,0]}},{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\spv\\block.rs","num":22,"id":{"name":"spirv","disambiguator":[15159110875103168103,0]}},{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\spv\\mod.rs","num":23,"id":{"name":"bitflags","disambiguator":[5917516365941265445,0]}},{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\spv\\block.rs","num":24,"id":{"name":"num_traits","disambiguator":[9038457068698427232,0]}},{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\wgsl\\number_literals.rs","num":25,"id":{"name":"hexf_parse","disambiguator":[17455348090266259981,0]}},{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\wgsl\\mod.rs","num":26,"id":{"name":"codespan_reporting","disambiguator":[5383838135557850406,0]}},{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\wgsl\\mod.rs","num":27,"id":{"name":"termcolor","disambiguator":[13152367609431708025,0]}},{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\wgsl\\mod.rs","num":28,"id":{"name":"winapi_util","disambiguator":[13017759796326993967,0]}},{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\wgsl\\mod.rs","num":29,"id":{"name":"winapi","disambiguator":[3170263987741117969,0]}},{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\wgsl\\mod.rs","num":30,"id":{"name":"unicode_width","disambiguator":[1408648533131569240,0]}},{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\function.rs","num":31,"id":{"name":"bit_set","disambiguator":[2555677219658810880,0]}},{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\function.rs","num":32,"id":{"name":"bit_vec","disambiguator":[3018013893558467829,0]}},{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\hlsl\\writer.rs","num":33,"id":{"name":"log","disambiguator":[458480816434803666,0]}},{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","num":34,"id":{"name":"fxhash","disambiguator":[4423399910093231080,0]}},{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","num":35,"id":{"name":"byteorder","disambiguator":[377215142259247241,0]}}],"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":0,"byte_end":56416,"line_start":1,"line_end":1600,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":22,"index":3196},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\spv\\mod.rs","byte_start":223757,"byte_end":223767,"line_start":14,"line_end":14,"column_start":16,"column_end":26},"alias_span":null,"name":"Capability","value":"","parent":{"krate":0,"index":482}},{"kind":"Use","ref_id":{"krate":0,"index":1972},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\mod.rs","byte_start":709482,"byte_end":709497,"line_start":11,"line_end":11,"column_start":16,"column_end":31},"alias_span":null,"name":"IndexableLength","value":"","parent":{"krate":0,"index":1962}},{"kind":"Use","ref_id":{"krate":0,"index":2004},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\mod.rs","byte_start":709518,"byte_end":709527,"line_start":12,"line_end":12,"column_start":20,"column_end":29},"alias_span":null,"name":"Alignment","value":"","parent":{"krate":0,"index":1962}},{"kind":"Use","ref_id":{"krate":0,"index":3858},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\mod.rs","byte_start":709529,"byte_end":709544,"line_start":12,"line_end":12,"column_start":31,"column_end":46},"alias_span":null,"name":"InvalidBaseType","value":"","parent":{"krate":0,"index":1962}},{"kind":"Use","ref_id":{"krate":0,"index":3859},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\mod.rs","byte_start":709529,"byte_end":709544,"line_start":12,"line_end":12,"column_start":31,"column_end":46},"alias_span":null,"name":"InvalidBaseType","value":"","parent":{"krate":0,"index":1962}},{"kind":"Use","ref_id":{"krate":0,"index":3840},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\mod.rs","byte_start":709546,"byte_end":709554,"line_start":12,"line_end":12,"column_start":48,"column_end":56},"alias_span":null,"name":"Layouter","value":"","parent":{"krate":0,"index":1962}},{"kind":"Use","ref_id":{"krate":0,"index":3825},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\mod.rs","byte_start":709556,"byte_end":709566,"line_start":12,"line_end":12,"column_start":58,"column_end":68},"alias_span":null,"name":"TypeLayout","value":"","parent":{"krate":0,"index":1962}},{"kind":"Use","ref_id":{"krate":0,"index":2030},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\mod.rs","byte_start":709585,"byte_end":709600,"line_start":13,"line_end":13,"column_start":17,"column_end":32},"alias_span":null,"name":"EntryPointIndex","value":"","parent":{"krate":0,"index":1962}},{"kind":"Use","ref_id":{"krate":0,"index":3861},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\mod.rs","byte_start":709602,"byte_end":709609,"line_start":13,"line_end":13,"column_start":34,"column_end":41},"alias_span":null,"name":"NameKey","value":"","parent":{"krate":0,"index":1962}},{"kind":"Use","ref_id":{"krate":0,"index":3909},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\mod.rs","byte_start":709611,"byte_end":709616,"line_start":13,"line_end":13,"column_start":43,"column_end":48},"alias_span":null,"name":"Namer","value":"","parent":{"krate":0,"index":1962}},{"kind":"Use","ref_id":{"krate":0,"index":2053},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\mod.rs","byte_start":709639,"byte_end":709659,"line_start":14,"line_end":14,"column_start":21,"column_end":41},"alias_span":null,"name":"ensure_block_returns","value":"","parent":{"krate":0,"index":1962}},{"kind":"Use","ref_id":{"krate":0,"index":2082},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\mod.rs","byte_start":709680,"byte_end":709694,"line_start":15,"line_end":15,"column_start":20,"column_end":34},"alias_span":null,"name":"ResolveContext","value":"","parent":{"krate":0,"index":1962}},{"kind":"Use","ref_id":{"krate":0,"index":3928},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\mod.rs","byte_start":709696,"byte_end":709708,"line_start":15,"line_end":15,"column_start":36,"column_end":48},"alias_span":null,"name":"ResolveError","value":"","parent":{"krate":0,"index":1962}},{"kind":"Use","ref_id":{"krate":0,"index":3915},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\mod.rs","byte_start":709710,"byte_end":709724,"line_start":15,"line_end":15,"column_start":50,"column_end":64},"alias_span":null,"name":"TypeResolution","value":"","parent":{"krate":0,"index":1962}},{"kind":"Use","ref_id":{"krate":0,"index":4318},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\mod.rs","byte_start":781260,"byte_end":781274,"line_start":22,"line_end":22,"column_start":20,"column_end":34},"alias_span":null,"name":"ExpressionInfo","value":"","parent":{"krate":0,"index":2207}},{"kind":"Use","ref_id":{"krate":0,"index":4366},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\mod.rs","byte_start":781276,"byte_end":781288,"line_start":22,"line_end":22,"column_start":36,"column_end":48},"alias_span":null,"name":"FunctionInfo","value":"","parent":{"krate":0,"index":2207}},{"kind":"Use","ref_id":{"krate":0,"index":4204},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\mod.rs","byte_start":781290,"byte_end":781299,"line_start":22,"line_end":22,"column_start":50,"column_end":59},"alias_span":null,"name":"GlobalUse","value":"","parent":{"krate":0,"index":2207}},{"kind":"Use","ref_id":{"krate":0,"index":4105},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\mod.rs","byte_start":781301,"byte_end":781311,"line_start":22,"line_end":22,"column_start":61,"column_end":71},"alias_span":null,"name":"Uniformity","value":"","parent":{"krate":0,"index":2207}},{"kind":"Use","ref_id":{"krate":0,"index":4008},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\mod.rs","byte_start":781313,"byte_end":781335,"line_start":22,"line_end":22,"column_start":73,"column_end":95},"alias_span":null,"name":"UniformityRequirements","value":"","parent":{"krate":0,"index":2207}},{"kind":"Use","ref_id":{"krate":0,"index":4393},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\mod.rs","byte_start":781355,"byte_end":781367,"line_start":23,"line_end":23,"column_start":18,"column_end":30},"alias_span":null,"name":"ComposeError","value":"","parent":{"krate":0,"index":2207}},{"kind":"Use","ref_id":{"krate":0,"index":4419},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\mod.rs","byte_start":781389,"byte_end":781404,"line_start":24,"line_end":24,"column_start":21,"column_end":36},"alias_span":null,"name":"ExpressionError","value":"","parent":{"krate":0,"index":2207}},{"kind":"Use","ref_id":{"krate":0,"index":4587},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\mod.rs","byte_start":781425,"byte_end":781434,"line_start":25,"line_end":25,"column_start":20,"column_end":29},"alias_span":null,"name":"CallError","value":"","parent":{"krate":0,"index":2207}},{"kind":"Use","ref_id":{"krate":0,"index":4662},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\mod.rs","byte_start":781436,"byte_end":781449,"line_start":25,"line_end":25,"column_start":31,"column_end":44},"alias_span":null,"name":"FunctionError","value":"","parent":{"krate":0,"index":2207}},{"kind":"Use","ref_id":{"krate":0,"index":4649},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\mod.rs","byte_start":781451,"byte_end":781469,"line_start":25,"line_end":25,"column_start":46,"column_end":64},"alias_span":null,"name":"LocalVariableError","value":"","parent":{"krate":0,"index":2207}},{"kind":"Use","ref_id":{"krate":0,"index":4912},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\mod.rs","byte_start":781492,"byte_end":781507,"line_start":26,"line_end":26,"column_start":21,"column_end":36},"alias_span":null,"name":"EntryPointError","value":"","parent":{"krate":0,"index":2207}},{"kind":"Use","ref_id":{"krate":0,"index":4843},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\mod.rs","byte_start":781509,"byte_end":781528,"line_start":26,"line_end":26,"column_start":38,"column_end":57},"alias_span":null,"name":"GlobalVariableError","value":"","parent":{"krate":0,"index":2207}},{"kind":"Use","ref_id":{"krate":0,"index":4871},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\mod.rs","byte_start":781530,"byte_end":781542,"line_start":26,"line_end":26,"column_start":59,"column_end":71},"alias_span":null,"name":"VaryingError","value":"","parent":{"krate":0,"index":2207}},{"kind":"Use","ref_id":{"krate":0,"index":5079},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\mod.rs","byte_start":781562,"byte_end":781574,"line_start":27,"line_end":27,"column_start":18,"column_end":30},"alias_span":null,"name":"Disalignment","value":"","parent":{"krate":0,"index":2207}},{"kind":"Use","ref_id":{"krate":0,"index":5109},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\mod.rs","byte_start":781576,"byte_end":781585,"line_start":27,"line_end":27,"column_start":32,"column_end":41},"alias_span":null,"name":"TypeError","value":"","parent":{"krate":0,"index":2207}},{"kind":"Use","ref_id":{"krate":0,"index":4962},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\mod.rs","byte_start":781587,"byte_end":781596,"line_start":27,"line_end":27,"column_start":43,"column_end":52},"alias_span":null,"name":"TypeFlags","value":"","parent":{"krate":0,"index":2207}},{"kind":"Use","ref_id":{"krate":0,"index":80},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":9533,"byte_end":9538,"line_start":216,"line_end":216,"column_start":24,"column_end":29},"alias_span":null,"name":"Arena","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":30},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":9540,"byte_end":9546,"line_start":216,"line_end":216,"column_start":31,"column_end":37},"alias_span":null,"name":"Handle","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":66},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":9548,"byte_end":9553,"line_start":216,"line_end":216,"column_start":39,"column_end":44},"alias_span":null,"name":"Range","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":125},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":9555,"byte_end":9566,"line_start":216,"line_end":216,"column_start":46,"column_end":57},"alias_span":null,"name":"UniqueArena","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3994},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":9673,"byte_end":9677,"line_start":223,"line_end":223,"column_start":22,"column_end":26},"alias_span":null,"name":"Span","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3426},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":44540,"byte_end":44545,"line_start":1302,"line_end":1302,"column_start":16,"column_end":21},"alias_span":null,"name":"Block","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":0,"byte_end":56416,"line_start":1,"line_end":1600,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":154},{"krate":0,"index":1313},{"krate":0,"index":1360},{"krate":0,"index":1962},{"krate":0,"index":2194},{"krate":0,"index":2207},{"krate":0,"index":2663},{"krate":0,"index":2664},{"krate":0,"index":2667},{"krate":0,"index":2670},{"krate":0,"index":2673},{"krate":0,"index":2676},{"krate":0,"index":2677},{"krate":0,"index":2678},{"krate":0,"index":2681},{"krate":0,"index":2684},{"krate":0,"index":2687},{"krate":0,"index":2690},{"krate":0,"index":2691},{"krate":0,"index":2694},{"krate":0,"index":2696},{"krate":0,"index":5566},{"krate":0,"index":5568},{"krate":0,"index":5570},{"krate":0,"index":5571},{"krate":0,"index":5573},{"krate":0,"index":5576},{"krate":0,"index":5577},{"krate":0,"index":5579},{"krate":0,"index":5581},{"krate":0,"index":5582},{"krate":0,"index":5585},{"krate":0,"index":5587},{"krate":0,"index":5594},{"krate":0,"index":5596},{"krate":0,"index":5597},{"krate":0,"index":5599},{"krate":0,"index":5602},{"krate":0,"index":5603},{"krate":0,"index":5605},{"krate":0,"index":5607},{"krate":0,"index":5608},{"krate":0,"index":5610},{"krate":0,"index":5612},{"krate":0,"index":5619},{"krate":0,"index":5621},{"krate":0,"index":5622},{"krate":0,"index":5624},{"krate":0,"index":5627},{"krate":0,"index":5628},{"krate":0,"index":5630},{"krate":0,"index":5632},{"krate":0,"index":5633},{"krate":0,"index":5635},{"krate":0,"index":5637},{"krate":0,"index":5652},{"krate":0,"index":5654},{"krate":0,"index":5655},{"krate":0,"index":5657},{"krate":0,"index":5660},{"krate":0,"index":5661},{"krate":0,"index":5663},{"krate":0,"index":5665},{"krate":0,"index":5666},{"krate":0,"index":5669},{"krate":0,"index":5671},{"krate":0,"index":5712},{"krate":0,"index":5714},{"krate":0,"index":5715},{"krate":0,"index":5717},{"krate":0,"index":5720},{"krate":0,"index":5721},{"krate":0,"index":5723},{"krate":0,"index":5725},{"krate":0,"index":5726},{"krate":0,"index":5728},{"krate":0,"index":2697},{"krate":0,"index":5730},{"krate":0,"index":5740},{"krate":0,"index":5742},{"krate":0,"index":5743},{"krate":0,"index":5745},{"krate":0,"index":5748},{"krate":0,"index":5749},{"krate":0,"index":5751},{"krate":0,"index":5753},{"krate":0,"index":5754},{"krate":0,"index":5756},{"krate":0,"index":5758},{"krate":0,"index":5767},{"krate":0,"index":5769},{"krate":0,"index":5770},{"krate":0,"index":5772},{"krate":0,"index":5775},{"krate":0,"index":5776},{"krate":0,"index":5778},{"krate":0,"index":5780},{"krate":0,"index":5781},{"krate":0,"index":5783},{"krate":0,"index":5785},{"krate":0,"index":5791},{"krate":0,"index":5793},{"krate":0,"index":5794},{"krate":0,"index":5796},{"krate":0,"index":5799},{"krate":0,"index":5800},{"krate":0,"index":5802},{"krate":0,"index":5804},{"krate":0,"index":5805},{"krate":0,"index":5808},{"krate":0,"index":5810},{"krate":0,"index":5817},{"krate":0,"index":5819},{"krate":0,"index":5820},{"krate":0,"index":5822},{"krate":0,"index":5825},{"krate":0,"index":5826},{"krate":0,"index":5828},{"krate":0,"index":5830},{"krate":0,"index":5831},{"krate":0,"index":5833},{"krate":0,"index":5835},{"krate":0,"index":5842},{"krate":0,"index":5844},{"krate":0,"index":5845},{"krate":0,"index":5847},{"krate":0,"index":5850},{"krate":0,"index":5851},{"krate":0,"index":5853},{"krate":0,"index":5855},{"krate":0,"index":5856},{"krate":0,"index":5858},{"krate":0,"index":5860},{"krate":0,"index":5865},{"krate":0,"index":5867},{"krate":0,"index":5869},{"krate":0,"index":5870},{"krate":0,"index":5872},{"krate":0,"index":5875},{"krate":0,"index":5876},{"krate":0,"index":5879},{"krate":0,"index":5888},{"krate":0,"index":5890},{"krate":0,"index":5891},{"krate":0,"index":5893},{"krate":0,"index":5896},{"krate":0,"index":5897},{"krate":0,"index":5899},{"krate":0,"index":5901},{"krate":0,"index":5902},{"krate":0,"index":5904},{"krate":0,"index":5908},{"krate":0,"index":5910},{"krate":0,"index":5911},{"krate":0,"index":5912},{"krate":0,"index":5915},{"krate":0,"index":5916},{"krate":0,"index":5918},{"krate":0,"index":5920},{"krate":0,"index":5922},{"krate":0,"index":5924},{"krate":0,"index":5906},{"krate":0,"index":5927},{"krate":0,"index":5933},{"krate":0,"index":5935},{"krate":0,"index":5937},{"krate":0,"index":5939},{"krate":0,"index":5941},{"krate":0,"index":5963},{"krate":0,"index":5966},{"krate":0,"index":5968},{"krate":0,"index":5971},{"krate":0,"index":5973},{"krate":0,"index":5976},{"krate":0,"index":5978},{"krate":0,"index":5981},{"krate":0,"index":5983},{"krate":0,"index":5986},{"krate":0,"index":5989},{"krate":0,"index":6000},{"krate":0,"index":6065},{"krate":0,"index":6067},{"krate":0,"index":6068},{"krate":0,"index":6070},{"krate":0,"index":6073},{"krate":0,"index":6074},{"krate":0,"index":6076},{"krate":0,"index":6078},{"krate":0,"index":6079},{"krate":0,"index":6081},{"krate":0,"index":6083},{"krate":0,"index":6092},{"krate":0,"index":6094},{"krate":0,"index":6095},{"krate":0,"index":6097},{"krate":0,"index":6100},{"krate":0,"index":6101},{"krate":0,"index":6103},{"krate":0,"index":6105},{"krate":0,"index":6106},{"krate":0,"index":6109},{"krate":0,"index":6111},{"krate":0,"index":6114},{"krate":0,"index":6116},{"krate":0,"index":6117},{"krate":0,"index":6119},{"krate":0,"index":6122},{"krate":0,"index":6123},{"krate":0,"index":6126},{"krate":0,"index":6163},{"krate":0,"index":6165},{"krate":0,"index":6166},{"krate":0,"index":6168},{"krate":0,"index":6171},{"krate":0,"index":6172},{"krate":0,"index":6175},{"krate":0,"index":6179},{"krate":0,"index":6181},{"krate":0,"index":6182},{"krate":0,"index":6185},{"krate":0,"index":6198},{"krate":0,"index":6200},{"krate":0,"index":6202},{"krate":0,"index":6203},{"krate":0,"index":6205},{"krate":0,"index":6212},{"krate":0,"index":6214},{"krate":0,"index":6216},{"krate":0,"index":6217},{"krate":0,"index":6220},{"krate":0,"index":6228},{"krate":0,"index":6230},{"krate":0,"index":6232},{"krate":0,"index":6233},{"krate":0,"index":6235},{"krate":0,"index":6236},{"krate":0,"index":6239},{"krate":0,"index":6242},{"krate":0,"index":6245},{"krate":0,"index":6247},{"krate":0,"index":6249},{"krate":0,"index":6250},{"krate":0,"index":6252},{"krate":0,"index":6255},{"krate":0,"index":6257},{"krate":0,"index":6258},{"krate":0,"index":6261},{"krate":0,"index":6263},{"krate":0,"index":6269},{"krate":0,"index":6271},{"krate":0,"index":6273},{"krate":0,"index":6274},{"krate":0,"index":6277},{"krate":0,"index":6281},{"krate":0,"index":6283},{"krate":0,"index":6285},{"krate":0,"index":6290},{"krate":0,"index":6292},{"krate":0,"index":6293},{"krate":0,"index":6295},{"krate":0,"index":6298},{"krate":0,"index":6299},{"krate":0,"index":6301},{"krate":0,"index":6303},{"krate":0,"index":6304},{"krate":0,"index":6306},{"krate":0,"index":6308},{"krate":0,"index":6345},{"krate":0,"index":6347},{"krate":0,"index":6348},{"krate":0,"index":6350},{"krate":0,"index":6353},{"krate":0,"index":6354},{"krate":0,"index":6356},{"krate":0,"index":6358},{"krate":0,"index":6359},{"krate":0,"index":6361},{"krate":0,"index":6363},{"krate":0,"index":6380},{"krate":0,"index":6382},{"krate":0,"index":6383},{"krate":0,"index":6385},{"krate":0,"index":6388},{"krate":0,"index":6389},{"krate":0,"index":6391},{"krate":0,"index":6393},{"krate":0,"index":6394},{"krate":0,"index":6397},{"krate":0,"index":6399},{"krate":0,"index":6406},{"krate":0,"index":6408},{"krate":0,"index":6409},{"krate":0,"index":6411},{"krate":0,"index":6414},{"krate":0,"index":6415},{"krate":0,"index":6417},{"krate":0,"index":6419},{"krate":0,"index":6420},{"krate":0,"index":6422},{"krate":0,"index":6424},{"krate":0,"index":6437},{"krate":0,"index":6439},{"krate":0,"index":6440},{"krate":0,"index":6442},{"krate":0,"index":6445},{"krate":0,"index":6446},{"krate":0,"index":6448},{"krate":0,"index":6450},{"krate":0,"index":6451},{"krate":0,"index":6453},{"krate":0,"index":6455},{"krate":0,"index":6582},{"krate":0,"index":6584},{"krate":0,"index":6585},{"krate":0,"index":6587},{"krate":0,"index":6590},{"krate":0,"index":6591},{"krate":0,"index":6593},{"krate":0,"index":6595},{"krate":0,"index":6596},{"krate":0,"index":6598},{"krate":0,"index":6600},{"krate":0,"index":6614},{"krate":0,"index":6616},{"krate":0,"index":6617},{"krate":0,"index":6619},{"krate":0,"index":6620},{"krate":0,"index":6623},{"krate":0,"index":6632},{"krate":0,"index":6634},{"krate":0,"index":6635},{"krate":0,"index":6637},{"krate":0,"index":6638},{"krate":0,"index":6641},{"krate":0,"index":6654},{"krate":0,"index":6656},{"krate":0,"index":6657},{"krate":0,"index":6659},{"krate":0,"index":6660},{"krate":0,"index":6664},{"krate":0,"index":6666},{"krate":0,"index":6667},{"krate":0,"index":6668},{"krate":0,"index":6671},{"krate":0,"index":6672},{"krate":0,"index":6674},{"krate":0,"index":6676},{"krate":0,"index":6678},{"krate":0,"index":6680},{"krate":0,"index":6662},{"krate":0,"index":6683},{"krate":0,"index":6689},{"krate":0,"index":6691},{"krate":0,"index":6693},{"krate":0,"index":6695},{"krate":0,"index":6697},{"krate":0,"index":6719},{"krate":0,"index":6722},{"krate":0,"index":6724},{"krate":0,"index":6727},{"krate":0,"index":6729},{"krate":0,"index":6732},{"krate":0,"index":6734},{"krate":0,"index":6737},{"krate":0,"index":6739},{"krate":0,"index":6742},{"krate":0,"index":6745},{"krate":0,"index":6756},{"krate":0,"index":6841},{"krate":0,"index":6843},{"krate":0,"index":2698},{"krate":0,"index":6845},{"krate":0,"index":6849},{"krate":0,"index":6851},{"krate":0,"index":6853},{"krate":0,"index":6899},{"krate":0,"index":6901},{"krate":0,"index":6903},{"krate":0,"index":6907},{"krate":0,"index":6909},{"krate":0,"index":6911},{"krate":0,"index":6914},{"krate":0,"index":6916},{"krate":0,"index":6918},{"krate":0,"index":6926},{"krate":0,"index":6928},{"krate":0,"index":6930},{"krate":0,"index":6937},{"krate":0,"index":6939},{"krate":0,"index":6945},{"krate":0,"index":6947}],"decl_id":null,"docs":" Universal shader translator.","sig":null,"attributes":[{"value":"* Universal shader translator.\n\nThe central structure of the crate is [`Module`]. A `Module` contains:\n\n- [`Function`]s, which have arguments, a return type, local variables, and a body,\n\n- [`EntryPoint`]s, which are specialized functions that can serve as the entry\n  point for pipeline stages like vertex shading or fragment shading,\n\n- [`Constant`]s and [`GlobalVariable`]s used by `EntryPoint`s and `Function`s, and\n\n- [`Type`]s used by the above.\n\nThe body of an `EntryPoint` or `Function` is represented using two types:\n\n- An [`Expression`] produces a value, but has no side effects or control flow.\n  `Expressions` include variable references, unary and binary operators, and so\n  on.\n\n- A [`Statement`] can have side effects and structured control flow.\n  `Statement`s do not produce a value, other than by storing one in some\n  designated place. `Statements` include blocks, conditionals, and loops, but also\n  operations that have side effects, like stores and function calls.\n\n`Statement`s form a tree, with pointers into the DAG of `Expression`s.\n\nRestricting side effects to statements simplifies analysis and code generation.\nA Naga backend can generate code to evaluate an `Expression` however and\nwhenever it pleases, as long as it is certain to observe the side effects of all\npreviously executed `Statement`s.\n\nMany `Statement` variants use the [`Block`] type, which is `Vec<Statement>`,\nwith optional span info, representing a series of statements executed in order. The body of an\n`EntryPoint`s or `Function` is a `Block`, and `Statement` has a\n[`Block`][Statement::Block] variant.\n\n## Arenas\n\nTo improve translator performance and reduce memory usage, most structures are\nstored in an [`Arena`]. An `Arena<T>` stores a series of `T` values, indexed by\n[`Handle<T>`](Handle) values, which are just wrappers around integer indexes.\nFor example, a `Function`'s expressions are stored in an `Arena<Expression>`,\nand compound expressions refer to their sub-expressions via `Handle<Expression>`\nvalues. (When examining the serialized form of a `Module`, note that the first\nelement of an `Arena` has an index of 1, not 0.)\n\nA [`UniqueArena`] is just like an `Arena`, except that it stores only a single\ninstance of each value. The value type must implement `Eq` and `Hash`. Like an\n`Arena`, inserting a value into a `UniqueArena` returns a `Handle` which can be\nused to efficiently access the value, without a hash lookup. Inserting a value\nmultiple times returns the same `Handle`.\n\nIf the `span` feature is enabled, both `Arena` and `UniqueArena` can associate a\nsource code span with each element.\n\n## Function Calls\n\nNaga's representation of function calls is unusual. Most languages treat\nfunction calls as expressions, but because calls may have side effects, Naga\nrepresents them as a kind of statement, [`Statement::Call`]. If the function\nreturns a value, a call statement designates a particular [`Expression::CallResult`]\nexpression to represent its return value, for use by subsequent statements and\nexpressions.\n\n## `Expression` evaluation time\n\nIt is essential to know when an [`Expression`] should be evaluated, because its\nvalue may depend on previous [`Statement`]s' effects. But whereas the order of\nexecution for a tree of `Statement`s is apparent from its structure, it is not\nso clear for `Expressions`, since an expression may be referred to by any number\nof `Statement`s and other `Expression`s.\n\nNaga's rules for when `Expression`s are evaluated are as follows:\n\n-   [`Constant`](Expression::Constant) expressions are considered to be\n    implicitly evaluated before execution begins.\n\n-   [`FunctionArgument`] and [`LocalVariable`] expressions are considered\n    implicitly evaluated upon entry to the function to which they belong.\n    Function arguments cannot be assigned to, and `LocalVariable` expressions\n    produce a *pointer to* the variable's value (for use with [`Load`] and\n    [`Store`]). Neither varies while the function executes, so it suffices to\n    consider these expressions evaluated once on entry.\n\n-   Similarly, [`GlobalVariable`] expressions are considered implicitly\n    evaluated before execution begins, since their value does not change while\n    code executes, for one of two reasons:\n\n    -   Most `GlobalVariable` expressions produce a pointer to the variable's\n        value, for use with [`Load`] and [`Store`], as `LocalVariable`\n        expressions do. Although the variable's value may change, its address\n        does not.\n\n    -   A `GlobalVariable` expression referring to a global in the\n        [`StorageClass::Handle`] storage class produces the value directly, not\n        a pointer. Such global variables hold opaque types like shaders or\n        images, and cannot be assigned to.\n\n-   A [`CallResult`] expression that is the `result` of a [`Statement::Call`],\n    representing the call's return value, is evaluated when the `Call` statement\n    is executed.\n\n-   Similarly, an [`AtomicResult`] expression that is the `result` of an\n    [`Atomic`] statement, representing the result of the atomic operation, is\n    evaluated when the `Atomic` statement is executed.\n\n-   All other expressions are evaluated when the (unique) [`Statement::Emit`]\n    statement that covers them is executed. The [`Expression::needs_pre_emit`]\n    method returns `true` if the given expression is one of those variants that\n    does *not* need to be covered by an `Emit` statement.\n\nNow, strictly speaking, not all `Expression` variants actually care when they're\nevaluated. For example, you can evaluate a [`BinaryOperator::Add`] expression\nany time you like, as long as you give it the right operands. It's really only a\nvery small set of expressions that are affected by timing:\n\n-   [`Load`], [`ImageSample`], and [`ImageLoad`] expressions are influenced by\n    stores to the variables or images they access, and must execute at the\n    proper time relative to them.\n\n-   [`Derivative`] expressions are sensitive to control flow uniformity: they\n    must not be moved out of an area of uniform control flow into a non-uniform\n    area.\n\n-   More generally, any expression that's used by more than one other expression\n    or statement should probably be evaluated only once, and then stored in a\n    variable to be cited at each point of use.\n\nNaga tries to help back ends handle all these cases correctly in a somewhat\ncircuitous way. The [`ModuleInfo`] structure returned by [`Validator::validate`]\nprovides a reference count for each expression in each function in the module.\nNaturally, any expression with a reference count of two or more deserves to be\nevaluated and stored in a temporary variable at the point that the `Emit`\nstatement covering it is executed. But if we selectively lower the reference\ncount threshold to _one_ for the sensitive expression types listed above, so\nthat we _always_ generate a temporary variable and save their value, then the\nsame code that manages multiply referenced expressions will take care of\nintroducing temporaries for time-sensitive expressions as well. The\n`Expression::bake_ref_count` method (private to the back ends) is meant to help\nwith this.\n\n## `Expression` scope\n\nEach `Expression` has a *scope*, which is the region of the function within\nwhich it can be used by `Statement`s and other `Expression`s. It is a validation\nerror to use an `Expression` outside its scope.\n\nAn expression's scope is defined as follows:\n\n-   The scope of a [`Constant`], [`GlobalVariable`], [`FunctionArgument`] or\n    [`LocalVariable`] expression covers the entire `Function` in which it\n    occurs.\n\n-   The scope of an expression evaluated by an [`Emit`] statement covers the\n    subsequent expressions in that `Emit`, the subsequent statements in the `Block`\n    to which that `Emit` belongs (if any) and their sub-statements (if any).\n\n-   The `result` expression of a [`Call`] or [`Atomic`] statement has a scope\n    covering the subsequent statements in the `Block` in which the statement\n    occurs (if any) and their sub-statements (if any).\n\nFor example, this implies that an expression evaluated by some statement in a\nnested `Block` is not available in the `Block`'s parents. Such a value would\nneed to be stored in a local variable to be carried upwards in the statement\ntree.\n\n[`AtomicResult`]: Expression::AtomicResult\n[`CallResult`]: Expression::CallResult\n[`Constant`]: Expression::Constant\n[`Derivative`]: Expression::Derivative\n[`FunctionArgument`]: Expression::FunctionArgument\n[`GlobalVariable`]: Expression::GlobalVariable\n[`ImageLoad`]: Expression::ImageLoad\n[`ImageSample`]: Expression::ImageSample\n[`Load`]: Expression::Load\n[`LocalVariable`]: Expression::LocalVariable\n\n[`Atomic`]: Statement::Atomic\n[`Call`]: Statement::Call\n[`Emit`]: Statement::Emit\n[`Store`]: Statement::Store\n\n[`Validator::validate`]: valid::Validator::validate\n[`ModuleInfo`]: valid::ModuleInfo\n\n!*/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":0,"byte_end":8905,"line_start":1,"line_end":186,"column_start":1,"column_end":4}},{"value":"allow(renamed_and_removed_lints, unknown_lints, clippy ::\n        new_without_default, clippy :: unneeded_field_pattern, clippy ::\n        match_like_matches_macro, clippy :: manual_strip, clippy ::\n        if_same_then_else, clippy :: unknown_clippy_lints,)","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":8966,"byte_end":9248,"line_start":189,"line_end":198,"column_start":1,"column_end":3}},{"value":"warn(trivial_casts, trivial_numeric_casts, unused_extern_crates,\n       unused_qualifications, clippy :: pattern_type_mismatch)","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":9249,"byte_end":9393,"line_start":199,"line_end":205,"column_start":1,"column_end":3}},{"value":"deny(clippy :: panic)","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":9394,"byte_end":9417,"line_start":206,"line_end":206,"column_start":1,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":30},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\arena.rs","byte_start":57121,"byte_end":57127,"line_start":20,"line_end":20,"column_start":12,"column_end":18},"name":"Handle","qualname":"::arena::Handle","value":"Handle {  }","parent":null,"children":[{"krate":0,"index":32},{"krate":0,"index":33}],"decl_id":null,"docs":" A strongly typed reference to an arena item.","sig":null,"attributes":[{"value":"/ A strongly typed reference to an arena item.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\arena.rs","byte_start":56753,"byte_end":56801,"line_start":11,"line_end":11,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\arena.rs","byte_start":56802,"byte_end":56805,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ A `Handle` value can be used as an index into an [`Arena`] or [`UniqueArena`].","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\arena.rs","byte_start":56806,"byte_end":56888,"line_start":13,"line_end":13,"column_start":1,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":60},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\arena.rs","byte_start":58517,"byte_end":58522,"line_start":77,"line_end":77,"column_start":12,"column_end":17},"name":"index","qualname":"<Handle<T>>::index","value":"pub fn index(Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the zero-based index of this handle.\n","sig":null,"attributes":[{"value":"/ Returns the zero-based index of this handle.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\arena.rs","byte_start":58457,"byte_end":58505,"line_start":76,"line_end":76,"column_start":5,"column_end":53}}]},{"kind":"Struct","id":{"krate":0,"index":66},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\arena.rs","byte_start":59438,"byte_end":59443,"line_start":106,"line_end":106,"column_start":12,"column_end":17},"name":"Range","qualname":"::arena::Range","value":"Range {  }","parent":null,"children":[{"krate":0,"index":68},{"krate":0,"index":69}],"decl_id":null,"docs":" A strongly typed range of handles.\n","sig":null,"attributes":[{"value":"/ A strongly typed range of handles.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\arena.rs","byte_start":59167,"byte_end":59205,"line_start":99,"line_end":99,"column_start":1,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":80},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\arena.rs","byte_start":60778,"byte_end":60783,"line_start":149,"line_end":149,"column_start":12,"column_end":17},"name":"Arena","qualname":"::arena::Arena","value":"Arena {  }","parent":null,"children":[{"krate":0,"index":82}],"decl_id":null,"docs":" An arena holding some kind of component (e.g., type, constant,\n instruction, etc.) that can be referenced.","sig":null,"attributes":[{"value":"/ An arena holding some kind of component (e.g., type, constant,","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\arena.rs","byte_start":60326,"byte_end":60392,"line_start":140,"line_end":140,"column_start":1,"column_end":67}},{"value":"/ instruction, etc.) that can be referenced.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\arena.rs","byte_start":60393,"byte_end":60439,"line_start":141,"line_end":141,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\arena.rs","byte_start":60440,"byte_end":60443,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"/ Adding new items to the arena produces a strongly-typed [`Handle`].","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\arena.rs","byte_start":60444,"byte_end":60515,"line_start":143,"line_end":143,"column_start":1,"column_end":72}},{"value":"/ The arena can be indexed using the given handle to obtain","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\arena.rs","byte_start":60516,"byte_end":60577,"line_start":144,"line_end":144,"column_start":1,"column_end":62}},{"value":"/ a reference to the stored item.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\arena.rs","byte_start":60578,"byte_end":60613,"line_start":145,"line_end":145,"column_start":1,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":91},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\arena.rs","byte_start":61292,"byte_end":61295,"line_start":170,"line_end":170,"column_start":12,"column_end":15},"name":"new","qualname":"<Arena<T>>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new arena with no initial capacity allocated.\n","sig":null,"attributes":[{"value":"/ Create a new arena with no initial capacity allocated.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\arena.rs","byte_start":61222,"byte_end":61280,"line_start":169,"line_end":169,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":92},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\arena.rs","byte_start":61489,"byte_end":61499,"line_start":179,"line_end":179,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Arena<T>>::into_inner","value":"pub fn into_inner(Self) -> Vec<T>","parent":null,"children":[],"decl_id":null,"docs":" Extracts the inner vector.\n","sig":null,"attributes":[{"value":"/ Extracts the inner vector.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\arena.rs","byte_start":61447,"byte_end":61477,"line_start":178,"line_end":178,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":93},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\arena.rs","byte_start":61620,"byte_end":61623,"line_start":184,"line_end":184,"column_start":12,"column_end":15},"name":"len","qualname":"<Arena<T>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the current number of items stored in this arena.\n","sig":null,"attributes":[{"value":"/ Returns the current number of items stored in this arena.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\arena.rs","byte_start":61547,"byte_end":61608,"line_start":183,"line_end":183,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":94},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\arena.rs","byte_start":61742,"byte_end":61750,"line_start":189,"line_end":189,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<Arena<T>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the arena contains no elements.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the arena contains no elements.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\arena.rs","byte_start":61677,"byte_end":61730,"line_start":188,"line_end":188,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":95},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\arena.rs","byte_start":61944,"byte_end":61948,"line_start":195,"line_end":195,"column_start":12,"column_end":16},"name":"iter","qualname":"<Arena<T>>::iter","value":"pub fn iter(&Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the items stored in this arena, returning both\n the item's handle and a reference to it.\n","sig":null,"attributes":[{"value":"/ Returns an iterator over the items stored in this arena, returning both","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\arena.rs","byte_start":61808,"byte_end":61883,"line_start":193,"line_end":193,"column_start":5,"column_end":80}},{"value":"/ the item's handle and a reference to it.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\arena.rs","byte_start":61888,"byte_end":61932,"line_start":194,"line_end":194,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":98},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\arena.rs","byte_start":62302,"byte_end":62310,"line_start":204,"line_end":204,"column_start":12,"column_end":20},"name":"iter_mut","qualname":"<Arena<T>>::iter_mut","value":"pub fn iter_mut(&mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns a iterator over the items stored in this arena,\n returning both the item's handle and a mutable reference to it.\n","sig":null,"attributes":[{"value":"/ Returns a iterator over the items stored in this arena,","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\arena.rs","byte_start":62159,"byte_end":62218,"line_start":202,"line_end":202,"column_start":5,"column_end":64}},{"value":"/ returning both the item's handle and a mutable reference to it.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\arena.rs","byte_start":62223,"byte_end":62290,"line_start":203,"line_end":203,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":101},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\arena.rs","byte_start":62605,"byte_end":62611,"line_start":212,"line_end":212,"column_start":12,"column_end":18},"name":"append","qualname":"<Arena<T>>::append","value":"pub fn append(&mut Self, T, Span) -> Handle<T>","parent":null,"children":[],"decl_id":null,"docs":" Adds a new value to the arena, returning a typed handle.\n","sig":null,"attributes":[{"value":"/ Adds a new value to the arena, returning a typed handle.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\arena.rs","byte_start":62533,"byte_end":62593,"line_start":211,"line_end":211,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":102},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\arena.rs","byte_start":62952,"byte_end":62960,"line_start":223,"line_end":223,"column_start":12,"column_end":20},"name":"fetch_if","qualname":"<Arena<T>>::fetch_if","value":"pub fn fetch_if<F: Fn(&T) -> bool>(&Self, F) -> Option<Handle<T>>","parent":null,"children":[],"decl_id":null,"docs":" Fetch a handle to an existing type.\n","sig":null,"attributes":[{"value":"/ Fetch a handle to an existing type.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\arena.rs","byte_start":62901,"byte_end":62940,"line_start":222,"line_end":222,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":105},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\arena.rs","byte_start":63360,"byte_end":63378,"line_start":234,"line_end":234,"column_start":12,"column_end":30},"name":"fetch_if_or_append","qualname":"<Arena<T>>::fetch_if_or_append","value":"pub fn fetch_if_or_append<F: Fn(&T, &T) -> bool>(&mut Self, T, Span, F)\n-> Handle<T>","parent":null,"children":[],"decl_id":null,"docs":" Adds a value with a custom check for uniqueness:\n returns a handle pointing to\n an existing element if the check succeeds, or adds a new\n element otherwise.\n","sig":null,"attributes":[{"value":"/ Adds a value with a custom check for uniqueness:","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\arena.rs","byte_start":63167,"byte_end":63219,"line_start":230,"line_end":230,"column_start":5,"column_end":57}},{"value":"/ returns a handle pointing to","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\arena.rs","byte_start":63224,"byte_end":63256,"line_start":231,"line_end":231,"column_start":5,"column_end":37}},{"value":"/ an existing element if the check succeeds, or adds a new","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\arena.rs","byte_start":63261,"byte_end":63321,"line_start":232,"line_end":232,"column_start":5,"column_end":65}},{"value":"/ element otherwise.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\arena.rs","byte_start":63326,"byte_end":63348,"line_start":233,"line_end":233,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":108},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\arena.rs","byte_start":63802,"byte_end":63817,"line_start":248,"line_end":248,"column_start":12,"column_end":27},"name":"fetch_or_append","qualname":"<Arena<T>>::fetch_or_append","value":"pub fn fetch_or_append(&mut Self, T, Span) -> Handle<T> where T: PartialEq","parent":null,"children":[],"decl_id":null,"docs":" Adds a value with a check for uniqueness, where the check is plain comparison.\n","sig":null,"attributes":[{"value":"/ Adds a value with a check for uniqueness, where the check is plain comparison.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\arena.rs","byte_start":63708,"byte_end":63790,"line_start":247,"line_end":247,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":109},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\arena.rs","byte_start":63972,"byte_end":63979,"line_start":255,"line_end":255,"column_start":12,"column_end":19},"name":"try_get","qualname":"<Arena<T>>::try_get","value":"pub fn try_get(&Self, Handle<T>) -> Option<&T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":110},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\arena.rs","byte_start":64138,"byte_end":64145,"line_start":260,"line_end":260,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Arena<T>>::get_mut","value":"pub fn get_mut(&mut Self, Handle<T>) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to an element in the arena.\n","sig":null,"attributes":[{"value":"/ Get a mutable reference to an element in the arena.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\arena.rs","byte_start":64071,"byte_end":64126,"line_start":259,"line_end":259,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":111},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\arena.rs","byte_start":64339,"byte_end":64349,"line_start":265,"line_end":265,"column_start":12,"column_end":22},"name":"range_from","qualname":"<Arena<T>>::range_from","value":"pub fn range_from(&Self, usize) -> Range<T>","parent":null,"children":[],"decl_id":null,"docs":" Get the range of handles from a particular number of elements to the end.\n","sig":null,"attributes":[{"value":"/ Get the range of handles from a particular number of elements to the end.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\arena.rs","byte_start":64250,"byte_end":64327,"line_start":264,"line_end":264,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":112},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\arena.rs","byte_start":64578,"byte_end":64583,"line_start":273,"line_end":273,"column_start":12,"column_end":17},"name":"clear","qualname":"<Arena<T>>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Clears the arena keeping all allocations\n","sig":null,"attributes":[{"value":"/ Clears the arena keeping all allocations","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\arena.rs","byte_start":64522,"byte_end":64566,"line_start":272,"line_end":272,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":113},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\arena.rs","byte_start":64641,"byte_end":64649,"line_start":277,"line_end":277,"column_start":12,"column_end":20},"name":"get_span","qualname":"<Arena<T>>::get_span","value":"pub fn get_span(&Self, Handle<T>) -> Span","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":125},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\arena.rs","byte_start":67926,"byte_end":67937,"line_start":391,"line_end":391,"column_start":12,"column_end":23},"name":"UniqueArena","qualname":"::arena::UniqueArena","value":"UniqueArena {  }","parent":null,"children":[{"krate":0,"index":127}],"decl_id":null,"docs":" An arena whose elements are guaranteed to be unique.","sig":null,"attributes":[{"value":"/ An arena whose elements are guaranteed to be unique.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\arena.rs","byte_start":67235,"byte_end":67291,"line_start":377,"line_end":377,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\arena.rs","byte_start":67292,"byte_end":67295,"line_start":378,"line_end":378,"column_start":1,"column_end":4}},{"value":"/ A `UniqueArena` holds a set of unique values of type `T`, each with an","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\arena.rs","byte_start":67296,"byte_end":67370,"line_start":379,"line_end":379,"column_start":1,"column_end":75}},{"value":"/ associated [`Span`]. Inserting a value returns a `Handle<T>`, which can be","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\arena.rs","byte_start":67371,"byte_end":67449,"line_start":380,"line_end":380,"column_start":1,"column_end":79}},{"value":"/ used to index the `UniqueArena` and obtain shared access to the `T` element.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\arena.rs","byte_start":67450,"byte_end":67530,"line_start":381,"line_end":381,"column_start":1,"column_end":81}},{"value":"/ Access via a `Handle` is an array lookup - no hash lookup is necessary.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\arena.rs","byte_start":67531,"byte_end":67606,"line_start":382,"line_end":382,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\arena.rs","byte_start":67607,"byte_end":67610,"line_start":383,"line_end":383,"column_start":1,"column_end":4}},{"value":"/ The element type must implement `Eq` and `Hash`. Insertions of equivalent","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\arena.rs","byte_start":67611,"byte_end":67688,"line_start":384,"line_end":384,"column_start":1,"column_end":78}},{"value":"/ elements, according to `Eq`, all return the same `Handle`.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\arena.rs","byte_start":67689,"byte_end":67751,"line_start":385,"line_end":385,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\arena.rs","byte_start":67752,"byte_end":67755,"line_start":386,"line_end":386,"column_start":1,"column_end":4}},{"value":"/ Once inserted, elements may not be mutated.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\arena.rs","byte_start":67756,"byte_end":67803,"line_start":387,"line_end":387,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\arena.rs","byte_start":67804,"byte_end":67807,"line_start":388,"line_end":388,"column_start":1,"column_end":4}},{"value":"/ `UniqueArena` is similar to [`Arena`]: If `Arena` is vector-like,","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\arena.rs","byte_start":67808,"byte_end":67877,"line_start":389,"line_end":389,"column_start":1,"column_end":70}},{"value":"/ `UniqueArena` is `HashSet`-like.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\arena.rs","byte_start":67878,"byte_end":67914,"line_start":390,"line_end":390,"column_start":1,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":130},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\arena.rs","byte_start":68469,"byte_end":68472,"line_start":406,"line_end":406,"column_start":12,"column_end":15},"name":"new","qualname":"<UniqueArena<T>>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new arena with no initial capacity allocated.\n","sig":null,"attributes":[{"value":"/ Create a new arena with no initial capacity allocated.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\arena.rs","byte_start":68399,"byte_end":68457,"line_start":405,"line_end":405,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":131},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\arena.rs","byte_start":68706,"byte_end":68709,"line_start":415,"line_end":415,"column_start":12,"column_end":15},"name":"len","qualname":"<UniqueArena<T>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the current number of items stored in this arena.\n","sig":null,"attributes":[{"value":"/ Return the current number of items stored in this arena.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\arena.rs","byte_start":68634,"byte_end":68694,"line_start":414,"line_end":414,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":132},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\arena.rs","byte_start":68826,"byte_end":68834,"line_start":420,"line_end":420,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<UniqueArena<T>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return `true` if the arena contains no elements.\n","sig":null,"attributes":[{"value":"/ Return `true` if the arena contains no elements.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\arena.rs","byte_start":68762,"byte_end":68814,"line_start":419,"line_end":419,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":133},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\arena.rs","byte_start":68949,"byte_end":68954,"line_start":425,"line_end":425,"column_start":12,"column_end":17},"name":"clear","qualname":"<UniqueArena<T>>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Clears the arena, keeping all allocations.\n","sig":null,"attributes":[{"value":"/ Clears the arena, keeping all allocations.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\arena.rs","byte_start":68891,"byte_end":68937,"line_start":424,"line_end":424,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":134},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\arena.rs","byte_start":69401,"byte_end":69409,"line_start":438,"line_end":438,"column_start":12,"column_end":20},"name":"get_span","qualname":"<UniqueArena<T>>::get_span","value":"pub fn get_span(&Self, Handle<T>) -> Span","parent":null,"children":[],"decl_id":null,"docs":" Return the span associated with `handle`.","sig":null,"attributes":[{"value":"/ Return the span associated with `handle`.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\arena.rs","byte_start":69070,"byte_end":69115,"line_start":431,"line_end":431,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\arena.rs","byte_start":69120,"byte_end":69123,"line_start":432,"line_end":432,"column_start":5,"column_end":8}},{"value":"/ If a value has been inserted multiple times, the span returned is the","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\arena.rs","byte_start":69128,"byte_end":69201,"line_start":433,"line_end":433,"column_start":5,"column_end":78}},{"value":"/ one provided with the first insertion.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\arena.rs","byte_start":69206,"byte_end":69248,"line_start":434,"line_end":434,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\arena.rs","byte_start":69253,"byte_end":69256,"line_start":435,"line_end":435,"column_start":5,"column_end":8}},{"value":"/ If the `span` feature is not enabled, always return `Span::default`.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\arena.rs","byte_start":69261,"byte_end":69333,"line_start":436,"line_end":436,"column_start":5,"column_end":77}},{"value":"/ This can be detected with [`Span::is_defined`].","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\arena.rs","byte_start":69338,"byte_end":69389,"line_start":437,"line_end":437,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":137},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\arena.rs","byte_start":69931,"byte_end":69935,"line_start":457,"line_end":457,"column_start":12,"column_end":16},"name":"iter","qualname":"<UniqueArena<T>>::iter","value":"pub fn iter(&Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the items stored in this arena, returning both\n the item's handle and a reference to it.\n","sig":null,"attributes":[{"value":"/ Returns an iterator over the items stored in this arena, returning both","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\arena.rs","byte_start":69795,"byte_end":69870,"line_start":455,"line_end":455,"column_start":5,"column_end":80}},{"value":"/ the item's handle and a reference to it.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\arena.rs","byte_start":69875,"byte_end":69919,"line_start":456,"line_end":456,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":140},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\arena.rs","byte_start":70824,"byte_end":70830,"line_start":479,"line_end":479,"column_start":12,"column_end":18},"name":"insert","qualname":"<UniqueArena<T>>::insert","value":"pub fn insert(&mut Self, T, Span) -> Handle<T>","parent":null,"children":[],"decl_id":null,"docs":" Insert a new value into the arena.","sig":null,"attributes":[{"value":"/ Insert a new value into the arena.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\arena.rs","byte_start":70214,"byte_end":70252,"line_start":465,"line_end":465,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\arena.rs","byte_start":70257,"byte_end":70260,"line_start":466,"line_end":466,"column_start":5,"column_end":8}},{"value":"/ Return a [`Handle<T>`], which can be used to index this arena to get a","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\arena.rs","byte_start":70265,"byte_end":70339,"line_start":467,"line_end":467,"column_start":5,"column_end":79}},{"value":"/ shared reference to the element.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\arena.rs","byte_start":70344,"byte_end":70380,"line_start":468,"line_end":468,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\arena.rs","byte_start":70385,"byte_end":70388,"line_start":469,"line_end":469,"column_start":5,"column_end":8}},{"value":"/ If this arena already contains an element that is `Eq` to `value`,","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\arena.rs","byte_start":70393,"byte_end":70463,"line_start":470,"line_end":470,"column_start":5,"column_end":75}},{"value":"/ return a `Handle` to the existing element, and drop `value`.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\arena.rs","byte_start":70468,"byte_end":70532,"line_start":471,"line_end":471,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\arena.rs","byte_start":70537,"byte_end":70540,"line_start":472,"line_end":472,"column_start":5,"column_end":8}},{"value":"/ When the `span` feature is enabled, if `value` is inserted into the","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\arena.rs","byte_start":70545,"byte_end":70616,"line_start":473,"line_end":473,"column_start":5,"column_end":76}},{"value":"/ arena, associate `span` with it. An element's span can be retrieved with","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\arena.rs","byte_start":70621,"byte_end":70697,"line_start":474,"line_end":474,"column_start":5,"column_end":81}},{"value":"/ the [`get_span`] method.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\arena.rs","byte_start":70702,"byte_end":70730,"line_start":475,"line_end":475,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\arena.rs","byte_start":70735,"byte_end":70738,"line_start":476,"line_end":476,"column_start":5,"column_end":8}},{"value":"/ [`Handle<T>`]: Handle","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\arena.rs","byte_start":70743,"byte_end":70768,"line_start":477,"line_end":477,"column_start":5,"column_end":30}},{"value":"/ [`get_span`]: UniqueArena::get_span","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\arena.rs","byte_start":70773,"byte_end":70812,"line_start":478,"line_end":478,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":141},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\arena.rs","byte_start":71513,"byte_end":71516,"line_start":502,"line_end":502,"column_start":12,"column_end":15},"name":"get","qualname":"<UniqueArena<T>>::get","value":"pub fn get(&Self, &T) -> Option<Handle<T>>","parent":null,"children":[],"decl_id":null,"docs":" Return this arena's handle for `value`, if present.","sig":null,"attributes":[{"value":"/ Return this arena's handle for `value`, if present.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\arena.rs","byte_start":71317,"byte_end":71372,"line_start":498,"line_end":498,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\arena.rs","byte_start":71377,"byte_end":71380,"line_start":499,"line_end":499,"column_start":5,"column_end":8}},{"value":"/ If this arena already contains an element equal to `value`,","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\arena.rs","byte_start":71385,"byte_end":71448,"line_start":500,"line_end":500,"column_start":5,"column_end":68}},{"value":"/ return its handle. Otherwise, return `None`.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\arena.rs","byte_start":71453,"byte_end":71501,"line_start":501,"line_end":501,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":143},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\arena.rs","byte_start":71773,"byte_end":71783,"line_start":509,"line_end":509,"column_start":12,"column_end":22},"name":"get_handle","qualname":"<UniqueArena<T>>::get_handle","value":"pub fn get_handle(&Self, Handle<T>) -> Option<&T>","parent":null,"children":[],"decl_id":null,"docs":" Return this arena's value at `handle`, if that is a valid handle.\n","sig":null,"attributes":[{"value":"/ Return this arena's value at `handle`, if that is a valid handle.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\arena.rs","byte_start":71692,"byte_end":71761,"line_start":508,"line_end":508,"column_start":5,"column_end":74}}]},{"kind":"Mod","id":{"krate":0,"index":154},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"back","qualname":"::back","value":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\mod.rs","parent":null,"children":[{"krate":0,"index":155},{"krate":0,"index":482},{"krate":0,"index":1276},{"krate":0,"index":1277},{"krate":0,"index":1278},{"krate":0,"index":3397},{"krate":0,"index":3400},{"krate":0,"index":3402},{"krate":0,"index":1279},{"krate":0,"index":1281},{"krate":0,"index":1284},{"krate":0,"index":1291},{"krate":0,"index":1297},{"krate":0,"index":3403},{"krate":0,"index":3410},{"krate":0,"index":3412},{"krate":0,"index":3413},{"krate":0,"index":3415},{"krate":0,"index":3419},{"krate":0,"index":3421},{"krate":0,"index":3422},{"krate":0,"index":3424},{"krate":0,"index":1302},{"krate":0,"index":1304},{"krate":0,"index":1306},{"krate":0,"index":1310},{"krate":0,"index":1311}],"decl_id":null,"docs":" Functions which export shader modules into binary and text formats.\n","sig":null,"attributes":[{"value":"/ Functions which export shader modules into binary and text formats.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\mod.rs","byte_start":73178,"byte_end":73249,"line_start":1,"line_end":1,"column_start":1,"column_end":72}}]},{"kind":"Mod","id":{"krate":0,"index":155},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\hlsl\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"hlsl","qualname":"::back::hlsl","value":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\hlsl\\mod.rs","parent":null,"children":[{"krate":0,"index":156},{"krate":0,"index":175},{"krate":0,"index":237},{"krate":0,"index":239},{"krate":0,"index":307},{"krate":0,"index":448},{"krate":0,"index":449},{"krate":0,"index":451},{"krate":0,"index":454},{"krate":0,"index":2853},{"krate":0,"index":2856},{"krate":0,"index":2858},{"krate":0,"index":2860},{"krate":0,"index":2862},{"krate":0,"index":2863},{"krate":0,"index":2866},{"krate":0,"index":2867},{"krate":0,"index":2869},{"krate":0,"index":457},{"krate":0,"index":2872},{"krate":0,"index":2879},{"krate":0,"index":2880},{"krate":0,"index":2882},{"krate":0,"index":2884},{"krate":0,"index":2887},{"krate":0,"index":2888},{"krate":0,"index":2890},{"krate":0,"index":2891},{"krate":0,"index":2893},{"krate":0,"index":458},{"krate":0,"index":460},{"krate":0,"index":462},{"krate":0,"index":464},{"krate":0,"index":2895},{"krate":0,"index":2896},{"krate":0,"index":2898},{"krate":0,"index":2900},{"krate":0,"index":2901},{"krate":0,"index":2904},{"krate":0,"index":2905},{"krate":0,"index":2910},{"krate":0,"index":2915},{"krate":0,"index":2917},{"krate":0,"index":2919},{"krate":0,"index":2922},{"krate":0,"index":2923},{"krate":0,"index":2926},{"krate":0,"index":2927},{"krate":0,"index":465},{"krate":0,"index":467},{"krate":0,"index":2929},{"krate":0,"index":2931},{"krate":0,"index":2933},{"krate":0,"index":2934},{"krate":0,"index":2939},{"krate":0,"index":2948},{"krate":0,"index":2950},{"krate":0,"index":2965},{"krate":0,"index":2969},{"krate":0,"index":469},{"krate":0,"index":471}],"decl_id":null,"docs":" HLSL shading language backend","sig":null,"attributes":[{"value":"cfg(feature = \"hlsl-out\")","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\mod.rs","byte_start":73335,"byte_end":73363,"line_start":7,"line_end":7,"column_start":1,"column_end":29}},{"value":"/ HLSL shading language backend","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\hlsl\\mod.rs","byte_start":85468,"byte_end":85501,"line_start":1,"line_end":1,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\hlsl\\mod.rs","byte_start":85502,"byte_end":85505,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ # Supported shader model versions:","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\hlsl\\mod.rs","byte_start":85506,"byte_end":85544,"line_start":3,"line_end":3,"column_start":1,"column_end":39}},{"value":"/ - 5.0","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\hlsl\\mod.rs","byte_start":85545,"byte_end":85554,"line_start":4,"line_end":4,"column_start":1,"column_end":10}},{"value":"/ - 5.1","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\hlsl\\mod.rs","byte_start":85555,"byte_end":85564,"line_start":5,"line_end":5,"column_start":1,"column_end":10}},{"value":"/ - 6.0","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\hlsl\\mod.rs","byte_start":85565,"byte_end":85574,"line_start":6,"line_end":6,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\hlsl\\mod.rs","byte_start":85575,"byte_end":85578,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ All matrix construction/deconstruction is row based in HLSL. This means that when","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\hlsl\\mod.rs","byte_start":85579,"byte_end":85664,"line_start":8,"line_end":8,"column_start":1,"column_end":86}},{"value":"/ we construct a matrix from column vectors, our matrix will be implicitly transposed.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\hlsl\\mod.rs","byte_start":85665,"byte_end":85753,"line_start":9,"line_end":9,"column_start":1,"column_end":89}},{"value":"/ The inverse transposition happens when we call `[0]` to get the zeroth column vector.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\hlsl\\mod.rs","byte_start":85754,"byte_end":85843,"line_start":10,"line_end":10,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\hlsl\\mod.rs","byte_start":85844,"byte_end":85847,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ Because all of our matrices are implicitly transposed, we flip arguments to `mul`. `mat * vec`","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\hlsl\\mod.rs","byte_start":85848,"byte_end":85946,"line_start":12,"line_end":12,"column_start":1,"column_end":99}},{"value":"/ becomes `vec * mat`, etc. This acts as the inverse transpose making the results identical.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\hlsl\\mod.rs","byte_start":85947,"byte_end":86041,"line_start":13,"line_end":13,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\hlsl\\mod.rs","byte_start":86042,"byte_end":86045,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ The only time we don't get this implicit transposition is when reading matrices from Uniforms/Push Constants.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\hlsl\\mod.rs","byte_start":86046,"byte_end":86159,"line_start":15,"line_end":15,"column_start":1,"column_end":114}},{"value":"/ To deal with this, we add `row_major` to all declarations of matrices in Uniforms/Push Constants.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\hlsl\\mod.rs","byte_start":86160,"byte_end":86261,"line_start":16,"line_end":16,"column_start":1,"column_end":102}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\hlsl\\mod.rs","byte_start":86262,"byte_end":86265,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Finally because all of our matrices are transposed, if you use `mat3x4`, it'll become `float4x3` in HLSL.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\hlsl\\mod.rs","byte_start":86266,"byte_end":86375,"line_start":18,"line_end":18,"column_start":1,"column_end":110}}]},{"kind":"Method","id":{"krate":0,"index":390},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\hlsl\\writer.rs","byte_start":138055,"byte_end":138058,"line_start":76,"line_end":76,"column_start":12,"column_end":15},"name":"new","qualname":"<super::Writer>::new","value":"pub fn new(W, &'a Options) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":392},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\hlsl\\writer.rs","byte_start":138752,"byte_end":138757,"line_start":98,"line_end":98,"column_start":12,"column_end":17},"name":"write","qualname":"<super::Writer>::write","value":"pub fn write(&mut Self, &Module, &valid::ModuleInfo)\n-> Result<super::ReflectionInfo, Error>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2853},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\hlsl\\mod.rs","byte_start":86702,"byte_end":86712,"line_start":34,"line_end":34,"column_start":12,"column_end":22},"name":"BindTarget","qualname":"::back::hlsl::BindTarget","value":"BindTarget { space, register }","parent":null,"children":[{"krate":0,"index":2854},{"krate":0,"index":2855}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2854},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\hlsl\\mod.rs","byte_start":86723,"byte_end":86728,"line_start":35,"line_end":35,"column_start":9,"column_end":14},"name":"space","qualname":"::back::hlsl::BindTarget::space","value":"u8","parent":{"krate":0,"index":2853},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2855},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\hlsl\\mod.rs","byte_start":86742,"byte_end":86750,"line_start":36,"line_end":36,"column_start":9,"column_end":17},"name":"register","qualname":"::back::hlsl::BindTarget::register","value":"u32","parent":{"krate":0,"index":2853},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":457},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\hlsl\\mod.rs","byte_start":86838,"byte_end":86848,"line_start":40,"line_end":40,"column_start":10,"column_end":20},"name":"BindingMap","qualname":"::back::hlsl::BindingMap","value":"std::collections::BTreeMap<crate::ResourceBinding, BindTarget>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2873},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\hlsl\\mod.rs","byte_start":87212,"byte_end":87216,"line_start":48,"line_end":48,"column_start":5,"column_end":9},"name":"V5_0","qualname":"::back::hlsl::ShaderModel::V5_0","value":"ShaderModel::V5_0","parent":{"krate":0,"index":2872},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2875},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\hlsl\\mod.rs","byte_start":87222,"byte_end":87226,"line_start":49,"line_end":49,"column_start":5,"column_end":9},"name":"V5_1","qualname":"::back::hlsl::ShaderModel::V5_1","value":"ShaderModel::V5_1","parent":{"krate":0,"index":2872},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2877},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\hlsl\\mod.rs","byte_start":87232,"byte_end":87236,"line_start":50,"line_end":50,"column_start":5,"column_end":9},"name":"V6_0","qualname":"::back::hlsl::ShaderModel::V6_0","value":"ShaderModel::V6_0","parent":{"krate":0,"index":2872},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2872},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\hlsl\\mod.rs","byte_start":87194,"byte_end":87205,"line_start":47,"line_end":47,"column_start":10,"column_end":21},"name":"ShaderModel","qualname":"::back::hlsl::ShaderModel","value":"pub enum ShaderModel { V5_0, V5_1, V6_0, }","parent":null,"children":[{"krate":0,"index":2873},{"krate":0,"index":2875},{"krate":0,"index":2877}],"decl_id":null,"docs":" A HLSL shader model version.\n","sig":null,"attributes":[{"value":"/ A HLSL shader model version.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\hlsl\\mod.rs","byte_start":86916,"byte_end":86948,"line_start":42,"line_end":42,"column_start":1,"column_end":33}},{"value":"allow(non_snake_case, non_camel_case_types)","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\hlsl\\mod.rs","byte_start":86949,"byte_end":86995,"line_start":43,"line_end":43,"column_start":1,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":459},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\hlsl\\mod.rs","byte_start":87271,"byte_end":87277,"line_start":54,"line_end":54,"column_start":12,"column_end":18},"name":"to_str","qualname":"<ShaderModel>::to_str","value":"pub fn to_str(Self) -> &'static str","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":461},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\hlsl\\mod.rs","byte_start":87478,"byte_end":87489,"line_start":64,"line_end":64,"column_start":12,"column_end":23},"name":"to_hlsl_str","qualname":"<crate::ShaderStage>::to_hlsl_str","value":"pub fn to_hlsl_str(Self) -> &'static str","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2907},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\hlsl\\mod.rs","byte_start":88242,"byte_end":88256,"line_start":92,"line_end":92,"column_start":5,"column_end":19},"name":"MissingBinding","qualname":"::back::hlsl::EntryPointError::MissingBinding","value":"EntryPointError::MissingBinding(crate::ResourceBinding)","parent":{"krate":0,"index":2895},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"mapping of {0:?} is missing\")","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\hlsl\\mod.rs","byte_start":88198,"byte_end":88237,"line_start":91,"line_end":91,"column_start":5,"column_end":44}}]},{"kind":"Enum","id":{"krate":0,"index":2895},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\hlsl\\mod.rs","byte_start":88176,"byte_end":88191,"line_start":90,"line_end":90,"column_start":10,"column_end":25},"name":"EntryPointError","qualname":"::back::hlsl::EntryPointError","value":"pub enum EntryPointError { MissingBinding(crate::ResourceBinding), }","parent":null,"children":[{"krate":0,"index":2907}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2910},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\hlsl\\mod.rs","byte_start":88544,"byte_end":88551,"line_start":99,"line_end":99,"column_start":12,"column_end":19},"name":"Options","qualname":"::back::hlsl::Options","value":"Options { shader_model, binding_map, fake_missing_bindings, special_constants_binding }","parent":null,"children":[{"krate":0,"index":2911},{"krate":0,"index":2912},{"krate":0,"index":2913},{"krate":0,"index":2914}],"decl_id":null,"docs":" Structure that contains the configuration used in the [`Writer`](Writer)\n","sig":null,"attributes":[{"value":"/ Structure that contains the configuration used in the [`Writer`](Writer)","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\hlsl\\mod.rs","byte_start":88285,"byte_end":88361,"line_start":95,"line_end":95,"column_start":1,"column_end":77}}]},{"kind":"Field","id":{"krate":0,"index":2911},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\hlsl\\mod.rs","byte_start":88603,"byte_end":88615,"line_start":101,"line_end":101,"column_start":9,"column_end":21},"name":"shader_model","qualname":"::back::hlsl::Options::shader_model","value":"back::hlsl::ShaderModel","parent":{"krate":0,"index":2910},"children":[],"decl_id":null,"docs":" The hlsl shader model to be used\n","sig":null,"attributes":[{"value":"/ The hlsl shader model to be used","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\hlsl\\mod.rs","byte_start":88558,"byte_end":88594,"line_start":100,"line_end":100,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":2912},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\hlsl\\mod.rs","byte_start":88697,"byte_end":88708,"line_start":103,"line_end":103,"column_start":9,"column_end":20},"name":"binding_map","qualname":"::back::hlsl::Options::binding_map","value":"std::collections::BTreeMap<ResourceBinding, back::hlsl::BindTarget>","parent":{"krate":0,"index":2910},"children":[],"decl_id":null,"docs":" Map of resources association to binding locations.\n","sig":null,"attributes":[{"value":"/ Map of resources association to binding locations.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\hlsl\\mod.rs","byte_start":88634,"byte_end":88688,"line_start":102,"line_end":102,"column_start":5,"column_end":59}}]},{"kind":"Field","id":{"krate":0,"index":2913},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\hlsl\\mod.rs","byte_start":88798,"byte_end":88819,"line_start":105,"line_end":105,"column_start":9,"column_end":30},"name":"fake_missing_bindings","qualname":"::back::hlsl::Options::fake_missing_bindings","value":"bool","parent":{"krate":0,"index":2910},"children":[],"decl_id":null,"docs":" Don't panic on missing bindings, instead generate any HLSL.\n","sig":null,"attributes":[{"value":"/ Don't panic on missing bindings, instead generate any HLSL.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\hlsl\\mod.rs","byte_start":88726,"byte_end":88789,"line_start":104,"line_end":104,"column_start":5,"column_end":68}}]},{"kind":"Field","id":{"krate":0,"index":2914},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\hlsl\\mod.rs","byte_start":88980,"byte_end":89005,"line_start":108,"line_end":108,"column_start":9,"column_end":34},"name":"special_constants_binding","qualname":"::back::hlsl::Options::special_constants_binding","value":"std::option::Option<back::hlsl::BindTarget>","parent":{"krate":0,"index":2910},"children":[],"decl_id":null,"docs":" Add special constants to `SV_VertexIndex` and `SV_InstanceIndex`,\n to make them work like in Vulkan/Metal, with help of the host.\n","sig":null,"attributes":[{"value":"/ Add special constants to `SV_VertexIndex` and `SV_InstanceIndex`,","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\hlsl\\mod.rs","byte_start":88831,"byte_end":88900,"line_start":106,"line_end":106,"column_start":5,"column_end":74}},{"value":"/ to make them work like in Vulkan/Metal, with help of the host.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\hlsl\\mod.rs","byte_start":88905,"byte_end":88971,"line_start":107,"line_end":107,"column_start":5,"column_end":71}}]},{"kind":"Struct","id":{"krate":0,"index":2929},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\hlsl\\mod.rs","byte_start":89905,"byte_end":89919,"line_start":140,"line_end":140,"column_start":12,"column_end":26},"name":"ReflectionInfo","qualname":"::back::hlsl::ReflectionInfo","value":"ReflectionInfo { entry_point_names }","parent":null,"children":[{"krate":0,"index":2930}],"decl_id":null,"docs":" Structure that contains a reflection info\n","sig":null,"attributes":[{"value":"/ Structure that contains a reflection info","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\hlsl\\mod.rs","byte_start":89829,"byte_end":89874,"line_start":138,"line_end":138,"column_start":1,"column_end":46}}]},{"kind":"Field","id":{"krate":0,"index":2930},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\hlsl\\mod.rs","byte_start":90219,"byte_end":90236,"line_start":146,"line_end":146,"column_start":9,"column_end":26},"name":"entry_point_names","qualname":"::back::hlsl::ReflectionInfo::entry_point_names","value":"std::vec::Vec<std::result::Result<std::string::String, back::hlsl::EntryPointError>>","parent":{"krate":0,"index":2929},"children":[],"decl_id":null,"docs":" Mapping of the entry point names. Each item in the array\n corresponds to an entry point index. The real entry point name may be different if one of the\n reserved words are used.","sig":null,"attributes":[{"value":"/ Mapping of the entry point names. Each item in the array","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\hlsl\\mod.rs","byte_start":89926,"byte_end":89986,"line_start":141,"line_end":141,"column_start":5,"column_end":65}},{"value":"/ corresponds to an entry point index. The real entry point name may be different if one of the","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\hlsl\\mod.rs","byte_start":89991,"byte_end":90088,"line_start":142,"line_end":142,"column_start":5,"column_end":102}},{"value":"/ reserved words are used.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\hlsl\\mod.rs","byte_start":90093,"byte_end":90121,"line_start":143,"line_end":143,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\hlsl\\mod.rs","byte_start":90126,"byte_end":90129,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/Note: Some entry points may fail translation because of missing bindings.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\hlsl\\mod.rs","byte_start":90134,"byte_end":90210,"line_start":145,"line_end":145,"column_start":5,"column_end":81}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2952},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\hlsl\\mod.rs","byte_start":90350,"byte_end":90357,"line_start":152,"line_end":152,"column_start":5,"column_end":12},"name":"IoError","qualname":"::back::hlsl::Error::IoError","value":"Error::IoError(FmtError)","parent":{"krate":0,"index":2933},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(transparent)","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\hlsl\\mod.rs","byte_start":90324,"byte_end":90345,"line_start":151,"line_end":151,"column_start":5,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2955},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\hlsl\\mod.rs","byte_start":90459,"byte_end":90476,"line_start":154,"line_end":154,"column_start":5,"column_end":22},"name":"UnsupportedScalar","qualname":"::back::hlsl::Error::UnsupportedScalar","value":"Error::UnsupportedScalar(crate::ScalarKind, crate::Bytes)","parent":{"krate":0,"index":2933},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"A scalar with an unsupported width was requested: {0:?} {1:?}\")","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\hlsl\\mod.rs","byte_start":90381,"byte_end":90454,"line_start":153,"line_end":153,"column_start":5,"column_end":78}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2959},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\hlsl\\mod.rs","byte_start":90535,"byte_end":90548,"line_start":156,"line_end":156,"column_start":5,"column_end":18},"name":"Unimplemented","qualname":"::back::hlsl::Error::Unimplemented","value":"Error::Unimplemented(String)","parent":{"krate":0,"index":2933},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"{0}\")","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\hlsl\\mod.rs","byte_start":90515,"byte_end":90530,"line_start":155,"line_end":155,"column_start":5,"column_end":20}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2962},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\hlsl\\mod.rs","byte_start":90626,"byte_end":90632,"line_start":158,"line_end":158,"column_start":5,"column_end":11},"name":"Custom","qualname":"::back::hlsl::Error::Custom","value":"Error::Custom(String)","parent":{"krate":0,"index":2933},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"{0}\")","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\hlsl\\mod.rs","byte_start":90606,"byte_end":90621,"line_start":157,"line_end":157,"column_start":5,"column_end":20}}]},{"kind":"Enum","id":{"krate":0,"index":2933},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\hlsl\\mod.rs","byte_start":90312,"byte_end":90317,"line_start":150,"line_end":150,"column_start":10,"column_end":15},"name":"Error","qualname":"::back::hlsl::Error","value":"pub enum Error {\n    IoError(FmtError),\n    UnsupportedScalar(crate::ScalarKind, crate::Bytes),\n    Unimplemented(String),\n    Custom(String),\n}","parent":null,"children":[{"krate":0,"index":2952},{"krate":0,"index":2955},{"krate":0,"index":2959},{"krate":0,"index":2962}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":471},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\hlsl\\mod.rs","byte_start":91045,"byte_end":91051,"line_start":176,"line_end":176,"column_start":12,"column_end":18},"name":"Writer","qualname":"::back::hlsl::Writer","value":"Writer {  }","parent":null,"children":[{"krate":0,"index":474},{"krate":0,"index":475},{"krate":0,"index":476},{"krate":0,"index":477},{"krate":0,"index":478},{"krate":0,"index":479},{"krate":0,"index":480},{"krate":0,"index":481}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":482},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\spv\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"spv","qualname":"::back::spv","value":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\spv\\mod.rs","parent":null,"children":[{"krate":0,"index":483},{"krate":0,"index":590},{"krate":0,"index":610},{"krate":0,"index":712},{"krate":0,"index":778},{"krate":0,"index":885},{"krate":0,"index":930},{"krate":0,"index":945},{"krate":0,"index":980},{"krate":0,"index":1161},{"krate":0,"index":1164},{"krate":0,"index":1165},{"krate":0,"index":1168},{"krate":0,"index":1171},{"krate":0,"index":1174},{"krate":0,"index":1177},{"krate":0,"index":1180},{"krate":0,"index":2972},{"krate":0,"index":2978},{"krate":0,"index":2980},{"krate":0,"index":2992},{"krate":0,"index":1183},{"krate":0,"index":1189},{"krate":0,"index":2994},{"krate":0,"index":2995},{"krate":0,"index":2997},{"krate":0,"index":2999},{"krate":0,"index":3004},{"krate":0,"index":3013},{"krate":0,"index":3034},{"krate":0,"index":3037},{"krate":0,"index":1190},{"krate":0,"index":1192},{"krate":0,"index":1195},{"krate":0,"index":1198},{"krate":0,"index":1200},{"krate":0,"index":1203},{"krate":0,"index":1207},{"krate":0,"index":3039},{"krate":0,"index":3045},{"krate":0,"index":1210},{"krate":0,"index":3047},{"krate":0,"index":3052},{"krate":0,"index":3054},{"krate":0,"index":3055},{"krate":0,"index":3058},{"krate":0,"index":3061},{"krate":0,"index":3062},{"krate":0,"index":3064},{"krate":0,"index":3065},{"krate":0,"index":3067},{"krate":0,"index":3069},{"krate":0,"index":3070},{"krate":0,"index":3071},{"krate":0,"index":3074},{"krate":0,"index":3075},{"krate":0,"index":3077},{"krate":0,"index":3079},{"krate":0,"index":3081},{"krate":0,"index":3083},{"krate":0,"index":3086},{"krate":0,"index":3094},{"krate":0,"index":3096},{"krate":0,"index":3098},{"krate":0,"index":3100},{"krate":0,"index":3102},{"krate":0,"index":3126},{"krate":0,"index":3129},{"krate":0,"index":3131},{"krate":0,"index":3134},{"krate":0,"index":3136},{"krate":0,"index":3139},{"krate":0,"index":3141},{"krate":0,"index":3144},{"krate":0,"index":3146},{"krate":0,"index":3149},{"krate":0,"index":3152},{"krate":0,"index":1213},{"krate":0,"index":3169},{"krate":0,"index":3189},{"krate":0,"index":3191},{"krate":0,"index":3192},{"krate":0,"index":3195},{"krate":0,"index":3198},{"krate":0,"index":3199},{"krate":0,"index":3201},{"krate":0,"index":3202},{"krate":0,"index":3204},{"krate":0,"index":3211},{"krate":0,"index":3213},{"krate":0,"index":3214},{"krate":0,"index":3217},{"krate":0,"index":3220},{"krate":0,"index":3221},{"krate":0,"index":3223},{"krate":0,"index":3224},{"krate":0,"index":1216},{"krate":0,"index":3226},{"krate":0,"index":3229},{"krate":0,"index":3231},{"krate":0,"index":3232},{"krate":0,"index":3235},{"krate":0,"index":3237},{"krate":0,"index":3240},{"krate":0,"index":3241},{"krate":0,"index":1218},{"krate":0,"index":3243},{"krate":0,"index":3250},{"krate":0,"index":3252},{"krate":0,"index":3254},{"krate":0,"index":1219},{"krate":0,"index":1221},{"krate":0,"index":1224},{"krate":0,"index":1226},{"krate":0,"index":1228},{"krate":0,"index":1231},{"krate":0,"index":1235},{"krate":0,"index":1238},{"krate":0,"index":1247},{"krate":0,"index":3256},{"krate":0,"index":3259},{"krate":0,"index":3261},{"krate":0,"index":3262},{"krate":0,"index":1253},{"krate":0,"index":3264},{"krate":0,"index":3266},{"krate":0,"index":3267},{"krate":0,"index":3268},{"krate":0,"index":3271},{"krate":0,"index":3272},{"krate":0,"index":3274},{"krate":0,"index":3276},{"krate":0,"index":3278},{"krate":0,"index":3280},{"krate":0,"index":3283},{"krate":0,"index":3292},{"krate":0,"index":3294},{"krate":0,"index":3296},{"krate":0,"index":3298},{"krate":0,"index":3300},{"krate":0,"index":3325},{"krate":0,"index":3328},{"krate":0,"index":3330},{"krate":0,"index":3333},{"krate":0,"index":3335},{"krate":0,"index":3338},{"krate":0,"index":3340},{"krate":0,"index":3343},{"krate":0,"index":3345},{"krate":0,"index":3348},{"krate":0,"index":3351},{"krate":0,"index":3371},{"krate":0,"index":3376},{"krate":0,"index":3378},{"krate":0,"index":1273},{"krate":0,"index":3380},{"krate":0,"index":3383},{"krate":0,"index":3385},{"krate":0,"index":3387},{"krate":0,"index":3388},{"krate":0,"index":3391},{"krate":0,"index":3392},{"krate":0,"index":3394},{"krate":0,"index":1275}],"decl_id":null,"docs":" Standard Portable Intermediate Representation (SPIR-V) backend\n!\n","sig":null,"attributes":[{"value":"cfg(feature = \"spv-out\")","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\mod.rs","byte_start":73419,"byte_end":73446,"line_start":11,"line_end":11,"column_start":1,"column_end":28}},{"value":"* Standard Portable Intermediate Representation (SPIR-V) backend\n!*/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\spv\\mod.rs","byte_start":223550,"byte_end":223620,"line_start":1,"line_end":2,"column_start":1,"column_end":4}}]},{"kind":"Type","id":{"krate":0,"index":651},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\spv\\image.rs","byte_start":319755,"byte_end":319761,"line_start":55,"line_end":55,"column_start":10,"column_end":16},"name":"Output","qualname":"::back::spv::image::Access::Output","value":"type Output: MergeTuple + Copy + Clone;","parent":{"krate":0,"index":650},"children":[],"decl_id":null,"docs":" The Rust type that represents SPIR-V values and types for this access.","sig":null,"attributes":[{"value":"/ The Rust type that represents SPIR-V values and types for this access.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\spv\\image.rs","byte_start":319388,"byte_end":319462,"line_start":47,"line_end":47,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\spv\\image.rs","byte_start":319467,"byte_end":319470,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ For operations like loads, this is `Word`. For operations like stores,","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\spv\\image.rs","byte_start":319475,"byte_end":319549,"line_start":49,"line_end":49,"column_start":5,"column_end":79}},{"value":"/ this is `()`.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\spv\\image.rs","byte_start":319554,"byte_end":319571,"line_start":50,"line_end":50,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\spv\\image.rs","byte_start":319576,"byte_end":319579,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ For `ReadZeroSkipWrite`, this will be the type of the selection","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\spv\\image.rs","byte_start":319584,"byte_end":319651,"line_start":52,"line_end":52,"column_start":5,"column_end":72}},{"value":"/ construct that performs the bounds checks, so it must implement","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\spv\\image.rs","byte_start":319656,"byte_end":319723,"line_start":53,"line_end":53,"column_start":5,"column_end":72}},{"value":"/ `MergeTuple`.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\spv\\image.rs","byte_start":319728,"byte_end":319745,"line_start":54,"line_end":54,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1093},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\spv\\writer.rs","byte_start":426389,"byte_end":426392,"line_start":42,"line_end":42,"column_start":12,"column_end":15},"name":"new","qualname":"<Writer>::new","value":"pub fn new(&Options) -> Result<Self, Error>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1158},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\spv\\writer.rs","byte_start":482328,"byte_end":482333,"line_start":1452,"line_end":1452,"column_start":12,"column_end":17},"name":"write","qualname":"<Writer>::write","value":"pub fn write(&mut Self, &crate::Module, &ModuleInfo, Option<&PipelineOptions>,\n             &mut Vec<Word>) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1160},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\spv\\writer.rs","byte_start":483312,"byte_end":483333,"line_start":1483,"line_end":1483,"column_start":12,"column_end":33},"name":"get_capabilities_used","qualname":"<Writer>::get_capabilities_used","value":"pub fn get_capabilities_used(&Self) -> &crate::FastHashSet<spirv::Capability>","parent":null,"children":[],"decl_id":null,"docs":" Return the set of capabilities the last module written used.\n","sig":null,"attributes":[{"value":"/ Return the set of capabilities the last module written used.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\spv\\writer.rs","byte_start":483236,"byte_end":483300,"line_start":1482,"line_end":1482,"column_start":5,"column_end":69}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3015},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\spv\\mod.rs","byte_start":224725,"byte_end":224743,"line_start":59,"line_end":59,"column_start":5,"column_end":23},"name":"EntryPointNotFound","qualname":"::back::spv::Error::EntryPointNotFound","value":"Error::EntryPointNotFound","parent":{"krate":0,"index":2994},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"The requested entry point couldn't be found\")","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\spv\\mod.rs","byte_start":224665,"byte_end":224720,"line_start":58,"line_end":58,"column_start":5,"column_end":60}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3017},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\spv\\mod.rs","byte_start":224803,"byte_end":224821,"line_start":61,"line_end":61,"column_start":5,"column_end":23},"name":"UnsupportedVersion","qualname":"::back::spv::Error::UnsupportedVersion","value":"Error::UnsupportedVersion(u8, u8)","parent":{"krate":0,"index":2994},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"target SPIRV-{0}.{1} is not supported\")","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\spv\\mod.rs","byte_start":224749,"byte_end":224798,"line_start":60,"line_end":60,"column_start":5,"column_end":54}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3021},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\spv\\mod.rs","byte_start":224933,"byte_end":224952,"line_start":63,"line_end":63,"column_start":5,"column_end":24},"name":"MissingCapabilities","qualname":"::back::spv::Error::MissingCapabilities","value":"Error::MissingCapabilities(&'static str, Vec<Capability>)","parent":{"krate":0,"index":2994},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"using {0} requires at least one of the capabilities {1:?}, but none are available\")","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\spv\\mod.rs","byte_start":224835,"byte_end":224928,"line_start":62,"line_end":62,"column_start":5,"column_end":98}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3025},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\spv\\mod.rs","byte_start":225023,"byte_end":225044,"line_start":65,"line_end":65,"column_start":5,"column_end":26},"name":"FeatureNotImplemented","qualname":"::back::spv::Error::FeatureNotImplemented","value":"Error::FeatureNotImplemented(&'static str)","parent":{"krate":0,"index":2994},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"unimplemented {0}\")","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\spv\\mod.rs","byte_start":224989,"byte_end":225018,"line_start":64,"line_end":64,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3028},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\spv\\mod.rs","byte_start":225118,"byte_end":225128,"line_start":67,"line_end":67,"column_start":5,"column_end":15},"name":"Validation","qualname":"::back::spv::Error::Validation","value":"Error::Validation(&'static str)","parent":{"krate":0,"index":2994},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"module is not validated properly: {0}\")","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\spv\\mod.rs","byte_start":225064,"byte_end":225113,"line_start":66,"line_end":66,"column_start":5,"column_end":54}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3031},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\spv\\mod.rs","byte_start":225174,"byte_end":225178,"line_start":69,"line_end":69,"column_start":5,"column_end":9},"name":"Proc","qualname":"::back::spv::Error::Proc","value":"Error::Proc(crate::proc::ProcError)","parent":{"krate":0,"index":2994},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(transparent)","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\spv\\mod.rs","byte_start":225148,"byte_end":225169,"line_start":68,"line_end":68,"column_start":5,"column_end":26}}]},{"kind":"Enum","id":{"krate":0,"index":2994},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\spv\\mod.rs","byte_start":224653,"byte_end":224658,"line_start":57,"line_end":57,"column_start":10,"column_end":15},"name":"Error","qualname":"::back::spv::Error","value":"pub enum Error {\n    EntryPointNotFound,\n    UnsupportedVersion(u8, u8),\n    MissingCapabilities(&'static str, Vec<Capability>),\n    FeatureNotImplemented(&'static str),\n    Validation(&'static str),\n    Proc(crate::proc::ProcError),\n}","parent":null,"children":[{"krate":0,"index":3015},{"krate":0,"index":3017},{"krate":0,"index":3021},{"krate":0,"index":3025},{"krate":0,"index":3028},{"krate":0,"index":3031}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3067},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\spv\\mod.rs","byte_start":228114,"byte_end":228128,"line_start":176,"line_end":176,"column_start":16,"column_end":30},"name":"ImageTypeFlags","qualname":"::back::spv::ImageTypeFlags","value":"ImageTypeFlags {  }","parent":null,"children":[{"krate":0,"index":3068}],"decl_id":null,"docs":" Flags corresponding to the boolean(-ish) parameters to OpTypeImage.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3103},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\spv\\mod.rs","byte_start":228149,"byte_end":228154,"line_start":177,"line_end":177,"column_start":15,"column_end":20},"name":"DEPTH","qualname":"::back::spv::ImageTypeFlags::DEPTH","value":"Self","parent":{"krate":0,"index":3102},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3104},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\spv\\mod.rs","byte_start":228176,"byte_end":228183,"line_start":178,"line_end":178,"column_start":15,"column_end":22},"name":"ARRAYED","qualname":"::back::spv::ImageTypeFlags::ARRAYED","value":"Self","parent":{"krate":0,"index":3102},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3105},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\spv\\mod.rs","byte_start":228205,"byte_end":228217,"line_start":179,"line_end":179,"column_start":15,"column_end":27},"name":"MULTISAMPLED","qualname":"::back::spv::ImageTypeFlags::MULTISAMPLED","value":"Self","parent":{"krate":0,"index":3102},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3106},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\spv\\mod.rs","byte_start":228239,"byte_end":228246,"line_start":180,"line_end":180,"column_start":15,"column_end":22},"name":"SAMPLED","qualname":"::back::spv::ImageTypeFlags::SAMPLED","value":"Self","parent":{"krate":0,"index":3102},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1253},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\spv\\mod.rs","byte_start":239377,"byte_end":239383,"line_start":520,"line_end":520,"column_start":12,"column_end":18},"name":"Writer","qualname":"::back::spv::Writer","value":"Writer {  }","parent":null,"children":[{"krate":0,"index":1254},{"krate":0,"index":1255},{"krate":0,"index":1256},{"krate":0,"index":1257},{"krate":0,"index":1258},{"krate":0,"index":1259},{"krate":0,"index":1260},{"krate":0,"index":1261},{"krate":0,"index":1262},{"krate":0,"index":1263},{"krate":0,"index":1264},{"krate":0,"index":1265},{"krate":0,"index":1266},{"krate":0,"index":1267},{"krate":0,"index":1268},{"krate":0,"index":1269},{"krate":0,"index":1270},{"krate":0,"index":1271},{"krate":0,"index":1272}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3264},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\spv\\mod.rs","byte_start":240808,"byte_end":240819,"line_start":559,"line_end":559,"column_start":16,"column_end":27},"name":"WriterFlags","qualname":"::back::spv::WriterFlags","value":"WriterFlags {  }","parent":null,"children":[{"krate":0,"index":3265}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3301},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\spv\\mod.rs","byte_start":240890,"byte_end":240895,"line_start":561,"line_end":561,"column_start":15,"column_end":20},"name":"DEBUG","qualname":"::back::spv::WriterFlags::DEBUG","value":"Self","parent":{"krate":0,"index":3300},"children":[],"decl_id":null,"docs":" Include debug labels for everything.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3302},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\spv\\mod.rs","byte_start":240978,"byte_end":241001,"line_start":563,"line_end":563,"column_start":15,"column_end":38},"name":"ADJUST_COORDINATE_SPACE","qualname":"::back::spv::WriterFlags::ADJUST_COORDINATE_SPACE","value":"Self","parent":{"krate":0,"index":3300},"children":[],"decl_id":null,"docs":" Flip Y coordinate of `BuiltIn::Position` output.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3303},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\spv\\mod.rs","byte_start":241182,"byte_end":241196,"line_start":567,"line_end":567,"column_start":15,"column_end":29},"name":"LABEL_VARYINGS","qualname":"::back::spv::WriterFlags::LABEL_VARYINGS","value":"Self","parent":{"krate":0,"index":3300},"children":[],"decl_id":null,"docs":" Emit `OpName` for input/output locations.\n Contrary to spec, some drivers treat it as semantic, not allowing\n any conflicts.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3304},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\spv\\mod.rs","byte_start":241350,"byte_end":241366,"line_start":570,"line_end":570,"column_start":15,"column_end":31},"name":"FORCE_POINT_SIZE","qualname":"::back::spv::WriterFlags::FORCE_POINT_SIZE","value":"Self","parent":{"krate":0,"index":3300},"children":[],"decl_id":null,"docs":" Emit `PointSize` output builtin to vertex shaders, which is\n required for drawing with `PointList` topology.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3305},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\spv\\mod.rs","byte_start":241451,"byte_end":241467,"line_start":572,"line_end":572,"column_start":15,"column_end":31},"name":"CLAMP_FRAG_DEPTH","qualname":"::back::spv::WriterFlags::CLAMP_FRAG_DEPTH","value":"Self","parent":{"krate":0,"index":3300},"children":[],"decl_id":null,"docs":" Clamp `BuiltIn::FragDepth` output between 0 and 1.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3371},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\spv\\mod.rs","byte_start":241520,"byte_end":241527,"line_start":577,"line_end":577,"column_start":12,"column_end":19},"name":"Options","qualname":"::back::spv::Options","value":"Options { lang_version, flags, capabilities, bounds_check_policies }","parent":null,"children":[{"krate":0,"index":3372},{"krate":0,"index":3373},{"krate":0,"index":3374},{"krate":0,"index":3375}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3372},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\spv\\mod.rs","byte_start":241591,"byte_end":241603,"line_start":579,"line_end":579,"column_start":9,"column_end":21},"name":"lang_version","qualname":"::back::spv::Options::lang_version","value":"(u8, u8)","parent":{"krate":0,"index":3371},"children":[],"decl_id":null,"docs":" (Major, Minor) target version of the SPIR-V.\n","sig":null,"attributes":[{"value":"/ (Major, Minor) target version of the SPIR-V.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\spv\\mod.rs","byte_start":241534,"byte_end":241582,"line_start":578,"line_end":578,"column_start":5,"column_end":53}}]},{"kind":"Field","id":{"krate":0,"index":3373},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\spv\\mod.rs","byte_start":241668,"byte_end":241673,"line_start":582,"line_end":582,"column_start":9,"column_end":14},"name":"flags","qualname":"::back::spv::Options::flags","value":"back::spv::WriterFlags","parent":{"krate":0,"index":3371},"children":[],"decl_id":null,"docs":" Configuration flags for the writer.\n","sig":null,"attributes":[{"value":"/ Configuration flags for the writer.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\spv\\mod.rs","byte_start":241620,"byte_end":241659,"line_start":581,"line_end":581,"column_start":5,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":3374},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\spv\\mod.rs","byte_start":241914,"byte_end":241926,"line_start":588,"line_end":588,"column_start":9,"column_end":21},"name":"capabilities","qualname":"::back::spv::Options::capabilities","value":"std::option::Option<std::collections::HashSet<spirv::Capability, std::hash::BuildHasherDefault<fxhash::FxHasher>>>","parent":{"krate":0,"index":3371},"children":[],"decl_id":null,"docs":" If given, the set of capabilities modules are allowed to use. Code that\n requires capabilities beyond these is rejected with an error.","sig":null,"attributes":[{"value":"/ If given, the set of capabilities modules are allowed to use. Code that","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\spv\\mod.rs","byte_start":241693,"byte_end":241768,"line_start":584,"line_end":584,"column_start":5,"column_end":80}},{"value":"/ requires capabilities beyond these is rejected with an error.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\spv\\mod.rs","byte_start":241773,"byte_end":241838,"line_start":585,"line_end":585,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\spv\\mod.rs","byte_start":241843,"byte_end":241846,"line_start":586,"line_end":586,"column_start":5,"column_end":8}},{"value":"/ If this is `None`, all capabilities are permitted.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\spv\\mod.rs","byte_start":241851,"byte_end":241905,"line_start":587,"line_end":587,"column_start":5,"column_end":59}}]},{"kind":"Field","id":{"krate":0,"index":3375},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\spv\\mod.rs","byte_start":242094,"byte_end":242115,"line_start":592,"line_end":592,"column_start":9,"column_end":30},"name":"bounds_check_policies","qualname":"::back::spv::Options::bounds_check_policies","value":"back::BoundsCheckPolicies","parent":{"krate":0,"index":3371},"children":[],"decl_id":null,"docs":" How should generate code handle array, vector, matrix, or image texel\n indices that are out of range?\n","sig":null,"attributes":[{"value":"/ How should generate code handle array, vector, matrix, or image texel","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\spv\\mod.rs","byte_start":241973,"byte_end":242046,"line_start":590,"line_end":590,"column_start":5,"column_end":78}},{"value":"/ indices that are out of range?","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\spv\\mod.rs","byte_start":242051,"byte_end":242085,"line_start":591,"line_end":591,"column_start":5,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":3380},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\spv\\mod.rs","byte_start":242874,"byte_end":242889,"line_start":616,"line_end":616,"column_start":12,"column_end":27},"name":"PipelineOptions","qualname":"::back::spv::PipelineOptions","value":"PipelineOptions { shader_stage, entry_point }","parent":null,"children":[{"krate":0,"index":3381},{"krate":0,"index":3382}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3381},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\spv\\mod.rs","byte_start":242937,"byte_end":242949,"line_start":618,"line_end":618,"column_start":9,"column_end":21},"name":"shader_stage","qualname":"::back::spv::PipelineOptions::shader_stage","value":"ShaderStage","parent":{"krate":0,"index":3380},"children":[],"decl_id":null,"docs":" The stage of the entry point\n","sig":null,"attributes":[{"value":"/ The stage of the entry point","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\spv\\mod.rs","byte_start":242896,"byte_end":242928,"line_start":617,"line_end":617,"column_start":5,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":3382},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\spv\\mod.rs","byte_start":243166,"byte_end":243177,"line_start":623,"line_end":623,"column_start":9,"column_end":20},"name":"entry_point","qualname":"::back::spv::PipelineOptions::entry_point","value":"std::string::String","parent":{"krate":0,"index":3380},"children":[],"decl_id":null,"docs":" The name of the entry point","sig":null,"attributes":[{"value":"/ The name of the entry point","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\spv\\mod.rs","byte_start":242975,"byte_end":243006,"line_start":619,"line_end":619,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\spv\\mod.rs","byte_start":243011,"byte_end":243014,"line_start":620,"line_end":620,"column_start":5,"column_end":8}},{"value":"/ If no entry point that matches is found a error will be thrown while creating a new instance","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\spv\\mod.rs","byte_start":243019,"byte_end":243115,"line_start":621,"line_end":621,"column_start":5,"column_end":101}},{"value":"/ of [`Writer`](struct.Writer.html)","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\spv\\mod.rs","byte_start":243120,"byte_end":243157,"line_start":622,"line_end":622,"column_start":5,"column_end":42}}]},{"kind":"Function","id":{"krate":0,"index":1275},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\spv\\mod.rs","byte_start":243197,"byte_end":243206,"line_start":626,"line_end":626,"column_start":8,"column_end":17},"name":"write_vec","qualname":"::back::spv::write_vec","value":"pub fn write_vec(&crate::Module, &crate::valid::ModuleInfo, &Options,\n                 Option<&PipelineOptions>) -> Result<Vec<u32>, Error>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3404},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\mod.rs","byte_start":79417,"byte_end":79425,"line_start":163,"line_end":163,"column_start":5,"column_end":13},"name":"Restrict","qualname":"::back::BoundsCheckPolicy::Restrict","value":"BoundsCheckPolicy::Restrict","parent":{"krate":0,"index":3403},"children":[],"decl_id":null,"docs":" Replace out-of-bounds indexes with some arbitrary in-bounds index.","sig":null,"attributes":[{"value":"/ Replace out-of-bounds indexes with some arbitrary in-bounds index.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\mod.rs","byte_start":79053,"byte_end":79123,"line_start":157,"line_end":157,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\mod.rs","byte_start":79128,"byte_end":79131,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ (This does not necessarily mean clamping. For example, interpreting the","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\mod.rs","byte_start":79136,"byte_end":79211,"line_start":159,"line_end":159,"column_start":5,"column_end":80}},{"value":"/ index as unsigned and taking the minimum with the largest valid index","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\mod.rs","byte_start":79216,"byte_end":79289,"line_start":160,"line_end":160,"column_start":5,"column_end":78}},{"value":"/ would also be a valid implementation. That would map negative indices to","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\mod.rs","byte_start":79294,"byte_end":79370,"line_start":161,"line_end":161,"column_start":5,"column_end":81}},{"value":"/ the last element, not the first.)","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\mod.rs","byte_start":79375,"byte_end":79412,"line_start":162,"line_end":162,"column_start":5,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3406},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\mod.rs","byte_start":79501,"byte_end":79518,"line_start":166,"line_end":166,"column_start":5,"column_end":22},"name":"ReadZeroSkipWrite","qualname":"::back::BoundsCheckPolicy::ReadZeroSkipWrite","value":"BoundsCheckPolicy::ReadZeroSkipWrite","parent":{"krate":0,"index":3403},"children":[],"decl_id":null,"docs":" Out-of-bounds  reads return zero, and writes have no effect.\n","sig":null,"attributes":[{"value":"/ Out-of-bounds  reads return zero, and writes have no effect.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\mod.rs","byte_start":79432,"byte_end":79496,"line_start":165,"line_end":165,"column_start":5,"column_end":69}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3408},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\mod.rs","byte_start":79738,"byte_end":79747,"line_start":171,"line_end":171,"column_start":5,"column_end":14},"name":"Unchecked","qualname":"::back::BoundsCheckPolicy::Unchecked","value":"BoundsCheckPolicy::Unchecked","parent":{"krate":0,"index":3403},"children":[],"decl_id":null,"docs":" Naga adds no checks to indexing operations. Generate the fastest code\n possible. This is the default for Naga, as a translator, but consumers\n should consider defaulting to a safer behavior.\n","sig":null,"attributes":[{"value":"/ Naga adds no checks to indexing operations. Generate the fastest code","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\mod.rs","byte_start":79525,"byte_end":79598,"line_start":168,"line_end":168,"column_start":5,"column_end":78}},{"value":"/ possible. This is the default for Naga, as a translator, but consumers","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\mod.rs","byte_start":79603,"byte_end":79677,"line_start":169,"line_end":169,"column_start":5,"column_end":79}},{"value":"/ should consider defaulting to a safer behavior.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\mod.rs","byte_start":79682,"byte_end":79733,"line_start":170,"line_end":170,"column_start":5,"column_end":56}}]},{"kind":"Enum","id":{"krate":0,"index":3403},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\mod.rs","byte_start":79029,"byte_end":79046,"line_start":156,"line_end":156,"column_start":10,"column_end":27},"name":"BoundsCheckPolicy","qualname":"::back::BoundsCheckPolicy","value":"pub enum BoundsCheckPolicy { Restrict, ReadZeroSkipWrite, Unchecked, }","parent":null,"children":[{"krate":0,"index":3404},{"krate":0,"index":3406},{"krate":0,"index":3408}],"decl_id":null,"docs":" How should code generated by Naga do bounds checks?","sig":null,"attributes":[{"value":"/ How should code generated by Naga do bounds checks?","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\mod.rs","byte_start":77519,"byte_end":77574,"line_start":126,"line_end":126,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\mod.rs","byte_start":77575,"byte_end":77578,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/ When a vector, matrix, or array index is out of bounds—either negative, or","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\mod.rs","byte_start":77579,"byte_end":77659,"line_start":128,"line_end":128,"column_start":1,"column_end":79}},{"value":"/ greater than or equal to the number of elements in the type—WGSL requires","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\mod.rs","byte_start":77660,"byte_end":77739,"line_start":129,"line_end":129,"column_start":1,"column_end":78}},{"value":"/ that some other index of the implementation's choice that is in bounds is","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\mod.rs","byte_start":77740,"byte_end":77817,"line_start":130,"line_end":130,"column_start":1,"column_end":78}},{"value":"/ used instead. (There are no types with zero elements.)","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\mod.rs","byte_start":77818,"byte_end":77876,"line_start":131,"line_end":131,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\mod.rs","byte_start":77877,"byte_end":77880,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ Similarly, when out-of-bounds coordinates, array indices, or sample indices","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\mod.rs","byte_start":77881,"byte_end":77960,"line_start":133,"line_end":133,"column_start":1,"column_end":80}},{"value":"/ are presented to the WGSL `textureLoad` and `textureStore` operations, the","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\mod.rs","byte_start":77961,"byte_end":78039,"line_start":134,"line_end":134,"column_start":1,"column_end":79}},{"value":"/ operation is redirected to do something safe.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\mod.rs","byte_start":78040,"byte_end":78089,"line_start":135,"line_end":135,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\mod.rs","byte_start":78090,"byte_end":78093,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/ Different users of Naga will prefer different defaults:","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\mod.rs","byte_start":78094,"byte_end":78153,"line_start":137,"line_end":137,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\mod.rs","byte_start":78154,"byte_end":78157,"line_start":138,"line_end":138,"column_start":1,"column_end":4}},{"value":"/ -   When used as part of a WebGPU implementation, the WGSL specification","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\mod.rs","byte_start":78158,"byte_end":78234,"line_start":139,"line_end":139,"column_start":1,"column_end":77}},{"value":"/     requires the `Restrict` behavior for array, vector, and matrix accesses,","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\mod.rs","byte_start":78235,"byte_end":78315,"line_start":140,"line_end":140,"column_start":1,"column_end":81}},{"value":"/     and either the `Restrict` or `ReadZeroSkipWrite` behaviors for texture","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\mod.rs","byte_start":78316,"byte_end":78394,"line_start":141,"line_end":141,"column_start":1,"column_end":79}},{"value":"/     accesses.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\mod.rs","byte_start":78395,"byte_end":78412,"line_start":142,"line_end":142,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\mod.rs","byte_start":78413,"byte_end":78416,"line_start":143,"line_end":143,"column_start":1,"column_end":4}},{"value":"/ -   When used by the `wgpu` crate for native development, `wgpu` selects","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\mod.rs","byte_start":78417,"byte_end":78493,"line_start":144,"line_end":144,"column_start":1,"column_end":77}},{"value":"/     `ReadZeroSkipWrite` as its default.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\mod.rs","byte_start":78494,"byte_end":78537,"line_start":145,"line_end":145,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\mod.rs","byte_start":78538,"byte_end":78541,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"/ -   Naga's own default is `Unchanged`, so that shader translations","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\mod.rs","byte_start":78542,"byte_end":78612,"line_start":147,"line_end":147,"column_start":1,"column_end":71}},{"value":"/     are as faithful to the original as possible.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\mod.rs","byte_start":78613,"byte_end":78665,"line_start":148,"line_end":148,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\mod.rs","byte_start":78666,"byte_end":78669,"line_start":149,"line_end":149,"column_start":1,"column_end":4}},{"value":"/ Sometimes the underlying hardware and drivers can perform bounds checks","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\mod.rs","byte_start":78670,"byte_end":78745,"line_start":150,"line_end":150,"column_start":1,"column_end":76}},{"value":"/ themselves, in a way that performs better than the checks Naga would inject.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\mod.rs","byte_start":78746,"byte_end":78826,"line_start":151,"line_end":151,"column_start":1,"column_end":81}},{"value":"/ If you're using native checks like this, then having Naga inject its own","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\mod.rs","byte_start":78827,"byte_end":78903,"line_start":152,"line_end":152,"column_start":1,"column_end":77}},{"value":"/ checks as well would be redundant, and the `Unchecked` policy is","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\mod.rs","byte_start":78904,"byte_end":78972,"line_start":153,"line_end":153,"column_start":1,"column_end":69}},{"value":"/ appropriate.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\mod.rs","byte_start":78973,"byte_end":78989,"line_start":154,"line_end":154,"column_start":1,"column_end":17}}]},{"kind":"Struct","id":{"krate":0,"index":3415},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\mod.rs","byte_start":79943,"byte_end":79962,"line_start":178,"line_end":178,"column_start":12,"column_end":31},"name":"BoundsCheckPolicies","qualname":"::back::BoundsCheckPolicies","value":"BoundsCheckPolicies { index, buffer, image }","parent":null,"children":[{"krate":0,"index":3416},{"krate":0,"index":3417},{"krate":0,"index":3418}],"decl_id":null,"docs":" Policies for injecting bounds checks during code generation.","sig":null,"attributes":[{"value":"/ Policies for injecting bounds checks during code generation.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\mod.rs","byte_start":79791,"byte_end":79855,"line_start":175,"line_end":175,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\mod.rs","byte_start":79856,"byte_end":79859,"line_start":176,"line_end":176,"column_start":1,"column_end":4}},{"value":"/ For SPIR-V generation, see [`spv::Options::bounds_check_policies`].","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\mod.rs","byte_start":79860,"byte_end":79931,"line_start":177,"line_end":177,"column_start":1,"column_end":72}}]},{"kind":"Field","id":{"krate":0,"index":3416},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\mod.rs","byte_start":80082,"byte_end":80087,"line_start":181,"line_end":181,"column_start":9,"column_end":14},"name":"index","qualname":"::back::BoundsCheckPolicies::index","value":"back::BoundsCheckPolicy","parent":{"krate":0,"index":3415},"children":[],"decl_id":null,"docs":" How should the generated code handle array, vector, or matrix indices\n that are out of range?\n","sig":null,"attributes":[{"value":"/ How should the generated code handle array, vector, or matrix indices","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\mod.rs","byte_start":79969,"byte_end":80042,"line_start":179,"line_end":179,"column_start":5,"column_end":78}},{"value":"/ that are out of range?","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\mod.rs","byte_start":80047,"byte_end":80073,"line_start":180,"line_end":180,"column_start":5,"column_end":31}}]},{"kind":"Field","id":{"krate":0,"index":3417},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\mod.rs","byte_start":82031,"byte_end":82037,"line_start":216,"line_end":216,"column_start":9,"column_end":15},"name":"buffer","qualname":"::back::BoundsCheckPolicies::buffer","value":"back::BoundsCheckPolicy","parent":{"krate":0,"index":3415},"children":[],"decl_id":null,"docs":" How should the generated code handle array, vector, or matrix indices\n that are out of range, when those values live in a [`GlobalVariable`] in\n the [`Storage`] or [`Uniform`] storage classes?","sig":null,"attributes":[{"value":"/ How should the generated code handle array, vector, or matrix indices","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\mod.rs","byte_start":80113,"byte_end":80186,"line_start":183,"line_end":183,"column_start":5,"column_end":78}},{"value":"/ that are out of range, when those values live in a [`GlobalVariable`] in","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\mod.rs","byte_start":80191,"byte_end":80267,"line_start":184,"line_end":184,"column_start":5,"column_end":81}},{"value":"/ the [`Storage`] or [`Uniform`] storage classes?","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\mod.rs","byte_start":80272,"byte_end":80323,"line_start":185,"line_end":185,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\mod.rs","byte_start":80328,"byte_end":80331,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ Some graphics hardware provides \"robust buffer access\", a feature that","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\mod.rs","byte_start":80336,"byte_end":80410,"line_start":187,"line_end":187,"column_start":5,"column_end":79}},{"value":"/ ensures that using a pointer cannot access memory outside the 'buffer'","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\mod.rs","byte_start":80415,"byte_end":80489,"line_start":188,"line_end":188,"column_start":5,"column_end":79}},{"value":"/ that it was derived from. In Naga terms, this means that the hardware","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\mod.rs","byte_start":80494,"byte_end":80567,"line_start":189,"line_end":189,"column_start":5,"column_end":78}},{"value":"/ ensures that pointers computed by applying [`Access`] and","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\mod.rs","byte_start":80572,"byte_end":80633,"line_start":190,"line_end":190,"column_start":5,"column_end":66}},{"value":"/ [`AccessIndex`] expressions to a [`GlobalVariable`] whose [`class`] is","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\mod.rs","byte_start":80638,"byte_end":80712,"line_start":191,"line_end":191,"column_start":5,"column_end":79}},{"value":"/ [`Storage`] or [`Uniform`] will never read or write memory outside that","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\mod.rs","byte_start":80717,"byte_end":80792,"line_start":192,"line_end":192,"column_start":5,"column_end":80}},{"value":"/ global variable.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\mod.rs","byte_start":80797,"byte_end":80817,"line_start":193,"line_end":193,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\mod.rs","byte_start":80822,"byte_end":80825,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ When hardware offers such a feature, it is probably undesirable to have","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\mod.rs","byte_start":80830,"byte_end":80905,"line_start":195,"line_end":195,"column_start":5,"column_end":80}},{"value":"/ Naga inject bounds checking code for such accesses, since the hardware","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\mod.rs","byte_start":80910,"byte_end":80984,"line_start":196,"line_end":196,"column_start":5,"column_end":79}},{"value":"/ can probably provide the same protection more efficiently. However,","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\mod.rs","byte_start":80989,"byte_end":81060,"line_start":197,"line_end":197,"column_start":5,"column_end":76}},{"value":"/ bounds checks are still needed on accesses to indexable values that do","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\mod.rs","byte_start":81065,"byte_end":81139,"line_start":198,"line_end":198,"column_start":5,"column_end":79}},{"value":"/ not live in buffers, like local variables.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\mod.rs","byte_start":81144,"byte_end":81190,"line_start":199,"line_end":199,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\mod.rs","byte_start":81195,"byte_end":81198,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ So, this option provides a separate policy that applies only to accesses","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\mod.rs","byte_start":81203,"byte_end":81279,"line_start":201,"line_end":201,"column_start":5,"column_end":81}},{"value":"/ to storage and uniform globals. When depending on hardware bounds","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\mod.rs","byte_start":81284,"byte_end":81353,"line_start":202,"line_end":202,"column_start":5,"column_end":74}},{"value":"/ checking, this policy can be `Unchecked` to avoid unnecessary overhead.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\mod.rs","byte_start":81358,"byte_end":81433,"line_start":203,"line_end":203,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\mod.rs","byte_start":81438,"byte_end":81441,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ When special hardware support is not available, this should probably be","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\mod.rs","byte_start":81446,"byte_end":81521,"line_start":205,"line_end":205,"column_start":5,"column_end":80}},{"value":"/ the same as `index_bounds_check_policy`.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\mod.rs","byte_start":81526,"byte_end":81570,"line_start":206,"line_end":206,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\mod.rs","byte_start":81575,"byte_end":81578,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ [`GlobalVariable`]: crate::GlobalVariable","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\mod.rs","byte_start":81583,"byte_end":81628,"line_start":208,"line_end":208,"column_start":5,"column_end":50}},{"value":"/ [`class`]: crate::GlobalVariable::class","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\mod.rs","byte_start":81633,"byte_end":81676,"line_start":209,"line_end":209,"column_start":5,"column_end":48}},{"value":"/ [`Restrict`]: crate::back::BoundsCheckPolicy::Restrict","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\mod.rs","byte_start":81681,"byte_end":81739,"line_start":210,"line_end":210,"column_start":5,"column_end":63}},{"value":"/ [`ReadZeroSkipWrite`]: crate::back::BoundsCheckPolicy::ReadZeroSkipWrite","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\mod.rs","byte_start":81744,"byte_end":81820,"line_start":211,"line_end":211,"column_start":5,"column_end":81}},{"value":"/ [`Access`]: crate::Expression::Access","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\mod.rs","byte_start":81825,"byte_end":81866,"line_start":212,"line_end":212,"column_start":5,"column_end":46}},{"value":"/ [`AccessIndex`]: crate::Expression::AccessIndex","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\mod.rs","byte_start":81871,"byte_end":81922,"line_start":213,"line_end":213,"column_start":5,"column_end":56}},{"value":"/ [`Storage`]: crate::StorageClass::Storage","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\mod.rs","byte_start":81927,"byte_end":81972,"line_start":214,"line_end":214,"column_start":5,"column_end":50}},{"value":"/ [`Uniform`]: crate::StorageClass::Uniform","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\mod.rs","byte_start":81977,"byte_end":82022,"line_start":215,"line_end":215,"column_start":5,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":3418},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\mod.rs","byte_start":82501,"byte_end":82506,"line_start":227,"line_end":227,"column_start":9,"column_end":14},"name":"image","qualname":"::back::BoundsCheckPolicies::image","value":"back::BoundsCheckPolicy","parent":{"krate":0,"index":3415},"children":[],"decl_id":null,"docs":" How should the generated code handle image texel references that are out\n of range?","sig":null,"attributes":[{"value":"/ How should the generated code handle image texel references that are out","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\mod.rs","byte_start":82063,"byte_end":82139,"line_start":218,"line_end":218,"column_start":5,"column_end":81}},{"value":"/ of range?","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\mod.rs","byte_start":82144,"byte_end":82157,"line_start":219,"line_end":219,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\mod.rs","byte_start":82162,"byte_end":82165,"line_start":220,"line_end":220,"column_start":5,"column_end":8}},{"value":"/ This controls the behavior of [`ImageLoad`] expressions and","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\mod.rs","byte_start":82170,"byte_end":82233,"line_start":221,"line_end":221,"column_start":5,"column_end":68}},{"value":"/ [`ImageStore`] statements when a coordinate, texture array index, level","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\mod.rs","byte_start":82238,"byte_end":82313,"line_start":222,"line_end":222,"column_start":5,"column_end":80}},{"value":"/ of detail, or multisampled sample number is out of range.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\mod.rs","byte_start":82318,"byte_end":82379,"line_start":223,"line_end":223,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\mod.rs","byte_start":82384,"byte_end":82387,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ [`ImageLoad`]: crate::Expression::ImageLoad","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\mod.rs","byte_start":82392,"byte_end":82439,"line_start":225,"line_end":225,"column_start":5,"column_end":52}},{"value":"/ [`ImageStore`]: crate::Statement::ImageStore","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\mod.rs","byte_start":82444,"byte_end":82492,"line_start":226,"line_end":226,"column_start":5,"column_end":53}}]},{"kind":"Struct","id":{"krate":0,"index":3426},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\block.rs","byte_start":483980,"byte_end":483985,"line_start":8,"line_end":8,"column_start":12,"column_end":17},"name":"Block","qualname":"::block::Block","value":"Block {  }","parent":null,"children":[{"krate":0,"index":3427}],"decl_id":null,"docs":" A code block is a vector of statements, with maybe a vector of spans.\n","sig":null,"attributes":[{"value":"/ A code block is a vector of statements, with maybe a vector of spans.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\block.rs","byte_start":483746,"byte_end":483819,"line_start":4,"line_end":4,"column_start":1,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":1332},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\block.rs","byte_start":484148,"byte_end":484151,"line_start":16,"line_end":16,"column_start":12,"column_end":15},"name":"new","qualname":"<Block>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1333},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\block.rs","byte_start":484309,"byte_end":484317,"line_start":24,"line_end":24,"column_start":12,"column_end":20},"name":"from_vec","qualname":"<Block>::from_vec","value":"pub fn from_vec(Vec<Statement>) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1334},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\block.rs","byte_start":484617,"byte_end":484630,"line_start":36,"line_end":36,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<Block>::with_capacity","value":"pub fn with_capacity(usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1335},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\block.rs","byte_start":484870,"byte_end":484874,"line_start":45,"line_end":45,"column_start":12,"column_end":16},"name":"push","qualname":"<Block>::push","value":"pub fn push(&mut Self, Statement, Span)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(unused_variables)","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\block.rs","byte_start":484832,"byte_end":484858,"line_start":44,"line_end":44,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":1336},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\block.rs","byte_start":485031,"byte_end":485037,"line_start":51,"line_end":51,"column_start":12,"column_end":18},"name":"extend","qualname":"<Block>::extend","value":"pub fn extend(&mut Self, Option<(Statement, Span)>)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1337},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\block.rs","byte_start":485187,"byte_end":485199,"line_start":57,"line_end":57,"column_start":12,"column_end":24},"name":"extend_block","qualname":"<Block>::extend_block","value":"pub fn extend_block(&mut Self, Self)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1338},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\block.rs","byte_start":485363,"byte_end":485369,"line_start":63,"line_end":63,"column_start":12,"column_end":18},"name":"append","qualname":"<Block>::append","value":"pub fn append(&mut Self, &mut Self)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1339},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\block.rs","byte_start":485548,"byte_end":485552,"line_start":69,"line_end":69,"column_start":12,"column_end":16},"name":"cull","qualname":"<Block>::cull","value":"pub fn cull<R: RangeBounds<usize> + Clone>(&mut Self, R)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1341},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\block.rs","byte_start":485735,"byte_end":485741,"line_start":75,"line_end":75,"column_start":12,"column_end":18},"name":"splice","qualname":"<Block>::splice","value":"pub fn splice<R: RangeBounds<usize> + Clone>(&mut Self, R, Self)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1343},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\block.rs","byte_start":486005,"byte_end":486018,"line_start":82,"line_end":82,"column_start":12,"column_end":25},"name":"span_iter_mut","qualname":"<Block>::span_iter_mut","value":"pub fn span_iter_mut(&mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1346},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\block.rs","byte_start":486345,"byte_end":486353,"line_start":91,"line_end":91,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<Block>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1347},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\block.rs","byte_start":486418,"byte_end":486421,"line_start":95,"line_end":95,"column_start":12,"column_end":15},"name":"len","qualname":"<Block>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1360},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"front","qualname":"::front","value":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\mod.rs","parent":null,"children":[{"krate":0,"index":1361},{"krate":0,"index":1364},{"krate":0,"index":1920},{"krate":0,"index":1921},{"krate":0,"index":1922},{"krate":0,"index":1925},{"krate":0,"index":1928},{"krate":0,"index":1931},{"krate":0,"index":1932},{"krate":0,"index":1935},{"krate":0,"index":1938},{"krate":0,"index":1941},{"krate":0,"index":3813},{"krate":0,"index":3815},{"krate":0,"index":3817},{"krate":0,"index":1944},{"krate":0,"index":1947},{"krate":0,"index":3819},{"krate":0,"index":3821},{"krate":0,"index":3823},{"krate":0,"index":1949},{"krate":0,"index":1958},{"krate":0,"index":1961}],"decl_id":null,"docs":" Parsers which load shaders into memory.\n","sig":null,"attributes":[{"value":"/ Parsers which load shaders into memory.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\mod.rs","byte_start":487298,"byte_end":487341,"line_start":1,"line_end":1,"column_start":1,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":1363},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\interpolator.rs","byte_start":493560,"byte_end":493587,"line_start":39,"line_end":39,"column_start":12,"column_end":39},"name":"apply_default_interpolation","qualname":"<crate::Binding>::apply_default_interpolation","value":"pub fn apply_default_interpolation(&mut Self, &crate::TypeInner)","parent":null,"children":[],"decl_id":null,"docs":" Apply the usual default interpolation for `ty` to `binding`.","sig":null,"attributes":[{"value":"/ Apply the usual default interpolation for `ty` to `binding`.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\interpolator.rs","byte_start":491633,"byte_end":491697,"line_start":4,"line_end":4,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\interpolator.rs","byte_start":491702,"byte_end":491705,"line_start":5,"line_end":5,"column_start":5,"column_end":8}},{"value":"/ This function is a utility front ends may use to satisfy the Naga IR's","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\interpolator.rs","byte_start":491710,"byte_end":491784,"line_start":6,"line_end":6,"column_start":5,"column_end":79}},{"value":"/ requirement, meant to ensure that input languages' policies have been","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\interpolator.rs","byte_start":491789,"byte_end":491862,"line_start":7,"line_end":7,"column_start":5,"column_end":78}},{"value":"/ applied appropriately, that all I/O `Binding`s from the vertex shader to the","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\interpolator.rs","byte_start":491867,"byte_end":491947,"line_start":8,"line_end":8,"column_start":5,"column_end":85}},{"value":"/ fragment shader must have non-`None` `interpolation` values.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\interpolator.rs","byte_start":491952,"byte_end":492016,"line_start":9,"line_end":9,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\interpolator.rs","byte_start":492021,"byte_end":492024,"line_start":10,"line_end":10,"column_start":5,"column_end":8}},{"value":"/ All the shader languages Naga supports have similar rules:","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\interpolator.rs","byte_start":492029,"byte_end":492091,"line_start":11,"line_end":11,"column_start":5,"column_end":67}},{"value":"/ perspective-correct, center-sampled interpolation is the default for any","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\interpolator.rs","byte_start":492096,"byte_end":492172,"line_start":12,"line_end":12,"column_start":5,"column_end":81}},{"value":"/ binding that can vary, and everything else either defaults to flat, or","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\interpolator.rs","byte_start":492177,"byte_end":492251,"line_start":13,"line_end":13,"column_start":5,"column_end":79}},{"value":"/ requires an explicit flat qualifier/attribute/what-have-you.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\interpolator.rs","byte_start":492256,"byte_end":492320,"line_start":14,"line_end":14,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\interpolator.rs","byte_start":492325,"byte_end":492328,"line_start":15,"line_end":15,"column_start":5,"column_end":8}},{"value":"/ If `binding` is not a [`Location`] binding, or if its [`interpolation`] is","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\interpolator.rs","byte_start":492333,"byte_end":492411,"line_start":16,"line_end":16,"column_start":5,"column_end":83}},{"value":"/ already set, then make no changes. Otherwise, set `binding`'s interpolation","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\interpolator.rs","byte_start":492416,"byte_end":492495,"line_start":17,"line_end":17,"column_start":5,"column_end":84}},{"value":"/ and sampling to reasonable defaults depending on `ty`, the type of the value","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\interpolator.rs","byte_start":492500,"byte_end":492580,"line_start":18,"line_end":18,"column_start":5,"column_end":85}},{"value":"/ being interpolated:","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\interpolator.rs","byte_start":492585,"byte_end":492608,"line_start":19,"line_end":19,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\interpolator.rs","byte_start":492613,"byte_end":492616,"line_start":20,"line_end":20,"column_start":5,"column_end":8}},{"value":"/ - If `ty` is a floating-point scalar, vector, or matrix type, then","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\interpolator.rs","byte_start":492621,"byte_end":492691,"line_start":21,"line_end":21,"column_start":5,"column_end":75}},{"value":"/   default to [`Perspective`] interpolation and [`Center`] sampling.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\interpolator.rs","byte_start":492696,"byte_end":492767,"line_start":22,"line_end":22,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\interpolator.rs","byte_start":492772,"byte_end":492775,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ - If `ty` is an integral scalar or vector, then default to [`Flat`]","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\interpolator.rs","byte_start":492780,"byte_end":492851,"line_start":24,"line_end":24,"column_start":5,"column_end":76}},{"value":"/   interpolation, which has no associated sampling.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\interpolator.rs","byte_start":492856,"byte_end":492910,"line_start":25,"line_end":25,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\interpolator.rs","byte_start":492915,"byte_end":492918,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ - For any other types, make no change. Such types are not permitted as","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\interpolator.rs","byte_start":492923,"byte_end":492997,"line_start":27,"line_end":27,"column_start":5,"column_end":79}},{"value":"/   user-defined IO values, and will probably be flagged by the verifier","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\interpolator.rs","byte_start":493002,"byte_end":493076,"line_start":28,"line_end":28,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\interpolator.rs","byte_start":493081,"byte_end":493084,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ When structs appear in input or output types, each member ought to have its","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\interpolator.rs","byte_start":493089,"byte_end":493168,"line_start":30,"line_end":30,"column_start":5,"column_end":84}},{"value":"/ own [`Binding`], so structs are simply covered by the third case.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\interpolator.rs","byte_start":493173,"byte_end":493242,"line_start":31,"line_end":31,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\interpolator.rs","byte_start":493247,"byte_end":493250,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ [`Binding`]: crate::Binding","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\interpolator.rs","byte_start":493255,"byte_end":493286,"line_start":33,"line_end":33,"column_start":5,"column_end":36}},{"value":"/ [`Location`]: crate::Binding::Location","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\interpolator.rs","byte_start":493291,"byte_end":493333,"line_start":34,"line_end":34,"column_start":5,"column_end":47}},{"value":"/ [`interpolation`]: crate::Binding::Location::interpolation","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\interpolator.rs","byte_start":493338,"byte_end":493400,"line_start":35,"line_end":35,"column_start":5,"column_end":67}},{"value":"/ [`Perspective`]: crate::Interpolation::Perspective","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\interpolator.rs","byte_start":493405,"byte_end":493459,"line_start":36,"line_end":36,"column_start":5,"column_end":59}},{"value":"/ [`Flat`]: crate::Interpolation::Flat","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\interpolator.rs","byte_start":493464,"byte_end":493504,"line_start":37,"line_end":37,"column_start":5,"column_end":45}},{"value":"/ [`Center`]: crate::Sampling::Center","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\interpolator.rs","byte_start":493509,"byte_end":493548,"line_start":38,"line_end":38,"column_start":5,"column_end":44}}]},{"kind":"Mod","id":{"krate":0,"index":1364},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\wgsl\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"wgsl","qualname":"::front::wgsl","value":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\wgsl\\mod.rs","parent":null,"children":[{"krate":0,"index":1365},{"krate":0,"index":1393},{"krate":0,"index":1471},{"krate":0,"index":1530},{"krate":0,"index":1531},{"krate":0,"index":1532},{"krate":0,"index":1535},{"krate":0,"index":1538},{"krate":0,"index":1541},{"krate":0,"index":1542},{"krate":0,"index":1545},{"krate":0,"index":1548},{"krate":0,"index":1551},{"krate":0,"index":1554},{"krate":0,"index":1557},{"krate":0,"index":1560},{"krate":0,"index":1563},{"krate":0,"index":1566},{"krate":0,"index":1569},{"krate":0,"index":1572},{"krate":0,"index":1575},{"krate":0,"index":1576},{"krate":0,"index":1579},{"krate":0,"index":1580},{"krate":0,"index":1583},{"krate":0,"index":1586},{"krate":0,"index":1589},{"krate":0,"index":1592},{"krate":0,"index":1595},{"krate":0,"index":1596},{"krate":0,"index":1597},{"krate":0,"index":1600},{"krate":0,"index":1603},{"krate":0,"index":1604},{"krate":0,"index":1607},{"krate":0,"index":1610},{"krate":0,"index":1611},{"krate":0,"index":1614},{"krate":0,"index":1615},{"krate":0,"index":1618},{"krate":0,"index":1621},{"krate":0,"index":1624},{"krate":0,"index":1627},{"krate":0,"index":1630},{"krate":0,"index":1631},{"krate":0,"index":1634},{"krate":0,"index":1637},{"krate":0,"index":1638},{"krate":0,"index":1641},{"krate":0,"index":1644},{"krate":0,"index":1645},{"krate":0,"index":1648},{"krate":0,"index":1651},{"krate":0,"index":1654},{"krate":0,"index":1657},{"krate":0,"index":1660},{"krate":0,"index":1661},{"krate":0,"index":3469},{"krate":0,"index":3476},{"krate":0,"index":3477},{"krate":0,"index":3479},{"krate":0,"index":3481},{"krate":0,"index":3482},{"krate":0,"index":3484},{"krate":0,"index":3527},{"krate":0,"index":3529},{"krate":0,"index":3532},{"krate":0,"index":3535},{"krate":0,"index":3537},{"krate":0,"index":3541},{"krate":0,"index":3573},{"krate":0,"index":3575},{"krate":0,"index":3578},{"krate":0,"index":3581},{"krate":0,"index":3583},{"krate":0,"index":3587},{"krate":0,"index":3588},{"krate":0,"index":3590},{"krate":0,"index":3592},{"krate":0,"index":3597},{"krate":0,"index":3599},{"krate":0,"index":3608},{"krate":0,"index":3609},{"krate":0,"index":3611},{"krate":0,"index":3613},{"krate":0,"index":3618},{"krate":0,"index":3620},{"krate":0,"index":3622},{"krate":0,"index":3630},{"krate":0,"index":3747},{"krate":0,"index":3750},{"krate":0,"index":1663},{"krate":0,"index":1666},{"krate":0,"index":1671},{"krate":0,"index":1676},{"krate":0,"index":1677},{"krate":0,"index":1679},{"krate":0,"index":1683},{"krate":0,"index":1687},{"krate":0,"index":1701},{"krate":0,"index":1707},{"krate":0,"index":1710},{"krate":0,"index":1725},{"krate":0,"index":3753},{"krate":0,"index":3756},{"krate":0,"index":3758},{"krate":0,"index":3759},{"krate":0,"index":1738},{"krate":0,"index":1740},{"krate":0,"index":1749},{"krate":0,"index":3761},{"krate":0,"index":3763},{"krate":0,"index":3765},{"krate":0,"index":3790},{"krate":0,"index":3792},{"krate":0,"index":3794},{"krate":0,"index":3795},{"krate":0,"index":1759},{"krate":0,"index":3797},{"krate":0,"index":3802},{"krate":0,"index":1760},{"krate":0,"index":1765},{"krate":0,"index":3804},{"krate":0,"index":3808},{"krate":0,"index":3810},{"krate":0,"index":1772},{"krate":0,"index":1779},{"krate":0,"index":1781},{"krate":0,"index":1783},{"krate":0,"index":1787},{"krate":0,"index":1907},{"krate":0,"index":1908},{"krate":0,"index":1910},{"krate":0,"index":1913},{"krate":0,"index":1916}],"decl_id":null,"docs":" Front end for consuming [WebGPU Shading Language][wgsl].","sig":null,"attributes":[{"value":"cfg(feature = \"wgsl-in\")","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\mod.rs","byte_start":487444,"byte_end":487471,"line_start":9,"line_end":9,"column_start":1,"column_end":28}},{"value":"/ Front end for consuming [WebGPU Shading Language][wgsl].","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\wgsl\\mod.rs","byte_start":494334,"byte_end":494394,"line_start":1,"line_end":1,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\wgsl\\mod.rs","byte_start":494395,"byte_end":494398,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ [wgsl]: https://gpuweb.github.io/gpuweb/wgsl.html","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\wgsl\\mod.rs","byte_start":494399,"byte_end":494452,"line_start":3,"line_end":3,"column_start":1,"column_end":54}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3470},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\wgsl\\mod.rs","byte_start":495516,"byte_end":495520,"line_start":50,"line_end":50,"column_start":5,"column_end":9},"name":"Sint","qualname":"::front::wgsl::NumberType::Sint","value":"NumberType::Sint","parent":{"krate":0,"index":3469},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3472},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\wgsl\\mod.rs","byte_start":495526,"byte_end":495530,"line_start":51,"line_end":51,"column_start":5,"column_end":9},"name":"Uint","qualname":"::front::wgsl::NumberType::Uint","value":"NumberType::Uint","parent":{"krate":0,"index":3469},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3474},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\wgsl\\mod.rs","byte_start":495536,"byte_end":495541,"line_start":52,"line_end":52,"column_start":5,"column_end":10},"name":"Float","qualname":"::front::wgsl::NumberType::Float","value":"NumberType::Float","parent":{"krate":0,"index":3469},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3469},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\wgsl\\mod.rs","byte_start":495499,"byte_end":495509,"line_start":49,"line_end":49,"column_start":10,"column_end":20},"name":"NumberType","qualname":"::front::wgsl::NumberType","value":"pub enum NumberType { Sint, Uint, Float, }","parent":null,"children":[{"krate":0,"index":3470},{"krate":0,"index":3472},{"krate":0,"index":3474}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3486},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\wgsl\\mod.rs","byte_start":495612,"byte_end":495621,"line_start":57,"line_end":57,"column_start":5,"column_end":14},"name":"Separator","qualname":"::front::wgsl::Token::Separator","value":"Token::Separator(char)","parent":{"krate":0,"index":3484},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3489},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\wgsl\\mod.rs","byte_start":495633,"byte_end":495644,"line_start":58,"line_end":58,"column_start":5,"column_end":16},"name":"DoubleColon","qualname":"::front::wgsl::Token::DoubleColon","value":"Token::DoubleColon","parent":{"krate":0,"index":3484},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3491},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\wgsl\\mod.rs","byte_start":495650,"byte_end":495655,"line_start":59,"line_end":59,"column_start":5,"column_end":10},"name":"Paren","qualname":"::front::wgsl::Token::Paren","value":"Token::Paren(char)","parent":{"krate":0,"index":3484},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3494},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\wgsl\\mod.rs","byte_start":495667,"byte_end":495678,"line_start":60,"line_end":60,"column_start":5,"column_end":16},"name":"DoubleParen","qualname":"::front::wgsl::Token::DoubleParen","value":"Token::DoubleParen(char)","parent":{"krate":0,"index":3484},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3497},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\wgsl\\mod.rs","byte_start":495690,"byte_end":495696,"line_start":61,"line_end":61,"column_start":5,"column_end":11},"name":"Number","qualname":"::front::wgsl::Token::Number","value":"Token::Number { value, ty, width }","parent":{"krate":0,"index":3484},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3501},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\wgsl\\mod.rs","byte_start":495788,"byte_end":495794,"line_start":66,"line_end":66,"column_start":5,"column_end":11},"name":"String","qualname":"::front::wgsl::Token::String","value":"Token::String(&'a str)","parent":{"krate":0,"index":3484},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3504},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\wgsl\\mod.rs","byte_start":495809,"byte_end":495813,"line_start":67,"line_end":67,"column_start":5,"column_end":9},"name":"Word","qualname":"::front::wgsl::Token::Word","value":"Token::Word(&'a str)","parent":{"krate":0,"index":3484},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3507},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\wgsl\\mod.rs","byte_start":495828,"byte_end":495837,"line_start":68,"line_end":68,"column_start":5,"column_end":14},"name":"Operation","qualname":"::front::wgsl::Token::Operation","value":"Token::Operation(char)","parent":{"krate":0,"index":3484},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3510},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\wgsl\\mod.rs","byte_start":495849,"byte_end":495865,"line_start":69,"line_end":69,"column_start":5,"column_end":21},"name":"LogicalOperation","qualname":"::front::wgsl::Token::LogicalOperation","value":"Token::LogicalOperation(char)","parent":{"krate":0,"index":3484},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3513},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\wgsl\\mod.rs","byte_start":495877,"byte_end":495891,"line_start":70,"line_end":70,"column_start":5,"column_end":19},"name":"ShiftOperation","qualname":"::front::wgsl::Token::ShiftOperation","value":"Token::ShiftOperation(char)","parent":{"krate":0,"index":3484},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3516},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\wgsl\\mod.rs","byte_start":495903,"byte_end":495908,"line_start":71,"line_end":71,"column_start":5,"column_end":10},"name":"Arrow","qualname":"::front::wgsl::Token::Arrow","value":"Token::Arrow","parent":{"krate":0,"index":3484},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3518},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\wgsl\\mod.rs","byte_start":495914,"byte_end":495921,"line_start":72,"line_end":72,"column_start":5,"column_end":12},"name":"Unknown","qualname":"::front::wgsl::Token::Unknown","value":"Token::Unknown(char)","parent":{"krate":0,"index":3484},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3521},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\wgsl\\mod.rs","byte_start":495933,"byte_end":495951,"line_start":73,"line_end":73,"column_start":5,"column_end":23},"name":"UnterminatedString","qualname":"::front::wgsl::Token::UnterminatedString","value":"Token::UnterminatedString","parent":{"krate":0,"index":3484},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3523},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\wgsl\\mod.rs","byte_start":495957,"byte_end":495963,"line_start":74,"line_end":74,"column_start":5,"column_end":11},"name":"Trivia","qualname":"::front::wgsl::Token::Trivia","value":"Token::Trivia","parent":{"krate":0,"index":3484},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3525},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\wgsl\\mod.rs","byte_start":495969,"byte_end":495972,"line_start":75,"line_end":75,"column_start":5,"column_end":8},"name":"End","qualname":"::front::wgsl::Token::End","value":"Token::End","parent":{"krate":0,"index":3484},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3484},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\wgsl\\mod.rs","byte_start":495596,"byte_end":495601,"line_start":56,"line_end":56,"column_start":10,"column_end":15},"name":"Token","qualname":"::front::wgsl::Token","value":"pub enum Token<'a> {\n    Separator(char),\n    DoubleColon,\n    Paren(char),\n    DoubleParen(char),\n    Number {\n        value: &'a str,\n        ty: NumberType,\n        width: Option<Bytes>,\n    },\n    String(&'a str),\n    Word(&'a str),\n    Operation(char),\n    LogicalOperation(char),\n    ShiftOperation(char),\n    Arrow,\n    Unknown(char),\n    UnterminatedString,\n    Trivia,\n    End,\n}","parent":null,"children":[{"krate":0,"index":3486},{"krate":0,"index":3489},{"krate":0,"index":3491},{"krate":0,"index":3494},{"krate":0,"index":3497},{"krate":0,"index":3501},{"krate":0,"index":3504},{"krate":0,"index":3507},{"krate":0,"index":3510},{"krate":0,"index":3513},{"krate":0,"index":3516},{"krate":0,"index":3518},{"krate":0,"index":3521},{"krate":0,"index":3523},{"krate":0,"index":3525}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3543},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\wgsl\\mod.rs","byte_start":496051,"byte_end":496056,"line_start":80,"line_end":80,"column_start":5,"column_end":10},"name":"Token","qualname":"::front::wgsl::ExpectedToken::Token","value":"ExpectedToken::Token(Token)","parent":{"krate":0,"index":3541},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3546},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\wgsl\\mod.rs","byte_start":496073,"byte_end":496083,"line_start":81,"line_end":81,"column_start":5,"column_end":15},"name":"Identifier","qualname":"::front::wgsl::ExpectedToken::Identifier","value":"ExpectedToken::Identifier","parent":{"krate":0,"index":3541},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3548},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\wgsl\\mod.rs","byte_start":496089,"byte_end":496095,"line_start":82,"line_end":82,"column_start":5,"column_end":11},"name":"Number","qualname":"::front::wgsl::ExpectedToken::Number","value":"ExpectedToken::Number { ty, width }","parent":{"krate":0,"index":3541},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3551},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\wgsl\\mod.rs","byte_start":496171,"byte_end":496178,"line_start":86,"line_end":86,"column_start":5,"column_end":12},"name":"Integer","qualname":"::front::wgsl::ExpectedToken::Integer","value":"ExpectedToken::Integer","parent":{"krate":0,"index":3541},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3553},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\wgsl\\mod.rs","byte_start":496184,"byte_end":496192,"line_start":87,"line_end":87,"column_start":5,"column_end":13},"name":"Constant","qualname":"::front::wgsl::ExpectedToken::Constant","value":"ExpectedToken::Constant","parent":{"krate":0,"index":3541},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3555},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\wgsl\\mod.rs","byte_start":496263,"byte_end":496280,"line_start":89,"line_end":89,"column_start":5,"column_end":22},"name":"PrimaryExpression","qualname":"::front::wgsl::ExpectedToken::PrimaryExpression","value":"ExpectedToken::PrimaryExpression","parent":{"krate":0,"index":3541},"children":[],"decl_id":null,"docs":" Expected: constant, parenthesized expression, identifier\n","sig":null,"attributes":[{"value":"/ Expected: constant, parenthesized expression, identifier","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\wgsl\\mod.rs","byte_start":496198,"byte_end":496258,"line_start":88,"line_end":88,"column_start":5,"column_end":65}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3557},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\wgsl\\mod.rs","byte_start":496314,"byte_end":496332,"line_start":91,"line_end":91,"column_start":5,"column_end":23},"name":"AttributeSeparator","qualname":"::front::wgsl::ExpectedToken::AttributeSeparator","value":"ExpectedToken::AttributeSeparator","parent":{"krate":0,"index":3541},"children":[],"decl_id":null,"docs":" Expected: ']]', ','\n","sig":null,"attributes":[{"value":"/ Expected: ']]', ','","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\wgsl\\mod.rs","byte_start":496286,"byte_end":496309,"line_start":90,"line_end":90,"column_start":5,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3559},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\wgsl\\mod.rs","byte_start":496372,"byte_end":496381,"line_start":93,"line_end":93,"column_start":5,"column_end":14},"name":"FieldName","qualname":"::front::wgsl::ExpectedToken::FieldName","value":"ExpectedToken::FieldName","parent":{"krate":0,"index":3541},"children":[],"decl_id":null,"docs":" Expected: '}', identifier\n","sig":null,"attributes":[{"value":"/ Expected: '}', identifier","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\wgsl\\mod.rs","byte_start":496338,"byte_end":496367,"line_start":92,"line_end":92,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3561},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\wgsl\\mod.rs","byte_start":496430,"byte_end":496443,"line_start":95,"line_end":95,"column_start":5,"column_end":18},"name":"TypeAttribute","qualname":"::front::wgsl::ExpectedToken::TypeAttribute","value":"ExpectedToken::TypeAttribute","parent":{"krate":0,"index":3541},"children":[],"decl_id":null,"docs":" Expected: ']]', 'access', 'stride'\n","sig":null,"attributes":[{"value":"/ Expected: ']]', 'access', 'stride'","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\wgsl\\mod.rs","byte_start":496387,"byte_end":496425,"line_start":94,"line_end":94,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3563},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\wgsl\\mod.rs","byte_start":496482,"byte_end":496491,"line_start":97,"line_end":97,"column_start":5,"column_end":14},"name":"Statement","qualname":"::front::wgsl::ExpectedToken::Statement","value":"ExpectedToken::Statement","parent":{"krate":0,"index":3541},"children":[],"decl_id":null,"docs":" Expected: ';', '{', word\n","sig":null,"attributes":[{"value":"/ Expected: ';', '{', word","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\wgsl\\mod.rs","byte_start":496449,"byte_end":496477,"line_start":96,"line_end":96,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3565},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\wgsl\\mod.rs","byte_start":496538,"byte_end":496548,"line_start":99,"line_end":99,"column_start":5,"column_end":15},"name":"SwitchItem","qualname":"::front::wgsl::ExpectedToken::SwitchItem","value":"ExpectedToken::SwitchItem","parent":{"krate":0,"index":3541},"children":[],"decl_id":null,"docs":" Expected: 'case', 'default', '}'\n","sig":null,"attributes":[{"value":"/ Expected: 'case', 'default', '}'","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\wgsl\\mod.rs","byte_start":496497,"byte_end":496533,"line_start":98,"line_end":98,"column_start":5,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3567},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\wgsl\\mod.rs","byte_start":496581,"byte_end":496603,"line_start":101,"line_end":101,"column_start":5,"column_end":27},"name":"WorkgroupSizeSeparator","qualname":"::front::wgsl::ExpectedToken::WorkgroupSizeSeparator","value":"ExpectedToken::WorkgroupSizeSeparator","parent":{"krate":0,"index":3541},"children":[],"decl_id":null,"docs":" Expected: ',', ')'\n","sig":null,"attributes":[{"value":"/ Expected: ',', ')'","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\wgsl\\mod.rs","byte_start":496554,"byte_end":496576,"line_start":100,"line_end":100,"column_start":5,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3569},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\wgsl\\mod.rs","byte_start":496674,"byte_end":496684,"line_start":103,"line_end":103,"column_start":5,"column_end":15},"name":"GlobalItem","qualname":"::front::wgsl::ExpectedToken::GlobalItem","value":"ExpectedToken::GlobalItem","parent":{"krate":0,"index":3541},"children":[],"decl_id":null,"docs":" Expected: 'struct', 'let', 'var', 'type', ';', 'fn', eof\n","sig":null,"attributes":[{"value":"/ Expected: 'struct', 'let', 'var', 'type', ';', 'fn', eof","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\wgsl\\mod.rs","byte_start":496609,"byte_end":496669,"line_start":102,"line_end":102,"column_start":5,"column_end":65}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3571},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\wgsl\\mod.rs","byte_start":496730,"byte_end":496745,"line_start":105,"line_end":105,"column_start":5,"column_end":20},"name":"StructAttribute","qualname":"::front::wgsl::ExpectedToken::StructAttribute","value":"ExpectedToken::StructAttribute","parent":{"krate":0,"index":3541},"children":[],"decl_id":null,"docs":" Expected: ']]', 'size', 'align'\n","sig":null,"attributes":[{"value":"/ Expected: ']]', 'size', 'align'","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\wgsl\\mod.rs","byte_start":496690,"byte_end":496725,"line_start":104,"line_end":104,"column_start":5,"column_end":40}}]},{"kind":"Enum","id":{"krate":0,"index":3541},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\wgsl\\mod.rs","byte_start":496027,"byte_end":496040,"line_start":79,"line_end":79,"column_start":10,"column_end":23},"name":"ExpectedToken","qualname":"::front::wgsl::ExpectedToken","value":"pub enum ExpectedToken<'a> {\n    Token(Token),\n    Identifier,\n    Number {\n        ty: Option<NumberType>,\n        width: Option<Bytes>,\n    },\n    Integer,\n    Constant,\n    PrimaryExpression,\n    AttributeSeparator,\n    FieldName,\n    TypeAttribute,\n    Statement,\n    SwitchItem,\n    WorkgroupSizeSeparator,\n    GlobalItem,\n    StructAttribute,\n}","parent":null,"children":[{"krate":0,"index":3543},{"krate":0,"index":3546},{"krate":0,"index":3548},{"krate":0,"index":3551},{"krate":0,"index":3553},{"krate":0,"index":3555},{"krate":0,"index":3557},{"krate":0,"index":3559},{"krate":0,"index":3561},{"krate":0,"index":3563},{"krate":0,"index":3565},{"krate":0,"index":3567},{"krate":0,"index":3569},{"krate":0,"index":3571}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3601},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\wgsl\\mod.rs","byte_start":496834,"byte_end":496847,"line_start":111,"line_end":111,"column_start":5,"column_end":18},"name":"ParseIntError","qualname":"::front::wgsl::BadIntError::ParseIntError","value":"BadIntError::ParseIntError(ParseIntError)","parent":{"krate":0,"index":3587},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(transparent)","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\wgsl\\mod.rs","byte_start":496808,"byte_end":496829,"line_start":110,"line_end":110,"column_start":5,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3604},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\wgsl\\mod.rs","byte_start":496947,"byte_end":496959,"line_start":113,"line_end":113,"column_start":5,"column_end":17},"name":"NegativeZero","qualname":"::front::wgsl::BadIntError::NegativeZero","value":"BadIntError::NegativeZero","parent":{"krate":0,"index":3587},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"non-hex negative zero integer literals are not allowed\")","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\wgsl\\mod.rs","byte_start":496876,"byte_end":496942,"line_start":112,"line_end":112,"column_start":5,"column_end":71}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3606},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\wgsl\\mod.rs","byte_start":497040,"byte_end":497052,"line_start":115,"line_end":115,"column_start":5,"column_end":17},"name":"LeadingZeros","qualname":"::front::wgsl::BadIntError::LeadingZeros","value":"BadIntError::LeadingZeros","parent":{"krate":0,"index":3587},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"leading zeros for non-hex integer literals are not allowed\")","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\wgsl\\mod.rs","byte_start":496965,"byte_end":497035,"line_start":114,"line_end":114,"column_start":5,"column_end":75}}]},{"kind":"Enum","id":{"krate":0,"index":3587},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\wgsl\\mod.rs","byte_start":496790,"byte_end":496801,"line_start":109,"line_end":109,"column_start":10,"column_end":21},"name":"BadIntError","qualname":"::front::wgsl::BadIntError","value":"pub enum BadIntError {\n    ParseIntError(ParseIntError),\n    NegativeZero,\n    LeadingZeros,\n}","parent":null,"children":[{"krate":0,"index":3601},{"krate":0,"index":3604},{"krate":0,"index":3606}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3624},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\wgsl\\mod.rs","byte_start":497143,"byte_end":497158,"line_start":121,"line_end":121,"column_start":5,"column_end":20},"name":"ParseFloatError","qualname":"::front::wgsl::BadFloatError::ParseFloatError","value":"BadFloatError::ParseFloatError(ParseFloatError)","parent":{"krate":0,"index":3608},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(transparent)","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\wgsl\\mod.rs","byte_start":497117,"byte_end":497138,"line_start":120,"line_end":120,"column_start":5,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3627},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\wgsl\\mod.rs","byte_start":497215,"byte_end":497229,"line_start":123,"line_end":123,"column_start":5,"column_end":19},"name":"ParseHexfError","qualname":"::front::wgsl::BadFloatError::ParseHexfError","value":"BadFloatError::ParseHexfError(ParseHexfError)","parent":{"krate":0,"index":3608},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(transparent)","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\wgsl\\mod.rs","byte_start":497189,"byte_end":497210,"line_start":122,"line_end":122,"column_start":5,"column_end":26}}]},{"kind":"Enum","id":{"krate":0,"index":3608},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\wgsl\\mod.rs","byte_start":497097,"byte_end":497110,"line_start":119,"line_end":119,"column_start":10,"column_end":23},"name":"BadFloatError","qualname":"::front::wgsl::BadFloatError","value":"pub enum BadFloatError {\n    ParseFloatError(ParseFloatError),\n    ParseHexfError(ParseHexfError),\n}","parent":null,"children":[{"krate":0,"index":3624},{"krate":0,"index":3627}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3632},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\wgsl\\mod.rs","byte_start":497307,"byte_end":497317,"line_start":128,"line_end":128,"column_start":5,"column_end":15},"name":"Unexpected","qualname":"::front::wgsl::Error::Unexpected","value":"Error::Unexpected(TokenSpan, ExpectedToken)","parent":{"krate":0,"index":3630},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3636},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\wgsl\\mod.rs","byte_start":497357,"byte_end":497363,"line_start":129,"line_end":129,"column_start":5,"column_end":11},"name":"BadU32","qualname":"::front::wgsl::Error::BadU32","value":"Error::BadU32(Span, BadIntError)","parent":{"krate":0,"index":3630},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3640},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\wgsl\\mod.rs","byte_start":497388,"byte_end":497394,"line_start":130,"line_end":130,"column_start":5,"column_end":11},"name":"BadI32","qualname":"::front::wgsl::Error::BadI32","value":"Error::BadI32(Span, BadIntError)","parent":{"krate":0,"index":3630},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3644},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\wgsl\\mod.rs","byte_start":497545,"byte_end":497556,"line_start":133,"line_end":133,"column_start":5,"column_end":16},"name":"NegativeInt","qualname":"::front::wgsl::Error::NegativeInt","value":"Error::NegativeInt(Span)","parent":{"krate":0,"index":3630},"children":[],"decl_id":null,"docs":" A negative signed integer literal where both signed and unsigned,\n but only non-negative literals are allowed.\n","sig":null,"attributes":[{"value":"/ A negative signed integer literal where both signed and unsigned,","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\wgsl\\mod.rs","byte_start":497419,"byte_end":497488,"line_start":131,"line_end":131,"column_start":5,"column_end":74}},{"value":"/ but only non-negative literals are allowed.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\wgsl\\mod.rs","byte_start":497493,"byte_end":497540,"line_start":132,"line_end":132,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3647},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\wgsl\\mod.rs","byte_start":497568,"byte_end":497576,"line_start":134,"line_end":134,"column_start":5,"column_end":13},"name":"BadFloat","qualname":"::front::wgsl::Error::BadFloat","value":"Error::BadFloat(Span, BadFloatError)","parent":{"krate":0,"index":3630},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3651},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\wgsl\\mod.rs","byte_start":497603,"byte_end":497617,"line_start":135,"line_end":135,"column_start":5,"column_end":19},"name":"BadU32Constant","qualname":"::front::wgsl::Error::BadU32Constant","value":"Error::BadU32Constant(Span)","parent":{"krate":0,"index":3630},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3654},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\wgsl\\mod.rs","byte_start":497629,"byte_end":497643,"line_start":136,"line_end":136,"column_start":5,"column_end":19},"name":"BadScalarWidth","qualname":"::front::wgsl::Error::BadScalarWidth","value":"Error::BadScalarWidth(Span, Bytes)","parent":{"krate":0,"index":3630},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3658},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\wgsl\\mod.rs","byte_start":497662,"byte_end":497673,"line_start":137,"line_end":137,"column_start":5,"column_end":16},"name":"BadAccessor","qualname":"::front::wgsl::Error::BadAccessor","value":"Error::BadAccessor(Span)","parent":{"krate":0,"index":3630},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3661},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\wgsl\\mod.rs","byte_start":497685,"byte_end":497695,"line_start":138,"line_end":138,"column_start":5,"column_end":15},"name":"BadTexture","qualname":"::front::wgsl::Error::BadTexture","value":"Error::BadTexture(Span)","parent":{"krate":0,"index":3630},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3664},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\wgsl\\mod.rs","byte_start":497707,"byte_end":497718,"line_start":139,"line_end":139,"column_start":5,"column_end":16},"name":"BadTypeCast","qualname":"::front::wgsl::Error::BadTypeCast","value":"Error::BadTypeCast { span, from_type, to_type }","parent":{"krate":0,"index":3630},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3668},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\wgsl\\mod.rs","byte_start":497804,"byte_end":497824,"line_start":144,"line_end":144,"column_start":5,"column_end":25},"name":"BadTextureSampleType","qualname":"::front::wgsl::Error::BadTextureSampleType","value":"Error::BadTextureSampleType { span, kind, width }","parent":{"krate":0,"index":3630},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3672},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\wgsl\\mod.rs","byte_start":497910,"byte_end":497924,"line_start":149,"line_end":149,"column_start":5,"column_end":19},"name":"InvalidResolve","qualname":"::front::wgsl::Error::InvalidResolve","value":"Error::InvalidResolve(ResolveError)","parent":{"krate":0,"index":3630},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3675},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\wgsl\\mod.rs","byte_start":497944,"byte_end":497965,"line_start":150,"line_end":150,"column_start":5,"column_end":26},"name":"InvalidForInitializer","qualname":"::front::wgsl::Error::InvalidForInitializer","value":"Error::InvalidForInitializer(Span)","parent":{"krate":0,"index":3630},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3678},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\wgsl\\mod.rs","byte_start":497977,"byte_end":497996,"line_start":151,"line_end":151,"column_start":5,"column_end":24},"name":"UnknownStorageClass","qualname":"::front::wgsl::Error::UnknownStorageClass","value":"Error::UnknownStorageClass(Span)","parent":{"krate":0,"index":3630},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3681},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\wgsl\\mod.rs","byte_start":498008,"byte_end":498024,"line_start":152,"line_end":152,"column_start":5,"column_end":21},"name":"UnknownAttribute","qualname":"::front::wgsl::Error::UnknownAttribute","value":"Error::UnknownAttribute(Span)","parent":{"krate":0,"index":3630},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3684},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\wgsl\\mod.rs","byte_start":498036,"byte_end":498050,"line_start":153,"line_end":153,"column_start":5,"column_end":19},"name":"UnknownBuiltin","qualname":"::front::wgsl::Error::UnknownBuiltin","value":"Error::UnknownBuiltin(Span)","parent":{"krate":0,"index":3630},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3687},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\wgsl\\mod.rs","byte_start":498062,"byte_end":498075,"line_start":154,"line_end":154,"column_start":5,"column_end":18},"name":"UnknownAccess","qualname":"::front::wgsl::Error::UnknownAccess","value":"Error::UnknownAccess(Span)","parent":{"krate":0,"index":3630},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3690},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\wgsl\\mod.rs","byte_start":498087,"byte_end":498105,"line_start":155,"line_end":155,"column_start":5,"column_end":23},"name":"UnknownShaderStage","qualname":"::front::wgsl::Error::UnknownShaderStage","value":"Error::UnknownShaderStage(Span)","parent":{"krate":0,"index":3630},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3693},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\wgsl\\mod.rs","byte_start":498117,"byte_end":498129,"line_start":156,"line_end":156,"column_start":5,"column_end":17},"name":"UnknownIdent","qualname":"::front::wgsl::Error::UnknownIdent","value":"Error::UnknownIdent(Span, &'a str)","parent":{"krate":0,"index":3630},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3697},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\wgsl\\mod.rs","byte_start":498150,"byte_end":498167,"line_start":157,"line_end":157,"column_start":5,"column_end":22},"name":"UnknownScalarType","qualname":"::front::wgsl::Error::UnknownScalarType","value":"Error::UnknownScalarType(Span)","parent":{"krate":0,"index":3630},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3700},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\wgsl\\mod.rs","byte_start":498179,"byte_end":498190,"line_start":158,"line_end":158,"column_start":5,"column_end":16},"name":"UnknownType","qualname":"::front::wgsl::Error::UnknownType","value":"Error::UnknownType(Span)","parent":{"krate":0,"index":3630},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3703},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\wgsl\\mod.rs","byte_start":498202,"byte_end":498222,"line_start":159,"line_end":159,"column_start":5,"column_end":25},"name":"UnknownStorageFormat","qualname":"::front::wgsl::Error::UnknownStorageFormat","value":"Error::UnknownStorageFormat(Span)","parent":{"krate":0,"index":3630},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3706},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\wgsl\\mod.rs","byte_start":498234,"byte_end":498258,"line_start":160,"line_end":160,"column_start":5,"column_end":29},"name":"UnknownConservativeDepth","qualname":"::front::wgsl::Error::UnknownConservativeDepth","value":"Error::UnknownConservativeDepth(Span)","parent":{"krate":0,"index":3630},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3709},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\wgsl\\mod.rs","byte_start":498270,"byte_end":498280,"line_start":161,"line_end":161,"column_start":5,"column_end":15},"name":"ZeroStride","qualname":"::front::wgsl::Error::ZeroStride","value":"Error::ZeroStride(Span)","parent":{"krate":0,"index":3630},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3712},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\wgsl\\mod.rs","byte_start":498292,"byte_end":498307,"line_start":162,"line_end":162,"column_start":5,"column_end":20},"name":"ZeroSizeOrAlign","qualname":"::front::wgsl::Error::ZeroSizeOrAlign","value":"Error::ZeroSizeOrAlign(Span)","parent":{"krate":0,"index":3630},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3715},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\wgsl\\mod.rs","byte_start":498319,"byte_end":498338,"line_start":163,"line_end":163,"column_start":5,"column_end":24},"name":"InconsistentBinding","qualname":"::front::wgsl::Error::InconsistentBinding","value":"Error::InconsistentBinding(Span)","parent":{"krate":0,"index":3630},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3718},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\wgsl\\mod.rs","byte_start":498350,"byte_end":498370,"line_start":164,"line_end":164,"column_start":5,"column_end":25},"name":"UnknownLocalFunction","qualname":"::front::wgsl::Error::UnknownLocalFunction","value":"Error::UnknownLocalFunction(Span)","parent":{"krate":0,"index":3630},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3721},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\wgsl\\mod.rs","byte_start":498382,"byte_end":498408,"line_start":165,"line_end":165,"column_start":5,"column_end":31},"name":"InitializationTypeMismatch","qualname":"::front::wgsl::Error::InitializationTypeMismatch","value":"Error::InitializationTypeMismatch(Span, Handle<crate::Type>)","parent":{"krate":0,"index":3630},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3725},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\wgsl\\mod.rs","byte_start":498441,"byte_end":498452,"line_start":166,"line_end":166,"column_start":5,"column_end":16},"name":"MissingType","qualname":"::front::wgsl::Error::MissingType","value":"Error::MissingType(Span)","parent":{"krate":0,"index":3630},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3728},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\wgsl\\mod.rs","byte_start":498464,"byte_end":498484,"line_start":167,"line_end":167,"column_start":5,"column_end":25},"name":"InvalidAtomicPointer","qualname":"::front::wgsl::Error::InvalidAtomicPointer","value":"Error::InvalidAtomicPointer(Span)","parent":{"krate":0,"index":3630},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3731},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\wgsl\\mod.rs","byte_start":498496,"byte_end":498520,"line_start":168,"line_end":168,"column_start":5,"column_end":29},"name":"InvalidAtomicOperandType","qualname":"::front::wgsl::Error::InvalidAtomicOperandType","value":"Error::InvalidAtomicOperandType(Span)","parent":{"krate":0,"index":3630},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3734},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\wgsl\\mod.rs","byte_start":498532,"byte_end":498539,"line_start":169,"line_end":169,"column_start":5,"column_end":12},"name":"Pointer","qualname":"::front::wgsl::Error::Pointer","value":"Error::Pointer(&'static str, Span)","parent":{"krate":0,"index":3630},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3738},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\wgsl\\mod.rs","byte_start":498565,"byte_end":498575,"line_start":170,"line_end":170,"column_start":5,"column_end":15},"name":"NotPointer","qualname":"::front::wgsl::Error::NotPointer","value":"Error::NotPointer(Span)","parent":{"krate":0,"index":3630},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3741},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\wgsl\\mod.rs","byte_start":498587,"byte_end":498599,"line_start":171,"line_end":171,"column_start":5,"column_end":17},"name":"NotReference","qualname":"::front::wgsl::Error::NotReference","value":"Error::NotReference(&'static str, Span)","parent":{"krate":0,"index":3630},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3745},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\wgsl\\mod.rs","byte_start":498625,"byte_end":498630,"line_start":172,"line_end":172,"column_start":5,"column_end":10},"name":"Other","qualname":"::front::wgsl::Error::Other","value":"Error::Other","parent":{"krate":0,"index":3630},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3630},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\wgsl\\mod.rs","byte_start":497291,"byte_end":497296,"line_start":127,"line_end":127,"column_start":10,"column_end":15},"name":"Error","qualname":"::front::wgsl::Error","value":"pub enum Error<'a> {\n    Unexpected(TokenSpan, ExpectedToken),\n    BadU32(Span, BadIntError),\n    BadI32(Span, BadIntError),\n    NegativeInt(Span),\n    BadFloat(Span, BadFloatError),\n    BadU32Constant(Span),\n    BadScalarWidth(Span, Bytes),\n    BadAccessor(Span),\n    BadTexture(Span),\n    BadTypeCast {\n        span: Span,\n        from_type: String,\n        to_type: String,\n    },\n    BadTextureSampleType {\n        span: Span,\n        kind: crate::ScalarKind,\n        width: u8,\n    },\n    InvalidResolve(ResolveError),\n    InvalidForInitializer(Span),\n    UnknownStorageClass(Span),\n    UnknownAttribute(Span),\n    UnknownBuiltin(Span),\n    UnknownAccess(Span),\n    UnknownShaderStage(Span),\n    UnknownIdent(Span, &'a str),\n    UnknownScalarType(Span),\n    UnknownType(Span),\n    UnknownStorageFormat(Span),\n    UnknownConservativeDepth(Span),\n    ZeroStride(Span),\n    ZeroSizeOrAlign(Span),\n    InconsistentBinding(Span),\n    UnknownLocalFunction(Span),\n    InitializationTypeMismatch(Span, Handle<crate::Type>),\n    MissingType(Span),\n    InvalidAtomicPointer(Span),\n    InvalidAtomicOperandType(Span),\n    Pointer(&'static str, Span),\n    NotPointer(Span),\n    NotReference(&'static str, Span),\n    Other,\n}","parent":null,"children":[{"krate":0,"index":3632},{"krate":0,"index":3636},{"krate":0,"index":3640},{"krate":0,"index":3644},{"krate":0,"index":3647},{"krate":0,"index":3651},{"krate":0,"index":3654},{"krate":0,"index":3658},{"krate":0,"index":3661},{"krate":0,"index":3664},{"krate":0,"index":3668},{"krate":0,"index":3672},{"krate":0,"index":3675},{"krate":0,"index":3678},{"krate":0,"index":3681},{"krate":0,"index":3684},{"krate":0,"index":3687},{"krate":0,"index":3690},{"krate":0,"index":3693},{"krate":0,"index":3697},{"krate":0,"index":3700},{"krate":0,"index":3703},{"krate":0,"index":3706},{"krate":0,"index":3709},{"krate":0,"index":3712},{"krate":0,"index":3715},{"krate":0,"index":3718},{"krate":0,"index":3721},{"krate":0,"index":3725},{"krate":0,"index":3728},{"krate":0,"index":3731},{"krate":0,"index":3734},{"krate":0,"index":3738},{"krate":0,"index":3741},{"krate":0,"index":3745}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1681},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\wgsl\\mod.rs","byte_start":522851,"byte_end":522856,"line_start":698,"line_end":698,"column_start":10,"column_end":15},"name":"Value","qualname":"::front::wgsl::StringValueLookup::Value","value":"type Value;","parent":{"krate":0,"index":1679},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3766},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\wgsl\\mod.rs","byte_start":534626,"byte_end":534635,"line_start":1024,"line_end":1024,"column_start":5,"column_end":14},"name":"Attribute","qualname":"::front::wgsl::Scope::Attribute","value":"Scope::Attribute","parent":{"krate":0,"index":3765},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3768},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\wgsl\\mod.rs","byte_start":534641,"byte_end":534651,"line_start":1025,"line_end":1025,"column_start":5,"column_end":15},"name":"ImportDecl","qualname":"::front::wgsl::Scope::ImportDecl","value":"Scope::ImportDecl","parent":{"krate":0,"index":3765},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3770},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\wgsl\\mod.rs","byte_start":534657,"byte_end":534669,"line_start":1026,"line_end":1026,"column_start":5,"column_end":17},"name":"VariableDecl","qualname":"::front::wgsl::Scope::VariableDecl","value":"Scope::VariableDecl","parent":{"krate":0,"index":3765},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3772},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\wgsl\\mod.rs","byte_start":534675,"byte_end":534683,"line_start":1027,"line_end":1027,"column_start":5,"column_end":13},"name":"TypeDecl","qualname":"::front::wgsl::Scope::TypeDecl","value":"Scope::TypeDecl","parent":{"krate":0,"index":3765},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3774},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\wgsl\\mod.rs","byte_start":534689,"byte_end":534701,"line_start":1028,"line_end":1028,"column_start":5,"column_end":17},"name":"FunctionDecl","qualname":"::front::wgsl::Scope::FunctionDecl","value":"Scope::FunctionDecl","parent":{"krate":0,"index":3765},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3776},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\wgsl\\mod.rs","byte_start":534707,"byte_end":534712,"line_start":1029,"line_end":1029,"column_start":5,"column_end":10},"name":"Block","qualname":"::front::wgsl::Scope::Block","value":"Scope::Block","parent":{"krate":0,"index":3765},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3778},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\wgsl\\mod.rs","byte_start":534718,"byte_end":534727,"line_start":1030,"line_end":1030,"column_start":5,"column_end":14},"name":"Statement","qualname":"::front::wgsl::Scope::Statement","value":"Scope::Statement","parent":{"krate":0,"index":3765},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3780},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\wgsl\\mod.rs","byte_start":534733,"byte_end":534745,"line_start":1031,"line_end":1031,"column_start":5,"column_end":17},"name":"ConstantExpr","qualname":"::front::wgsl::Scope::ConstantExpr","value":"Scope::ConstantExpr","parent":{"krate":0,"index":3765},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3782},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\wgsl\\mod.rs","byte_start":534751,"byte_end":534762,"line_start":1032,"line_end":1032,"column_start":5,"column_end":16},"name":"PrimaryExpr","qualname":"::front::wgsl::Scope::PrimaryExpr","value":"Scope::PrimaryExpr","parent":{"krate":0,"index":3765},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3784},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\wgsl\\mod.rs","byte_start":534768,"byte_end":534780,"line_start":1033,"line_end":1033,"column_start":5,"column_end":17},"name":"SingularExpr","qualname":"::front::wgsl::Scope::SingularExpr","value":"Scope::SingularExpr","parent":{"krate":0,"index":3765},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3786},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\wgsl\\mod.rs","byte_start":534786,"byte_end":534795,"line_start":1034,"line_end":1034,"column_start":5,"column_end":14},"name":"UnaryExpr","qualname":"::front::wgsl::Scope::UnaryExpr","value":"Scope::UnaryExpr","parent":{"krate":0,"index":3765},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3788},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\wgsl\\mod.rs","byte_start":534801,"byte_end":534812,"line_start":1035,"line_end":1035,"column_start":5,"column_end":16},"name":"GeneralExpr","qualname":"::front::wgsl::Scope::GeneralExpr","value":"Scope::GeneralExpr","parent":{"krate":0,"index":3765},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3765},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\wgsl\\mod.rs","byte_start":534614,"byte_end":534619,"line_start":1023,"line_end":1023,"column_start":10,"column_end":15},"name":"Scope","qualname":"::front::wgsl::Scope","value":"pub enum Scope {\n    Attribute,\n    ImportDecl,\n    VariableDecl,\n    TypeDecl,\n    FunctionDecl,\n    Block,\n    Statement,\n    ConstantExpr,\n    PrimaryExpr,\n    SingularExpr,\n    UnaryExpr,\n    GeneralExpr,\n}","parent":null,"children":[{"krate":0,"index":3766},{"krate":0,"index":3768},{"krate":0,"index":3770},{"krate":0,"index":3772},{"krate":0,"index":3774},{"krate":0,"index":3776},{"krate":0,"index":3778},{"krate":0,"index":3780},{"krate":0,"index":3782},{"krate":0,"index":3784},{"krate":0,"index":3786},{"krate":0,"index":3788}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3804},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\wgsl\\mod.rs","byte_start":537653,"byte_end":537663,"line_start":1116,"line_end":1116,"column_start":12,"column_end":22},"name":"ParseError","qualname":"::front::wgsl::ParseError","value":"ParseError {  }","parent":null,"children":[{"krate":0,"index":3805},{"krate":0,"index":3806},{"krate":0,"index":3807}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1776},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\wgsl\\mod.rs","byte_start":538484,"byte_end":538498,"line_start":1144,"line_end":1144,"column_start":12,"column_end":26},"name":"emit_to_stderr","qualname":"<ParseError>::emit_to_stderr","value":"pub fn emit_to_stderr(&Self, &str)","parent":null,"children":[],"decl_id":null,"docs":" Emits a summary of the error to standard error stream.\n","sig":null,"attributes":[{"value":"/ Emits a summary of the error to standard error stream.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\wgsl\\mod.rs","byte_start":538414,"byte_end":538472,"line_start":1143,"line_end":1143,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":1777},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\wgsl\\mod.rs","byte_start":538894,"byte_end":538908,"line_start":1153,"line_end":1153,"column_start":12,"column_end":26},"name":"emit_to_string","qualname":"<ParseError>::emit_to_string","value":"pub fn emit_to_string(&Self, &str) -> String","parent":null,"children":[],"decl_id":null,"docs":" Emits a summary of the error to a string.\n","sig":null,"attributes":[{"value":"/ Emits a summary of the error to a string.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\wgsl\\mod.rs","byte_start":538837,"byte_end":538882,"line_start":1152,"line_end":1152,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":1778},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\wgsl\\mod.rs","byte_start":539358,"byte_end":539366,"line_start":1163,"line_end":1163,"column_start":12,"column_end":20},"name":"location","qualname":"<ParseError>::location","value":"pub fn location(&Self, &str) -> (usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Returns the 1-based line number and column of the first label in the\n error message.\n","sig":null,"attributes":[{"value":"/ Returns the 1-based line number and column of the first label in the","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\wgsl\\mod.rs","byte_start":539251,"byte_end":539323,"line_start":1161,"line_end":1161,"column_start":5,"column_end":77}},{"value":"/ error message.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\wgsl\\mod.rs","byte_start":539328,"byte_end":539346,"line_start":1162,"line_end":1162,"column_start":5,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":1783},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\wgsl\\mod.rs","byte_start":540091,"byte_end":540097,"line_start":1189,"line_end":1189,"column_start":12,"column_end":18},"name":"Parser","qualname":"::front::wgsl::Parser","value":"Parser {  }","parent":null,"children":[{"krate":0,"index":1784},{"krate":0,"index":1785},{"krate":0,"index":1786}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1788},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\wgsl\\mod.rs","byte_start":540244,"byte_end":540247,"line_start":1196,"line_end":1196,"column_start":12,"column_end":15},"name":"new","qualname":"<Parser>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1906},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\wgsl\\mod.rs","byte_start":669714,"byte_end":669719,"line_start":4128,"line_end":4128,"column_start":12,"column_end":17},"name":"parse","qualname":"<Parser>::parse","value":"pub fn parse(&mut Self, &str) -> Result<crate::Module, ParseError>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1907},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\wgsl\\mod.rs","byte_start":670634,"byte_end":670643,"line_start":4152,"line_end":4152,"column_start":8,"column_end":17},"name":"parse_str","qualname":"::front::wgsl::parse_str","value":"pub fn parse_str(&str) -> Result<crate::Module, ParseError>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1908},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\wgsl\\mod.rs","byte_start":670743,"byte_end":670760,"line_start":4156,"line_end":4156,"column_start":12,"column_end":29},"name":"StringErrorBuffer","qualname":"::front::wgsl::StringErrorBuffer","value":"StringErrorBuffer {  }","parent":null,"children":[{"krate":0,"index":1909}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1911},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\wgsl\\mod.rs","byte_start":670820,"byte_end":670823,"line_start":4161,"line_end":4161,"column_start":12,"column_end":15},"name":"new","qualname":"<StringErrorBuffer>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1912},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\wgsl\\mod.rs","byte_start":670887,"byte_end":670898,"line_start":4165,"line_end":4165,"column_start":12,"column_end":23},"name":"into_string","qualname":"<StringErrorBuffer>::into_string","value":"pub fn into_string(Self) -> String","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3819},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\mod.rs","byte_start":488962,"byte_end":488970,"line_start":66,"line_end":66,"column_start":12,"column_end":20},"name":"Typifier","qualname":"::front::Typifier","value":"Typifier {  }","parent":null,"children":[{"krate":0,"index":3820}],"decl_id":null,"docs":" Helper processor that derives the types of all expressions.\n","sig":null,"attributes":[{"value":"/ Helper processor that derives the types of all expressions.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\mod.rs","byte_start":488861,"byte_end":488924,"line_start":64,"line_end":64,"column_start":1,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":1950},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\mod.rs","byte_start":489041,"byte_end":489044,"line_start":71,"line_end":71,"column_start":12,"column_end":15},"name":"new","qualname":"<Typifier>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1951},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\mod.rs","byte_start":489141,"byte_end":489146,"line_start":77,"line_end":77,"column_start":12,"column_end":17},"name":"reset","qualname":"<Typifier>::reset","value":"pub fn reset(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1952},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\mod.rs","byte_start":489211,"byte_end":489214,"line_start":81,"line_end":81,"column_start":12,"column_end":15},"name":"get","qualname":"<Typifier>::get","value":"pub fn get<'a>(&'a Self, Handle<crate::Expression>,\n               &'a UniqueArena<crate::Type>) -> &'a crate::TypeInner","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1954},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\mod.rs","byte_start":489445,"byte_end":489449,"line_start":89,"line_end":89,"column_start":12,"column_end":16},"name":"grow","qualname":"<Typifier>::grow","value":"pub fn grow(&mut Self, Handle<crate::Expression>, &Arena<crate::Expression>,\n            &ResolveContext) -> Result<(), ResolveError>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1956},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\mod.rs","byte_start":490263,"byte_end":490273,"line_start":109,"line_end":109,"column_start":12,"column_end":22},"name":"invalidate","qualname":"<Typifier>::invalidate","value":"pub fn invalidate(&mut Self, Handle<crate::Expression>,\n                  &Arena<crate::Expression>, &ResolveContext)\n-> Result<(), ResolveError>","parent":null,"children":[],"decl_id":null,"docs":" Invalidates the cached type resolution for `epxr_handle` forcing a recomputation","sig":null,"attributes":[{"value":"/ Invalidates the cached type resolution for `epxr_handle` forcing a recomputation","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\mod.rs","byte_start":490042,"byte_end":490126,"line_start":105,"line_end":105,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\mod.rs","byte_start":490131,"byte_end":490134,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ If the type of the expression hasn't yet been calculated a","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\mod.rs","byte_start":490139,"byte_end":490201,"line_start":107,"line_end":107,"column_start":5,"column_end":67}},{"value":"/ [`grow`](Self::grow) is performed instead","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\mod.rs","byte_start":490206,"byte_end":490251,"line_start":108,"line_end":108,"column_start":5,"column_end":50}}]},{"kind":"Function","id":{"krate":0,"index":1961},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\mod.rs","byte_start":491468,"byte_end":491476,"line_start":146,"line_end":146,"column_start":8,"column_end":16},"name":"align_up","qualname":"::front::align_up","value":"pub fn align_up(u32, u32) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Helper function used for aligning `value` to the next multiple of `align`","sig":null,"attributes":[{"value":"/ Helper function used for aligning `value` to the next multiple of `align`","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\mod.rs","byte_start":491037,"byte_end":491114,"line_start":133,"line_end":133,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\mod.rs","byte_start":491115,"byte_end":491118,"line_start":134,"line_end":134,"column_start":1,"column_end":4}},{"value":"/ # Notes:","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\mod.rs","byte_start":491119,"byte_end":491131,"line_start":135,"line_end":135,"column_start":1,"column_end":13}},{"value":"/ - `align` must be a power of two.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\mod.rs","byte_start":491132,"byte_end":491169,"line_start":136,"line_end":136,"column_start":1,"column_end":38}},{"value":"/ - The returned value will be greater or equal to `value`.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\mod.rs","byte_start":491170,"byte_end":491231,"line_start":137,"line_end":137,"column_start":1,"column_end":62}},{"value":"/ # Examples:","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\mod.rs","byte_start":491232,"byte_end":491247,"line_start":138,"line_end":138,"column_start":1,"column_end":16}},{"value":"/ ```ignore","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\mod.rs","byte_start":491248,"byte_end":491261,"line_start":139,"line_end":139,"column_start":1,"column_end":14}},{"value":"/ assert_eq!(0, align_up(0, 16));","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\mod.rs","byte_start":491262,"byte_end":491297,"line_start":140,"line_end":140,"column_start":1,"column_end":36}},{"value":"/ assert_eq!(16, align_up(1, 16));","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\mod.rs","byte_start":491298,"byte_end":491334,"line_start":141,"line_end":141,"column_start":1,"column_end":37}},{"value":"/ assert_eq!(16, align_up(16, 16));","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\mod.rs","byte_start":491335,"byte_end":491372,"line_start":142,"line_end":142,"column_start":1,"column_end":38}},{"value":"/ assert_eq!(334, align_up(333, 2));","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\mod.rs","byte_start":491373,"byte_end":491411,"line_start":143,"line_end":143,"column_start":1,"column_end":39}},{"value":"/ assert_eq!(384, align_up(257, 128));","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\mod.rs","byte_start":491412,"byte_end":491452,"line_start":144,"line_end":144,"column_start":1,"column_end":41}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\mod.rs","byte_start":491453,"byte_end":491460,"line_start":145,"line_end":145,"column_start":1,"column_end":8}}]},{"kind":"Mod","id":{"krate":0,"index":1962},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"proc","qualname":"::proc","value":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\mod.rs","parent":null,"children":[{"krate":0,"index":1963},{"krate":0,"index":1986},{"krate":0,"index":2016},{"krate":0,"index":2052},{"krate":0,"index":2057},{"krate":0,"index":2101},{"krate":0,"index":2102},{"krate":0,"index":2104},{"krate":0,"index":2107},{"krate":0,"index":2108},{"krate":0,"index":2111},{"krate":0,"index":2112},{"krate":0,"index":2114},{"krate":0,"index":2117},{"krate":0,"index":2120},{"krate":0,"index":2121},{"krate":0,"index":2124},{"krate":0,"index":2127},{"krate":0,"index":2130},{"krate":0,"index":2133},{"krate":0,"index":2134},{"krate":0,"index":2137},{"krate":0,"index":2140},{"krate":0,"index":3977},{"krate":0,"index":3978},{"krate":0,"index":3980},{"krate":0,"index":3982},{"krate":0,"index":3983},{"krate":0,"index":3985},{"krate":0,"index":3986},{"krate":0,"index":2143},{"krate":0,"index":2152},{"krate":0,"index":2154},{"krate":0,"index":2155},{"krate":0,"index":2164},{"krate":0,"index":2169},{"krate":0,"index":2171},{"krate":0,"index":2174},{"krate":0,"index":2176},{"krate":0,"index":2181},{"krate":0,"index":2183},{"krate":0,"index":2185},{"krate":0,"index":2186},{"krate":0,"index":2189}],"decl_id":null,"docs":" Module processing functionality.\n","sig":null,"attributes":[{"value":"/ Module processing functionality.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\mod.rs","byte_start":709336,"byte_end":709372,"line_start":1,"line_end":1,"column_start":1,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":1968},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\index.rs","byte_start":724038,"byte_end":724054,"line_start":15,"line_end":15,"column_start":12,"column_end":28},"name":"indexable_length","qualname":"<crate::TypeInner>::indexable_length","value":"pub fn indexable_length(&Self, &crate::Module)\n-> Result<IndexableLength, ProcError>","parent":null,"children":[],"decl_id":null,"docs":" Return the length of a subscriptable type.","sig":null,"attributes":[{"value":"/ Return the length of a subscriptable type.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\index.rs","byte_start":723568,"byte_end":723614,"line_start":6,"line_end":6,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\index.rs","byte_start":723619,"byte_end":723622,"line_start":7,"line_end":7,"column_start":5,"column_end":8}},{"value":"/ The `self` parameter should be a handle to a vector, matrix, or array","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\index.rs","byte_start":723627,"byte_end":723700,"line_start":8,"line_end":8,"column_start":5,"column_end":78}},{"value":"/ type, a pointer to one of those, or a value pointer. Arrays may be","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\index.rs","byte_start":723705,"byte_end":723775,"line_start":9,"line_end":9,"column_start":5,"column_end":75}},{"value":"/ fixed-size, dynamically sized, or sized by a specializable constant.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\index.rs","byte_start":723780,"byte_end":723852,"line_start":10,"line_end":10,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\index.rs","byte_start":723857,"byte_end":723860,"line_start":11,"line_end":11,"column_start":5,"column_end":8}},{"value":"/ The value returned is appropriate for bounds checks on subscripting.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\index.rs","byte_start":723865,"byte_end":723937,"line_start":12,"line_end":12,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\index.rs","byte_start":723942,"byte_end":723945,"line_start":13,"line_end":13,"column_start":5,"column_end":8}},{"value":"/ Return an error if `self` does not describe a subscriptable type at all.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\index.rs","byte_start":723950,"byte_end":724026,"line_start":14,"line_end":14,"column_start":5,"column_end":81}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1973},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\index.rs","byte_start":725577,"byte_end":725582,"line_start":50,"line_end":50,"column_start":5,"column_end":10},"name":"Known","qualname":"::proc::index::IndexableLength::Known","value":"IndexableLength::Known(u32)","parent":{"krate":0,"index":1972},"children":[],"decl_id":null,"docs":" Values of this type always have the given number of elements.\n","sig":null,"attributes":[{"value":"/ Values of this type always have the given number of elements.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\index.rs","byte_start":725507,"byte_end":725572,"line_start":49,"line_end":49,"column_start":5,"column_end":70}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1976},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\index.rs","byte_start":725738,"byte_end":725751,"line_start":54,"line_end":54,"column_start":5,"column_end":18},"name":"Specializable","qualname":"::proc::index::IndexableLength::Specializable","value":"IndexableLength::Specializable(crate::Handle<crate::Constant>)","parent":{"krate":0,"index":1972},"children":[],"decl_id":null,"docs":" The value of the given specializable constant is the number of elements.\n (Non-specializable constants are reported as `Known`.)\n","sig":null,"attributes":[{"value":"/ The value of the given specializable constant is the number of elements.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\index.rs","byte_start":725594,"byte_end":725670,"line_start":52,"line_end":52,"column_start":5,"column_end":81}},{"value":"/ (Non-specializable constants are reported as `Known`.)","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\index.rs","byte_start":725675,"byte_end":725733,"line_start":53,"line_end":53,"column_start":5,"column_end":63}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1979},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\index.rs","byte_start":725847,"byte_end":725854,"line_start":57,"line_end":57,"column_start":5,"column_end":12},"name":"Dynamic","qualname":"::proc::index::IndexableLength::Dynamic","value":"IndexableLength::Dynamic","parent":{"krate":0,"index":1972},"children":[],"decl_id":null,"docs":" The number of elements is determined at runtime.\n","sig":null,"attributes":[{"value":"/ The number of elements is determined at runtime.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\index.rs","byte_start":725790,"byte_end":725842,"line_start":56,"line_end":56,"column_start":5,"column_end":57}}]},{"kind":"Enum","id":{"krate":0,"index":1972},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\index.rs","byte_start":725485,"byte_end":725500,"line_start":48,"line_end":48,"column_start":10,"column_end":25},"name":"IndexableLength","qualname":"::proc::index::IndexableLength","value":"pub enum IndexableLength {\n    Known(u32),\n    Specializable(crate::Handle<crate::Constant>),\n    Dynamic,\n}","parent":null,"children":[{"krate":0,"index":1973},{"krate":0,"index":1976},{"krate":0,"index":1979}],"decl_id":null,"docs":" The number of elements in an indexable type.","sig":null,"attributes":[{"value":"/ The number of elements in an indexable type.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\index.rs","byte_start":725288,"byte_end":725336,"line_start":44,"line_end":44,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\index.rs","byte_start":725337,"byte_end":725340,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ This summarizes the length of vectors, matrices, and arrays in a way that is","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\index.rs","byte_start":725341,"byte_end":725421,"line_start":46,"line_end":46,"column_start":1,"column_end":81}},{"value":"/ convenient for indexing and bounds-checking code.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\index.rs","byte_start":725422,"byte_end":725475,"line_start":47,"line_end":47,"column_start":1,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":1982},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\index.rs","byte_start":725894,"byte_end":725913,"line_start":61,"line_end":61,"column_start":12,"column_end":31},"name":"to_indexable_length","qualname":"<crate::ArraySize>::to_indexable_length","value":"pub fn to_indexable_length(Self, &crate::Module)\n-> Result<IndexableLength, ProcError>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":2004},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\layouter.rs","byte_start":726699,"byte_end":726708,"line_start":4,"line_end":4,"column_start":10,"column_end":19},"name":"Alignment","qualname":"::proc::layouter::Alignment","value":"NonZeroU32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3825},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\layouter.rs","byte_start":726946,"byte_end":726956,"line_start":10,"line_end":10,"column_start":12,"column_end":22},"name":"TypeLayout","qualname":"::proc::layouter::TypeLayout","value":"TypeLayout { size, alignment }","parent":null,"children":[{"krate":0,"index":3826},{"krate":0,"index":3827}],"decl_id":null,"docs":" Alignment information for a type.\n","sig":null,"attributes":[{"value":"/ Alignment information for a type.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\layouter.rs","byte_start":726724,"byte_end":726761,"line_start":6,"line_end":6,"column_start":1,"column_end":38}}]},{"kind":"Field","id":{"krate":0,"index":3826},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\layouter.rs","byte_start":726967,"byte_end":726971,"line_start":11,"line_end":11,"column_start":9,"column_end":13},"name":"size","qualname":"::proc::layouter::TypeLayout::size","value":"u32","parent":{"krate":0,"index":3825},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3827},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\layouter.rs","byte_start":726986,"byte_end":726995,"line_start":12,"line_end":12,"column_start":9,"column_end":18},"name":"alignment","qualname":"::proc::layouter::TypeLayout::alignment","value":"std::num::NonZeroU32","parent":{"krate":0,"index":3825},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3840},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\layouter.rs","byte_start":727344,"byte_end":727352,"line_start":21,"line_end":21,"column_start":12,"column_end":20},"name":"Layouter","qualname":"::proc::layouter::Layouter","value":"Layouter {  }","parent":null,"children":[{"krate":0,"index":3841}],"decl_id":null,"docs":" Helper processor that derives the sizes of all types.\n It uses the default layout algorithm/table, described in\n <https://github.com/gpuweb/gpuweb/issues/1393>\n","sig":null,"attributes":[{"value":"/ Helper processor that derives the sizes of all types.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\layouter.rs","byte_start":727011,"byte_end":727068,"line_start":15,"line_end":15,"column_start":1,"column_end":58}},{"value":"/ It uses the default layout algorithm/table, described in","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\layouter.rs","byte_start":727069,"byte_end":727129,"line_start":16,"line_end":16,"column_start":1,"column_end":61}},{"value":"/ <https://github.com/gpuweb/gpuweb/issues/1393>","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\layouter.rs","byte_start":727130,"byte_end":727180,"line_start":17,"line_end":17,"column_start":1,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":3858},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\layouter.rs","byte_start":727698,"byte_end":727713,"line_start":34,"line_end":34,"column_start":12,"column_end":27},"name":"InvalidBaseType","qualname":"::proc::layouter::InvalidBaseType","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Base type {0:?} is out of bounds\")","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\layouter.rs","byte_start":727642,"byte_end":727686,"line_start":33,"line_end":33,"column_start":1,"column_end":45}}]},{"kind":"Field","id":{"krate":0,"index":3860},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\layouter.rs","byte_start":727714,"byte_end":727737,"line_start":34,"line_end":34,"column_start":28,"column_end":51},"name":"0","qualname":"::proc::layouter::InvalidBaseType::0","value":"arena::Handle<Type>","parent":{"krate":0,"index":3858},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2009},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\layouter.rs","byte_start":727768,"byte_end":727773,"line_start":37,"line_end":37,"column_start":12,"column_end":17},"name":"clear","qualname":"<Layouter>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2010},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\layouter.rs","byte_start":727835,"byte_end":727843,"line_start":41,"line_end":41,"column_start":12,"column_end":20},"name":"round_up","qualname":"<Layouter>::round_up","value":"pub fn round_up(Alignment, u32) -> u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2011},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\layouter.rs","byte_start":728043,"byte_end":728059,"line_start":48,"line_end":48,"column_start":12,"column_end":28},"name":"member_placement","qualname":"<Layouter>::member_placement","value":"pub fn member_placement(&Self, u32, Handle<crate::Type>, Option<Alignment>,\n                        Option<NonZeroU32>) -> (ops::Range<u32>, Alignment)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2012},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\layouter.rs","byte_start":728572,"byte_end":728578,"line_start":65,"line_end":65,"column_start":12,"column_end":18},"name":"update","qualname":"<Layouter>::update","value":"pub fn update(&mut Self, &UniqueArena<crate::Type>, &Arena<crate::Constant>)\n-> Result<(), InvalidBaseType>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":2030},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\namer.rs","byte_start":731732,"byte_end":731747,"line_start":4,"line_end":4,"column_start":10,"column_end":25},"name":"EntryPointIndex","qualname":"::proc::namer::EntryPointIndex","value":"u16","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3862},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\namer.rs","byte_start":731846,"byte_end":731854,"line_start":9,"line_end":9,"column_start":5,"column_end":13},"name":"Constant","qualname":"::proc::namer::NameKey::Constant","value":"NameKey::Constant(Handle<crate::Constant>)","parent":{"krate":0,"index":3861},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3865},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\namer.rs","byte_start":731885,"byte_end":731899,"line_start":10,"line_end":10,"column_start":5,"column_end":19},"name":"GlobalVariable","qualname":"::proc::namer::NameKey::GlobalVariable","value":"NameKey::GlobalVariable(Handle<crate::GlobalVariable>)","parent":{"krate":0,"index":3861},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3868},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\namer.rs","byte_start":731936,"byte_end":731940,"line_start":11,"line_end":11,"column_start":5,"column_end":9},"name":"Type","qualname":"::proc::namer::NameKey::Type","value":"NameKey::Type(Handle<crate::Type>)","parent":{"krate":0,"index":3861},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3871},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\namer.rs","byte_start":731967,"byte_end":731979,"line_start":12,"line_end":12,"column_start":5,"column_end":17},"name":"StructMember","qualname":"::proc::namer::NameKey::StructMember","value":"NameKey::StructMember(Handle<crate::Type>, u32)","parent":{"krate":0,"index":3861},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3875},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\namer.rs","byte_start":732011,"byte_end":732019,"line_start":13,"line_end":13,"column_start":5,"column_end":13},"name":"Function","qualname":"::proc::namer::NameKey::Function","value":"NameKey::Function(Handle<crate::Function>)","parent":{"krate":0,"index":3861},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3878},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\namer.rs","byte_start":732050,"byte_end":732066,"line_start":14,"line_end":14,"column_start":5,"column_end":21},"name":"FunctionArgument","qualname":"::proc::namer::NameKey::FunctionArgument","value":"NameKey::FunctionArgument(Handle<crate::Function>, u32)","parent":{"krate":0,"index":3861},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3882},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\namer.rs","byte_start":732102,"byte_end":732115,"line_start":15,"line_end":15,"column_start":5,"column_end":18},"name":"FunctionLocal","qualname":"::proc::namer::NameKey::FunctionLocal","value":"NameKey::FunctionLocal(Handle<crate::Function>, Handle<crate::LocalVariable>)","parent":{"krate":0,"index":3861},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3886},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\namer.rs","byte_start":732176,"byte_end":732186,"line_start":16,"line_end":16,"column_start":5,"column_end":15},"name":"EntryPoint","qualname":"::proc::namer::NameKey::EntryPoint","value":"NameKey::EntryPoint(EntryPointIndex)","parent":{"krate":0,"index":3861},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3889},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\namer.rs","byte_start":732209,"byte_end":732224,"line_start":17,"line_end":17,"column_start":5,"column_end":20},"name":"EntryPointLocal","qualname":"::proc::namer::NameKey::EntryPointLocal","value":"NameKey::EntryPointLocal(EntryPointIndex, Handle<crate::LocalVariable>)","parent":{"krate":0,"index":3861},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3893},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\namer.rs","byte_start":732277,"byte_end":732295,"line_start":18,"line_end":18,"column_start":5,"column_end":23},"name":"EntryPointArgument","qualname":"::proc::namer::NameKey::EntryPointArgument","value":"NameKey::EntryPointArgument(EntryPointIndex, u32)","parent":{"krate":0,"index":3861},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3861},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\namer.rs","byte_start":731832,"byte_end":731839,"line_start":8,"line_end":8,"column_start":10,"column_end":17},"name":"NameKey","qualname":"::proc::namer::NameKey","value":"pub enum NameKey {\n    Constant(Handle<crate::Constant>),\n    GlobalVariable(Handle<crate::GlobalVariable>),\n    Type(Handle<crate::Type>),\n    StructMember(Handle<crate::Type>, u32),\n    Function(Handle<crate::Function>),\n    FunctionArgument(Handle<crate::Function>, u32),\n    FunctionLocal(Handle<crate::Function>, Handle<crate::LocalVariable>),\n    EntryPoint(EntryPointIndex),\n    EntryPointLocal(EntryPointIndex, Handle<crate::LocalVariable>),\n    EntryPointArgument(EntryPointIndex, u32),\n}","parent":null,"children":[{"krate":0,"index":3862},{"krate":0,"index":3865},{"krate":0,"index":3868},{"krate":0,"index":3871},{"krate":0,"index":3875},{"krate":0,"index":3878},{"krate":0,"index":3882},{"krate":0,"index":3886},{"krate":0,"index":3889},{"krate":0,"index":3893}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3909},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\namer.rs","byte_start":732467,"byte_end":732472,"line_start":24,"line_end":24,"column_start":12,"column_end":17},"name":"Namer","qualname":"::proc::namer::Namer","value":"Namer {  }","parent":null,"children":[{"krate":0,"index":3910},{"krate":0,"index":3911},{"krate":0,"index":3912}],"decl_id":null,"docs":" This processor assigns names to all the things in a module\n that may need identifiers in a textual backend.\n","sig":null,"attributes":[{"value":"/ This processor assigns names to all the things in a module","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\namer.rs","byte_start":732322,"byte_end":732384,"line_start":21,"line_end":21,"column_start":1,"column_end":63}},{"value":"/ that may need identifiers in a textual backend.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\namer.rs","byte_start":732385,"byte_end":732436,"line_start":22,"line_end":22,"column_start":1,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2038},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\namer.rs","byte_start":734527,"byte_end":734531,"line_start":83,"line_end":83,"column_start":12,"column_end":16},"name":"call","qualname":"<Namer>::call","value":"pub fn call(&mut Self, &str) -> String","parent":null,"children":[],"decl_id":null,"docs":" Return a new identifier based on `label_raw`.","sig":null,"attributes":[{"value":"/ Return a new identifier based on `label_raw`.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\namer.rs","byte_start":734134,"byte_end":734183,"line_start":74,"line_end":74,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\namer.rs","byte_start":734188,"byte_end":734191,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ The result:","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\namer.rs","byte_start":734196,"byte_end":734211,"line_start":76,"line_end":76,"column_start":5,"column_end":20}},{"value":"/ - is a valid identifier even if `label_raw` is not","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\namer.rs","byte_start":734216,"byte_end":734270,"line_start":77,"line_end":77,"column_start":5,"column_end":59}},{"value":"/ - conflicts with no keywords listed in `Namer::keywords`, and","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\namer.rs","byte_start":734275,"byte_end":734340,"line_start":78,"line_end":78,"column_start":5,"column_end":70}},{"value":"/ - is different from any identifier previously constructed by this","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\namer.rs","byte_start":734345,"byte_end":734414,"line_start":79,"line_end":79,"column_start":5,"column_end":74}},{"value":"/   `Namer`.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\namer.rs","byte_start":734419,"byte_end":734433,"line_start":80,"line_end":80,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\namer.rs","byte_start":734438,"byte_end":734441,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ Guarantee uniqueness by applying a numeric suffix when necessary.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\namer.rs","byte_start":734446,"byte_end":734515,"line_start":82,"line_end":82,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":2042},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\namer.rs","byte_start":736050,"byte_end":736057,"line_start":116,"line_end":116,"column_start":12,"column_end":19},"name":"call_or","qualname":"<Namer>::call_or","value":"pub fn call_or(&mut Self, &Option<String>, &str) -> String","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2045},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\namer.rs","byte_start":736809,"byte_end":736814,"line_start":135,"line_end":135,"column_start":12,"column_end":17},"name":"reset","qualname":"<Namer>::reset","value":"pub fn reset(&mut Self, &crate::Module, &[&str], &[&str],\n             &mut FastHashMap<NameKey, String>)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2053},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\terminator.rs","byte_start":742403,"byte_end":742423,"line_start":7,"line_end":7,"column_start":8,"column_end":28},"name":"ensure_block_returns","qualname":"::proc::terminator::ensure_block_returns","value":"pub fn ensure_block_returns(&mut crate::Block)","parent":null,"children":[],"decl_id":null,"docs":" Ensure that the given block has return statements\n at the end of its control flow.","sig":null,"attributes":[{"value":"/ Ensure that the given block has return statements","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\terminator.rs","byte_start":742114,"byte_end":742167,"line_start":1,"line_end":1,"column_start":1,"column_end":54}},{"value":"/ at the end of its control flow.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\terminator.rs","byte_start":742168,"byte_end":742203,"line_start":2,"line_end":2,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\terminator.rs","byte_start":742204,"byte_end":742207,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"/ Note: we don't want to blindly append a return statement","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\terminator.rs","byte_start":742208,"byte_end":742268,"line_start":4,"line_end":4,"column_start":1,"column_end":61}},{"value":"/ to the end, because it may be either redundant or invalid,","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\terminator.rs","byte_start":742269,"byte_end":742331,"line_start":5,"line_end":5,"column_start":1,"column_end":63}},{"value":"/ e.g. when the user already has returns in if/else branches.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\terminator.rs","byte_start":742332,"byte_end":742395,"line_start":6,"line_end":6,"column_start":1,"column_end":64}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3916},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\typifier.rs","byte_start":747201,"byte_end":747207,"line_start":89,"line_end":89,"column_start":5,"column_end":11},"name":"Handle","qualname":"::proc::typifier::TypeResolution::Handle","value":"TypeResolution::Handle(Handle<crate::Type>)","parent":{"krate":0,"index":3915},"children":[],"decl_id":null,"docs":" A type stored in the associated arena.\n","sig":null,"attributes":[{"value":"/ A type stored in the associated arena.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\typifier.rs","byte_start":747154,"byte_end":747196,"line_start":88,"line_end":88,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3919},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\typifier.rs","byte_start":747510,"byte_end":747515,"line_start":96,"line_end":96,"column_start":5,"column_end":10},"name":"Value","qualname":"::proc::typifier::TypeResolution::Value","value":"TypeResolution::Value(crate::TypeInner)","parent":{"krate":0,"index":3915},"children":[],"decl_id":null,"docs":" A free-floating [`TypeInner`], representing a type that may not be\n available in the associated arena. However, the `TypeInner` itself may\n contain `Handle<Type>` values referring to types from the arena.","sig":null,"attributes":[{"value":"/ A free-floating [`TypeInner`], representing a type that may not be","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\typifier.rs","byte_start":747235,"byte_end":747305,"line_start":91,"line_end":91,"column_start":5,"column_end":75}},{"value":"/ available in the associated arena. However, the `TypeInner` itself may","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\typifier.rs","byte_start":747310,"byte_end":747384,"line_start":92,"line_end":92,"column_start":5,"column_end":79}},{"value":"/ contain `Handle<Type>` values referring to types from the arena.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\typifier.rs","byte_start":747389,"byte_end":747457,"line_start":93,"line_end":93,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\typifier.rs","byte_start":747462,"byte_end":747465,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ [`TypeInner`]: crate::TypeInner","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\typifier.rs","byte_start":747470,"byte_end":747505,"line_start":95,"line_end":95,"column_start":5,"column_end":40}}]},{"kind":"Enum","id":{"krate":0,"index":3915},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\typifier.rs","byte_start":747133,"byte_end":747147,"line_start":87,"line_end":87,"column_start":10,"column_end":24},"name":"TypeResolution","qualname":"::proc::typifier::TypeResolution","value":"pub enum TypeResolution {\n    Handle(Handle<crate::Type>),\n    Value(crate::TypeInner),\n}","parent":null,"children":[{"krate":0,"index":3916},{"krate":0,"index":3919}],"decl_id":null,"docs":" The result of computing an expression's type.","sig":null,"attributes":[{"value":"/ The result of computing an expression's type.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\typifier.rs","byte_start":743721,"byte_end":743770,"line_start":5,"line_end":5,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\typifier.rs","byte_start":743771,"byte_end":743774,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This is the (Rust) type returned by [`ResolveContext::resolve`] to represent","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\typifier.rs","byte_start":743775,"byte_end":743855,"line_start":7,"line_end":7,"column_start":1,"column_end":81}},{"value":"/ the (Naga) type it ascribes to some expression.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\typifier.rs","byte_start":743856,"byte_end":743907,"line_start":8,"line_end":8,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\typifier.rs","byte_start":743908,"byte_end":743911,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ You might expect such a function to simply return a `Handle<Type>`. However,","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\typifier.rs","byte_start":743912,"byte_end":743992,"line_start":10,"line_end":10,"column_start":1,"column_end":81}},{"value":"/ we want type resolution to be a read-only process, and that would limit the","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\typifier.rs","byte_start":743993,"byte_end":744072,"line_start":11,"line_end":11,"column_start":1,"column_end":80}},{"value":"/ possible results to types already present in the expression's associated","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\typifier.rs","byte_start":744073,"byte_end":744149,"line_start":12,"line_end":12,"column_start":1,"column_end":77}},{"value":"/ `UniqueArena<Type>`. Naga IR does have certain expressions whose types are","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\typifier.rs","byte_start":744150,"byte_end":744228,"line_start":13,"line_end":13,"column_start":1,"column_end":79}},{"value":"/ not certain to be present.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\typifier.rs","byte_start":744229,"byte_end":744259,"line_start":14,"line_end":14,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\typifier.rs","byte_start":744260,"byte_end":744263,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ So instead, type resolution returns a `TypeResolution` enum: either a","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\typifier.rs","byte_start":744264,"byte_end":744337,"line_start":16,"line_end":16,"column_start":1,"column_end":74}},{"value":"/ [`Handle`], referencing some type in the arena, or a [`Value`], holding a","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\typifier.rs","byte_start":744338,"byte_end":744415,"line_start":17,"line_end":17,"column_start":1,"column_end":78}},{"value":"/ free-floating [`TypeInner`]. This extends the range to cover anything that","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\typifier.rs","byte_start":744416,"byte_end":744494,"line_start":18,"line_end":18,"column_start":1,"column_end":79}},{"value":"/ can be represented with a `TypeInner` referring to the existing arena.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\typifier.rs","byte_start":744495,"byte_end":744569,"line_start":19,"line_end":19,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\typifier.rs","byte_start":744570,"byte_end":744573,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ What sorts of expressions can have types not available in the arena?","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\typifier.rs","byte_start":744574,"byte_end":744646,"line_start":21,"line_end":21,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\typifier.rs","byte_start":744647,"byte_end":744650,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ -   An [`Access`] or [`AccessIndex`] expression applied to a [`Vector`] or","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\typifier.rs","byte_start":744651,"byte_end":744729,"line_start":23,"line_end":23,"column_start":1,"column_end":79}},{"value":"/     [`Matrix`] must have a [`Scalar`] or [`Vector`] type. But since `Vector`","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\typifier.rs","byte_start":744730,"byte_end":744810,"line_start":24,"line_end":24,"column_start":1,"column_end":81}},{"value":"/     and `Matrix` represent their element and column types implicitly, not","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\typifier.rs","byte_start":744811,"byte_end":744888,"line_start":25,"line_end":25,"column_start":1,"column_end":78}},{"value":"/     via a handle, there may not be a suitable type in the expression's","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\typifier.rs","byte_start":744889,"byte_end":744963,"line_start":26,"line_end":26,"column_start":1,"column_end":75}},{"value":"/     associated arena. Instead, resolving such an expression returns a","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\typifier.rs","byte_start":744964,"byte_end":745037,"line_start":27,"line_end":27,"column_start":1,"column_end":74}},{"value":"/     `TypeResolution::Value(TypeInner::X { ... })`, where `X` is `Scalar` or","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\typifier.rs","byte_start":745038,"byte_end":745117,"line_start":28,"line_end":28,"column_start":1,"column_end":80}},{"value":"/     `Vector`.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\typifier.rs","byte_start":745118,"byte_end":745135,"line_start":29,"line_end":29,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\typifier.rs","byte_start":745136,"byte_end":745139,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ -   Similarly, the type of an [`Access`] or [`AccessIndex`] expression","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\typifier.rs","byte_start":745140,"byte_end":745214,"line_start":31,"line_end":31,"column_start":1,"column_end":75}},{"value":"/     applied to a *pointer to* a vector or matrix must produce a *pointer to*","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\typifier.rs","byte_start":745215,"byte_end":745295,"line_start":32,"line_end":32,"column_start":1,"column_end":81}},{"value":"/     a scalar or vector type. These cannot be represented with a","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\typifier.rs","byte_start":745296,"byte_end":745363,"line_start":33,"line_end":33,"column_start":1,"column_end":68}},{"value":"/     [`TypeInner::Pointer`], since the `Pointer`'s `base` must point into the","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\typifier.rs","byte_start":745364,"byte_end":745444,"line_start":34,"line_end":34,"column_start":1,"column_end":81}},{"value":"/     arena, and as before, we cannot assume that a suitable scalar or vector","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\typifier.rs","byte_start":745445,"byte_end":745524,"line_start":35,"line_end":35,"column_start":1,"column_end":80}},{"value":"/     type is there. So we take things one step further and provide","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\typifier.rs","byte_start":745525,"byte_end":745594,"line_start":36,"line_end":36,"column_start":1,"column_end":70}},{"value":"/     [`TypeInner::ValuePointer`], specifically for the case of pointers to","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\typifier.rs","byte_start":745595,"byte_end":745672,"line_start":37,"line_end":37,"column_start":1,"column_end":78}},{"value":"/     scalars or vectors. This type fits in a `TypeInner` and is exactly","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\typifier.rs","byte_start":745673,"byte_end":745747,"line_start":38,"line_end":38,"column_start":1,"column_end":75}},{"value":"/     equivalent to a `Pointer` to a `Vector` or `Scalar`.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\typifier.rs","byte_start":745748,"byte_end":745808,"line_start":39,"line_end":39,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\typifier.rs","byte_start":745809,"byte_end":745812,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ So, for example, the type of an `Access` expression applied to a value of type:","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\typifier.rs","byte_start":745813,"byte_end":745896,"line_start":41,"line_end":41,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\typifier.rs","byte_start":745897,"byte_end":745900,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ ```ignore","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\typifier.rs","byte_start":745901,"byte_end":745914,"line_start":43,"line_end":43,"column_start":1,"column_end":14}},{"value":"/ TypeInner::Matrix { columns, rows, width }","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\typifier.rs","byte_start":745915,"byte_end":745961,"line_start":44,"line_end":44,"column_start":1,"column_end":47}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\typifier.rs","byte_start":745962,"byte_end":745969,"line_start":45,"line_end":45,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\typifier.rs","byte_start":745970,"byte_end":745973,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ might be:","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\typifier.rs","byte_start":745974,"byte_end":745987,"line_start":47,"line_end":47,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\typifier.rs","byte_start":745988,"byte_end":745991,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ ```ignore","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\typifier.rs","byte_start":745992,"byte_end":746005,"line_start":49,"line_end":49,"column_start":1,"column_end":14}},{"value":"/ TypeResolution::Value(TypeInner::Vector {","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\typifier.rs","byte_start":746006,"byte_end":746051,"line_start":50,"line_end":50,"column_start":1,"column_end":46}},{"value":"/     size: rows,","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\typifier.rs","byte_start":746052,"byte_end":746071,"line_start":51,"line_end":51,"column_start":1,"column_end":20}},{"value":"/     kind: ScalarKind::Float,","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\typifier.rs","byte_start":746072,"byte_end":746104,"line_start":52,"line_end":52,"column_start":1,"column_end":33}},{"value":"/     width,","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\typifier.rs","byte_start":746105,"byte_end":746119,"line_start":53,"line_end":53,"column_start":1,"column_end":15}},{"value":"/ })","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\typifier.rs","byte_start":746120,"byte_end":746126,"line_start":54,"line_end":54,"column_start":1,"column_end":7}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\typifier.rs","byte_start":746127,"byte_end":746134,"line_start":55,"line_end":55,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\typifier.rs","byte_start":746135,"byte_end":746138,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ and the type of an access to a pointer of storage class `class` to such a","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\typifier.rs","byte_start":746139,"byte_end":746216,"line_start":57,"line_end":57,"column_start":1,"column_end":78}},{"value":"/ matrix might be:","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\typifier.rs","byte_start":746217,"byte_end":746237,"line_start":58,"line_end":58,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\typifier.rs","byte_start":746238,"byte_end":746241,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ ```ignore","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\typifier.rs","byte_start":746242,"byte_end":746255,"line_start":60,"line_end":60,"column_start":1,"column_end":14}},{"value":"/ TypeResolution::Value(TypeInner::ValuePointer {","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\typifier.rs","byte_start":746256,"byte_end":746307,"line_start":61,"line_end":61,"column_start":1,"column_end":52}},{"value":"/     size: Some(rows),","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\typifier.rs","byte_start":746308,"byte_end":746333,"line_start":62,"line_end":62,"column_start":1,"column_end":26}},{"value":"/     kind: ScalarKind::Float,","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\typifier.rs","byte_start":746334,"byte_end":746366,"line_start":63,"line_end":63,"column_start":1,"column_end":33}},{"value":"/     width,","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\typifier.rs","byte_start":746367,"byte_end":746381,"line_start":64,"line_end":64,"column_start":1,"column_end":15}},{"value":"/     class","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\typifier.rs","byte_start":746382,"byte_end":746395,"line_start":65,"line_end":65,"column_start":1,"column_end":14}},{"value":"/ })","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\typifier.rs","byte_start":746396,"byte_end":746402,"line_start":66,"line_end":66,"column_start":1,"column_end":7}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\typifier.rs","byte_start":746403,"byte_end":746410,"line_start":67,"line_end":67,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\typifier.rs","byte_start":746411,"byte_end":746414,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ [`Handle`]: TypeResolution::Handle","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\typifier.rs","byte_start":746415,"byte_end":746453,"line_start":69,"line_end":69,"column_start":1,"column_end":39}},{"value":"/ [`Value`]: TypeResolution::Value","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\typifier.rs","byte_start":746454,"byte_end":746490,"line_start":70,"line_end":70,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\typifier.rs","byte_start":746491,"byte_end":746494,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ [`Access`]: crate::Expression::Access","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\typifier.rs","byte_start":746495,"byte_end":746536,"line_start":72,"line_end":72,"column_start":1,"column_end":42}},{"value":"/ [`AccessIndex`]: crate::Expression::AccessIndex","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\typifier.rs","byte_start":746537,"byte_end":746588,"line_start":73,"line_end":73,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\typifier.rs","byte_start":746589,"byte_end":746592,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ [`TypeInner`]: crate::TypeInner","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\typifier.rs","byte_start":746593,"byte_end":746628,"line_start":75,"line_end":75,"column_start":1,"column_end":36}},{"value":"/ [`Matrix`]: crate::TypeInner::Matrix","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\typifier.rs","byte_start":746629,"byte_end":746669,"line_start":76,"line_end":76,"column_start":1,"column_end":41}},{"value":"/ [`Pointer`]: crate::TypeInner::Pointer","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\typifier.rs","byte_start":746670,"byte_end":746712,"line_start":77,"line_end":77,"column_start":1,"column_end":43}},{"value":"/ [`Scalar`]: crate::TypeInner::Scalar","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\typifier.rs","byte_start":746713,"byte_end":746753,"line_start":78,"line_end":78,"column_start":1,"column_end":41}},{"value":"/ [`ValuePointer`]: crate::TypeInner::ValuePointer","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\typifier.rs","byte_start":746754,"byte_end":746806,"line_start":79,"line_end":79,"column_start":1,"column_end":53}},{"value":"/ [`Vector`]: crate::TypeInner::Vector","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\typifier.rs","byte_start":746807,"byte_end":746847,"line_start":80,"line_end":80,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\typifier.rs","byte_start":746848,"byte_end":746851,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ [`TypeInner::Pointer`]: crate::TypeInner::Pointer","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\typifier.rs","byte_start":746852,"byte_end":746905,"line_start":82,"line_end":82,"column_start":1,"column_end":54}},{"value":"/ [`TypeInner::ValuePointer`]: crate::TypeInner::ValuePointer","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\typifier.rs","byte_start":746906,"byte_end":746969,"line_start":83,"line_end":83,"column_start":1,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":2072},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\typifier.rs","byte_start":747571,"byte_end":747577,"line_start":100,"line_end":100,"column_start":12,"column_end":18},"name":"handle","qualname":"<TypeResolution>::handle","value":"pub fn handle(&Self) -> Option<Handle<crate::Type>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2073},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\typifier.rs","byte_start":747754,"byte_end":747764,"line_start":107,"line_end":107,"column_start":12,"column_end":22},"name":"inner_with","qualname":"<TypeResolution>::inner_with","value":"pub fn inner_with<'a>(&'a Self, &'a UniqueArena<crate::Type>)\n-> &'a crate::TypeInner","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2081},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\typifier.rs","byte_start":749218,"byte_end":749230,"line_start":152,"line_end":152,"column_start":12,"column_end":24},"name":"resolve_type","qualname":"<crate::ConstantInner>::resolve_type","value":"pub fn resolve_type(&Self) -> TypeResolution","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3947},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\typifier.rs","byte_start":749701,"byte_end":749717,"line_start":166,"line_end":166,"column_start":5,"column_end":21},"name":"OutOfBoundsIndex","qualname":"::proc::typifier::ResolveError::OutOfBoundsIndex","value":"ResolveError::OutOfBoundsIndex { expr, index }","parent":{"krate":0,"index":3928},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Index {index} is out of bounds for expression {expr:?}\")","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\typifier.rs","byte_start":749630,"byte_end":749696,"line_start":165,"line_end":165,"column_start":5,"column_end":71}}]},{"kind":"StructVariant","id":{"krate":0,"index":3950},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\typifier.rs","byte_start":749868,"byte_end":749881,"line_start":171,"line_end":171,"column_start":5,"column_end":18},"name":"InvalidAccess","qualname":"::proc::typifier::ResolveError::InvalidAccess","value":"ResolveError::InvalidAccess { expr, indexed }","parent":{"krate":0,"index":3928},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Invalid access into expression {expr:?}, indexed: {indexed}\")","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\typifier.rs","byte_start":749792,"byte_end":749863,"line_start":170,"line_end":170,"column_start":5,"column_end":76}}]},{"kind":"StructVariant","id":{"krate":0,"index":3953},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\typifier.rs","byte_start":750031,"byte_end":750047,"line_start":176,"line_end":176,"column_start":5,"column_end":21},"name":"InvalidSubAccess","qualname":"::proc::typifier::ResolveError::InvalidSubAccess","value":"ResolveError::InvalidSubAccess { ty, indexed }","parent":{"krate":0,"index":3928},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Invalid sub-access into type {ty:?}, indexed: {indexed}\")","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\typifier.rs","byte_start":749959,"byte_end":750026,"line_start":175,"line_end":175,"column_start":5,"column_end":72}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3956},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\typifier.rs","byte_start":750154,"byte_end":750167,"line_start":181,"line_end":181,"column_start":5,"column_end":18},"name":"InvalidScalar","qualname":"::proc::typifier::ResolveError::InvalidScalar","value":"ResolveError::InvalidScalar(Handle<crate::Expression>)","parent":{"krate":0,"index":3928},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Invalid scalar {0:?}\")","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\typifier.rs","byte_start":750117,"byte_end":750149,"line_start":180,"line_end":180,"column_start":5,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3959},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\typifier.rs","byte_start":750237,"byte_end":750250,"line_start":183,"line_end":183,"column_start":5,"column_end":18},"name":"InvalidVector","qualname":"::proc::typifier::ResolveError::InvalidVector","value":"ResolveError::InvalidVector(Handle<crate::Expression>)","parent":{"krate":0,"index":3928},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Invalid vector {0:?}\")","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\typifier.rs","byte_start":750200,"byte_end":750232,"line_start":182,"line_end":182,"column_start":5,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3962},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\typifier.rs","byte_start":750321,"byte_end":750335,"line_start":185,"line_end":185,"column_start":5,"column_end":19},"name":"InvalidPointer","qualname":"::proc::typifier::ResolveError::InvalidPointer","value":"ResolveError::InvalidPointer(Handle<crate::Expression>)","parent":{"krate":0,"index":3928},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Invalid pointer {0:?}\")","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\typifier.rs","byte_start":750283,"byte_end":750316,"line_start":184,"line_end":184,"column_start":5,"column_end":38}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3965},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\typifier.rs","byte_start":750404,"byte_end":750416,"line_start":187,"line_end":187,"column_start":5,"column_end":17},"name":"InvalidImage","qualname":"::proc::typifier::ResolveError::InvalidImage","value":"ResolveError::InvalidImage(Handle<crate::Expression>)","parent":{"krate":0,"index":3928},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Invalid image {0:?}\")","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\typifier.rs","byte_start":750368,"byte_end":750399,"line_start":186,"line_end":186,"column_start":5,"column_end":36}}]},{"kind":"StructVariant","id":{"krate":0,"index":3968},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\typifier.rs","byte_start":750493,"byte_end":750511,"line_start":189,"line_end":189,"column_start":5,"column_end":23},"name":"FunctionNotDefined","qualname":"::proc::typifier::ResolveError::FunctionNotDefined","value":"ResolveError::FunctionNotDefined { name }","parent":{"krate":0,"index":3928},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Function {name} not defined\")","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\typifier.rs","byte_start":750449,"byte_end":750488,"line_start":188,"line_end":188,"column_start":5,"column_end":44}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3970},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\typifier.rs","byte_start":750579,"byte_end":750598,"line_start":191,"line_end":191,"column_start":5,"column_end":24},"name":"FunctionReturnsVoid","qualname":"::proc::typifier::ResolveError::FunctionReturnsVoid","value":"ResolveError::FunctionReturnsVoid","parent":{"krate":0,"index":3928},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Function without return type\")","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\typifier.rs","byte_start":750534,"byte_end":750574,"line_start":190,"line_end":190,"column_start":5,"column_end":45}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3972},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\typifier.rs","byte_start":750667,"byte_end":750679,"line_start":193,"line_end":193,"column_start":5,"column_end":17},"name":"TypeNotFound","qualname":"::proc::typifier::ResolveError::TypeNotFound","value":"ResolveError::TypeNotFound","parent":{"krate":0,"index":3928},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Type is not found in the given immutable arena\")","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\typifier.rs","byte_start":750604,"byte_end":750662,"line_start":192,"line_end":192,"column_start":5,"column_end":63}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3974},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\typifier.rs","byte_start":750728,"byte_end":750748,"line_start":195,"line_end":195,"column_start":5,"column_end":25},"name":"IncompatibleOperands","qualname":"::proc::typifier::ResolveError::IncompatibleOperands","value":"ResolveError::IncompatibleOperands(String)","parent":{"krate":0,"index":3928},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Incompatible operands: {0}\")","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\typifier.rs","byte_start":750685,"byte_end":750723,"line_start":194,"line_end":194,"column_start":5,"column_end":43}}]},{"kind":"Enum","id":{"krate":0,"index":3928},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\typifier.rs","byte_start":749611,"byte_end":749623,"line_start":164,"line_end":164,"column_start":10,"column_end":22},"name":"ResolveError","qualname":"::proc::typifier::ResolveError","value":"pub enum ResolveError {\n    OutOfBoundsIndex {\n        expr: Handle<crate::Expression>,\n        index: u32,\n    },\n    InvalidAccess {\n        expr: Handle<crate::Expression>,\n        indexed: bool,\n    },\n    InvalidSubAccess {\n        ty: Handle<crate::Type>,\n        indexed: bool,\n    },\n    InvalidScalar(Handle<crate::Expression>),\n    InvalidVector(Handle<crate::Expression>),\n    InvalidPointer(Handle<crate::Expression>),\n    InvalidImage(Handle<crate::Expression>),\n    FunctionNotDefined {\n        name: String,\n    },\n    FunctionReturnsVoid,\n    TypeNotFound,\n    IncompatibleOperands(String),\n}","parent":null,"children":[{"krate":0,"index":3947},{"krate":0,"index":3950},{"krate":0,"index":3953},{"krate":0,"index":3956},{"krate":0,"index":3959},{"krate":0,"index":3962},{"krate":0,"index":3965},{"krate":0,"index":3968},{"krate":0,"index":3970},{"krate":0,"index":3972},{"krate":0,"index":3974}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2082},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\typifier.rs","byte_start":750772,"byte_end":750786,"line_start":198,"line_end":198,"column_start":12,"column_end":26},"name":"ResolveContext","qualname":"::proc::typifier::ResolveContext","value":"ResolveContext { constants, types, global_vars, local_vars, functions, arguments }","parent":null,"children":[{"krate":0,"index":2084},{"krate":0,"index":2085},{"krate":0,"index":2086},{"krate":0,"index":2087},{"krate":0,"index":2088},{"krate":0,"index":2089}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2084},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\typifier.rs","byte_start":750801,"byte_end":750810,"line_start":199,"line_end":199,"column_start":9,"column_end":18},"name":"constants","qualname":"::proc::typifier::ResolveContext::constants","value":"&'a arena::Arena<Constant>","parent":{"krate":0,"index":2082},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2085},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\typifier.rs","byte_start":750848,"byte_end":750853,"line_start":200,"line_end":200,"column_start":9,"column_end":14},"name":"types","qualname":"::proc::typifier::ResolveContext::types","value":"&'a arena::UniqueArena<Type>","parent":{"krate":0,"index":2082},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2086},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\typifier.rs","byte_start":750893,"byte_end":750904,"line_start":201,"line_end":201,"column_start":9,"column_end":20},"name":"global_vars","qualname":"::proc::typifier::ResolveContext::global_vars","value":"&'a arena::Arena<GlobalVariable>","parent":{"krate":0,"index":2082},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2087},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\typifier.rs","byte_start":750948,"byte_end":750958,"line_start":202,"line_end":202,"column_start":9,"column_end":19},"name":"local_vars","qualname":"::proc::typifier::ResolveContext::local_vars","value":"&'a arena::Arena<LocalVariable>","parent":{"krate":0,"index":2082},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2088},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\typifier.rs","byte_start":751001,"byte_end":751010,"line_start":203,"line_end":203,"column_start":9,"column_end":18},"name":"functions","qualname":"::proc::typifier::ResolveContext::functions","value":"&'a arena::Arena<Function>","parent":{"krate":0,"index":2082},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2089},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\typifier.rs","byte_start":751048,"byte_end":751057,"line_start":204,"line_end":204,"column_start":9,"column_end":18},"name":"arguments","qualname":"::proc::typifier::ResolveContext::arguments","value":"&'a [FunctionArgument]","parent":{"krate":0,"index":2082},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2092},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\typifier.rs","byte_start":751923,"byte_end":751930,"line_start":223,"line_end":223,"column_start":12,"column_end":19},"name":"resolve","qualname":"<ResolveContext>::resolve","value":"pub fn resolve<impl Fn(Handle<crate::Expression>) -> &'a TypeResolution: Fn(Handle<crate::Expression>)\n               ->\n               &'a TypeResolution>(&Self, &crate::Expression,\n                                   impl Fn(Handle<crate::Expression>) -> &'a TypeResolution)\n-> Result<TypeResolution, ResolveError>","parent":null,"children":[],"decl_id":null,"docs":" Determine the type of `expr`.","sig":null,"attributes":[{"value":"/ Determine the type of `expr`.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\typifier.rs","byte_start":751127,"byte_end":751160,"line_start":208,"line_end":208,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\typifier.rs","byte_start":751165,"byte_end":751168,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ The `past` argument must be a closure that can resolve the types of any","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\typifier.rs","byte_start":751173,"byte_end":751248,"line_start":210,"line_end":210,"column_start":5,"column_end":80}},{"value":"/ expressions that `expr` refers to. These can be gathered by caching the","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\typifier.rs","byte_start":751253,"byte_end":751328,"line_start":211,"line_end":211,"column_start":5,"column_end":80}},{"value":"/ results of prior calls to `resolve`, perhaps as done by the","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\typifier.rs","byte_start":751333,"byte_end":751396,"line_start":212,"line_end":212,"column_start":5,"column_end":68}},{"value":"/ [`front::Typifier`] utility type.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\typifier.rs","byte_start":751401,"byte_end":751438,"line_start":213,"line_end":213,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\typifier.rs","byte_start":751443,"byte_end":751446,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ Type resolution is a read-only process: this method takes `self` by","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\typifier.rs","byte_start":751451,"byte_end":751522,"line_start":215,"line_end":215,"column_start":5,"column_end":76}},{"value":"/ shared reference. However, this means that we cannot add anything to","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\typifier.rs","byte_start":751527,"byte_end":751599,"line_start":216,"line_end":216,"column_start":5,"column_end":77}},{"value":"/ `self.types` that we might need to describe `expr`. To work around this,","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\typifier.rs","byte_start":751604,"byte_end":751680,"line_start":217,"line_end":217,"column_start":5,"column_end":81}},{"value":"/ this method returns a [`TypeResolution`], rather than simply returning a","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\typifier.rs","byte_start":751685,"byte_end":751761,"line_start":218,"line_end":218,"column_start":5,"column_end":81}},{"value":"/ `Handle<Type>`; see the documentation for [`TypeResolution`] for","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\typifier.rs","byte_start":751766,"byte_end":751834,"line_start":219,"line_end":219,"column_start":5,"column_end":73}},{"value":"/ details.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\typifier.rs","byte_start":751839,"byte_end":751851,"line_start":220,"line_end":220,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\typifier.rs","byte_start":751856,"byte_end":751859,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ [`front::Typifier`]: crate::front::Typifier","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\typifier.rs","byte_start":751864,"byte_end":751911,"line_start":222,"line_end":222,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3989},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\mod.rs","byte_start":709882,"byte_end":709898,"line_start":20,"line_end":20,"column_start":5,"column_end":21},"name":"TypeNotIndexable","qualname":"::proc::ProcError::TypeNotIndexable","value":"ProcError::TypeNotIndexable","parent":{"krate":0,"index":3977},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"type is not indexable, and has no length (validation error)\")","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\mod.rs","byte_start":709806,"byte_end":709877,"line_start":19,"line_end":19,"column_start":5,"column_end":76}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3991},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\mod.rs","byte_start":709978,"byte_end":710002,"line_start":22,"line_end":22,"column_start":5,"column_end":29},"name":"InvalidArraySizeConstant","qualname":"::proc::ProcError::InvalidArraySizeConstant","value":"ProcError::InvalidArraySizeConstant(crate::Handle<crate::Constant>)","parent":{"krate":0,"index":3977},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"array length is wrong kind of constant (validation error)\")","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\mod.rs","byte_start":709904,"byte_end":709973,"line_start":21,"line_end":21,"column_start":5,"column_end":74}}]},{"kind":"Enum","id":{"krate":0,"index":3977},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\mod.rs","byte_start":709790,"byte_end":709799,"line_start":18,"line_end":18,"column_start":10,"column_end":19},"name":"ProcError","qualname":"::proc::ProcError","value":"pub enum ProcError {\n    TypeNotIndexable,\n    InvalidArraySizeConstant(crate::Handle<crate::Constant>),\n}","parent":null,"children":[{"krate":0,"index":3989},{"krate":0,"index":3991}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2153},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\mod.rs","byte_start":711534,"byte_end":711545,"line_start":66,"line_end":66,"column_start":12,"column_end":23},"name":"scalar_kind","qualname":"<super::ScalarValue>::scalar_kind","value":"pub fn scalar_kind(&Self) -> super::ScalarKind","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2154},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\mod.rs","byte_start":711845,"byte_end":711857,"line_start":76,"line_end":76,"column_start":11,"column_end":23},"name":"POINTER_SPAN","qualname":"::proc::POINTER_SPAN","value":"u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2156},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\mod.rs","byte_start":711904,"byte_end":711915,"line_start":79,"line_end":79,"column_start":12,"column_end":23},"name":"scalar_kind","qualname":"<super::TypeInner>::scalar_kind","value":"pub fn scalar_kind(&Self) -> Option<super::ScalarKind>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2157},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\mod.rs","byte_start":712242,"byte_end":712255,"line_start":89,"line_end":89,"column_start":12,"column_end":25},"name":"pointer_class","qualname":"<super::TypeInner>::pointer_class","value":"pub fn pointer_class(&Self) -> Option<crate::StorageClass>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2158},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\mod.rs","byte_start":712486,"byte_end":712490,"line_start":97,"line_end":97,"column_start":12,"column_end":16},"name":"span","qualname":"<super::TypeInner>::span","value":"pub fn span(&Self, &super::Arena<super::Constant>) -> u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2159},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\mod.rs","byte_start":714373,"byte_end":714387,"line_start":143,"line_end":143,"column_start":12,"column_end":26},"name":"canonical_form","qualname":"<super::TypeInner>::canonical_form","value":"pub fn canonical_form(&Self, &crate::UniqueArena<crate::Type>)\n-> Option<crate::TypeInner>","parent":null,"children":[],"decl_id":null,"docs":" Return the canoncal form of `self`, or `None` if it's already in\n canonical form.","sig":null,"attributes":[{"value":"/ Return the canoncal form of `self`, or `None` if it's already in","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\mod.rs","byte_start":713946,"byte_end":714014,"line_start":135,"line_end":135,"column_start":5,"column_end":73}},{"value":"/ canonical form.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\mod.rs","byte_start":714019,"byte_end":714038,"line_start":136,"line_end":136,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\mod.rs","byte_start":714043,"byte_end":714046,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ Certain types have multiple representations in `TypeInner`. This","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\mod.rs","byte_start":714051,"byte_end":714119,"line_start":138,"line_end":138,"column_start":5,"column_end":73}},{"value":"/ function converts all forms of equivalent types to a single","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\mod.rs","byte_start":714124,"byte_end":714187,"line_start":139,"line_end":139,"column_start":5,"column_end":68}},{"value":"/ representative of their class, so that simply applying `Eq` to the","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\mod.rs","byte_start":714192,"byte_end":714262,"line_start":140,"line_end":140,"column_start":5,"column_end":75}},{"value":"/ result indicates whether the types are equivalent, as far as Naga IR is","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\mod.rs","byte_start":714267,"byte_end":714342,"line_start":141,"line_end":141,"column_start":5,"column_end":80}},{"value":"/ concerned.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\mod.rs","byte_start":714347,"byte_end":714361,"line_start":142,"line_end":142,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":2163},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\mod.rs","byte_start":715500,"byte_end":715510,"line_start":176,"line_end":176,"column_start":12,"column_end":22},"name":"equivalent","qualname":"<super::TypeInner>::equivalent","value":"pub fn equivalent(&Self, &crate::TypeInner, &crate::UniqueArena<crate::Type>)\n-> bool","parent":null,"children":[],"decl_id":null,"docs":" Compare `self` and `rhs` as types.","sig":null,"attributes":[{"value":"/ Compare `self` and `rhs` as types.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\mod.rs","byte_start":715118,"byte_end":715156,"line_start":168,"line_end":168,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\mod.rs","byte_start":715161,"byte_end":715164,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ This is mostly the same as `<TypeInner as Eq>::eq`, but it treats","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\mod.rs","byte_start":715169,"byte_end":715238,"line_start":170,"line_end":170,"column_start":5,"column_end":74}},{"value":"/ `ValuePointer` and `Pointer` types as equivalent.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\mod.rs","byte_start":715243,"byte_end":715296,"line_start":171,"line_end":171,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\mod.rs","byte_start":715301,"byte_end":715304,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ When you know that one side of the comparison is never a pointer, it's","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\mod.rs","byte_start":715309,"byte_end":715383,"line_start":173,"line_end":173,"column_start":5,"column_end":79}},{"value":"/ fine to not bother with canonicalization, and just compare `TypeInner`","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\mod.rs","byte_start":715388,"byte_end":715462,"line_start":174,"line_end":174,"column_start":5,"column_end":79}},{"value":"/ values with `==`.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\mod.rs","byte_start":715467,"byte_end":715488,"line_start":175,"line_end":175,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":2165},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\mod.rs","byte_start":715836,"byte_end":715842,"line_start":188,"line_end":188,"column_start":12,"column_end":18},"name":"access","qualname":"<super::StorageClass>::access","value":"pub fn access(Self) -> crate::StorageAccess","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2170},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\mod.rs","byte_start":716377,"byte_end":716391,"line_start":203,"line_end":203,"column_start":12,"column_end":26},"name":"argument_count","qualname":"<super::MathFunction>::argument_count","value":"pub fn argument_count(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2172},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\mod.rs","byte_start":718818,"byte_end":718832,"line_start":283,"line_end":283,"column_start":12,"column_end":26},"name":"needs_pre_emit","qualname":"<crate::Expression>::needs_pre_emit","value":"pub fn needs_pre_emit(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the expression is considered emitted at the start of a function.\n","sig":null,"attributes":[{"value":"/ Returns true if the expression is considered emitted at the start of a function.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\mod.rs","byte_start":718722,"byte_end":718806,"line_start":282,"line_end":282,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":2173},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\mod.rs","byte_start":719747,"byte_end":719763,"line_start":306,"line_end":306,"column_start":12,"column_end":28},"name":"is_dynamic_index","qualname":"<crate::Expression>::is_dynamic_index","value":"pub fn is_dynamic_index(&Self, &crate::Module) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return true if this expression is a dynamic array index, for [`Access`].","sig":null,"attributes":[{"value":"/ Return true if this expression is a dynamic array index, for [`Access`].","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\mod.rs","byte_start":719071,"byte_end":719147,"line_start":293,"line_end":293,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\mod.rs","byte_start":719152,"byte_end":719155,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ This method returns true if this expression is a dynamically computed","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\mod.rs","byte_start":719160,"byte_end":719233,"line_start":295,"line_end":295,"column_start":5,"column_end":78}},{"value":"/ index, and as such can only be used to index matrices and arrays when","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\mod.rs","byte_start":719238,"byte_end":719311,"line_start":296,"line_end":296,"column_start":5,"column_end":78}},{"value":"/ they appear behind a pointer. See the documentation for [`Access`] for","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\mod.rs","byte_start":719316,"byte_end":719390,"line_start":297,"line_end":297,"column_start":5,"column_end":79}},{"value":"/ details.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\mod.rs","byte_start":719395,"byte_end":719407,"line_start":298,"line_end":298,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\mod.rs","byte_start":719412,"byte_end":719415,"line_start":299,"line_end":299,"column_start":5,"column_end":8}},{"value":"/ Note, this does not check the _type_ of the given expression. It's up to","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\mod.rs","byte_start":719420,"byte_end":719496,"line_start":300,"line_end":300,"column_start":5,"column_end":81}},{"value":"/ the caller to establish that the `Access` expression is well-typed","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\mod.rs","byte_start":719501,"byte_end":719571,"line_start":301,"line_end":301,"column_start":5,"column_end":75}},{"value":"/ through other means, like [`ResolveContext`].","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\mod.rs","byte_start":719576,"byte_end":719625,"line_start":302,"line_end":302,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\mod.rs","byte_start":719630,"byte_end":719633,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ [`Access`]: crate::Expression::Access","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\mod.rs","byte_start":719638,"byte_end":719679,"line_start":304,"line_end":304,"column_start":5,"column_end":46}},{"value":"/ [`ResolveContext`]: crate::proc::ResolveContext","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\mod.rs","byte_start":719684,"byte_end":719735,"line_start":305,"line_end":305,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":2175},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\mod.rs","byte_start":720043,"byte_end":720063,"line_start":317,"line_end":317,"column_start":12,"column_end":32},"name":"implicit_derivatives","qualname":"<crate::SampleLevel>::implicit_derivatives","value":"pub fn implicit_derivatives(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2182},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\mod.rs","byte_start":721722,"byte_end":721733,"line_start":357,"line_end":357,"column_start":12,"column_end":23},"name":"to_built_in","qualname":"<crate::Binding>::to_built_in","value":"pub fn to_built_in(&Self) -> Option<crate::BuiltIn>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2190},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\mod.rs","byte_start":722766,"byte_end":722770,"line_start":390,"line_end":390,"column_start":15,"column_end":19},"name":"XYZW","qualname":"::proc::<impl SwizzleComponent>::XYZW","value":"[Self; ]","parent":{"krate":0,"index":2189},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2192},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\mod.rs","byte_start":722834,"byte_end":722839,"line_start":392,"line_end":392,"column_start":12,"column_end":17},"name":"index","qualname":"<super::SwizzleComponent>::index","value":"pub fn index(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2193},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\mod.rs","byte_start":723009,"byte_end":723019,"line_start":400,"line_end":400,"column_start":12,"column_end":22},"name":"from_index","qualname":"<super::SwizzleComponent>::from_index","value":"pub fn from_index(u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3994},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\span.rs","byte_start":779019,"byte_end":779023,"line_start":5,"line_end":5,"column_start":12,"column_end":16},"name":"Span","qualname":"::span::Span","value":"Span {  }","parent":null,"children":[{"krate":0,"index":3995},{"krate":0,"index":3996}],"decl_id":null,"docs":" A source code span, used for error reporting.\n","sig":null,"attributes":[{"value":"/ A source code span, used for error reporting.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\span.rs","byte_start":778908,"byte_end":778957,"line_start":3,"line_end":3,"column_start":1,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":2199},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\span.rs","byte_start":779212,"byte_end":779215,"line_start":14,"line_end":14,"column_start":12,"column_end":15},"name":"new","qualname":"<Span>::new","value":"pub fn new(u32, u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Span` from a range of byte indices","sig":null,"attributes":[{"value":"/ Creates a new `Span` from a range of byte indices","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\span.rs","byte_start":779075,"byte_end":779128,"line_start":11,"line_end":11,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\span.rs","byte_start":779133,"byte_end":779136,"line_start":12,"line_end":12,"column_start":5,"column_end":8}},{"value":"/ Note: end is exclusive, it doesn't belong to the `Span`","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\span.rs","byte_start":779141,"byte_end":779200,"line_start":13,"line_end":13,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":2200},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\span.rs","byte_start":779404,"byte_end":779411,"line_start":20,"line_end":20,"column_start":12,"column_end":19},"name":"subsume","qualname":"<Span>::subsume","value":"pub fn subsume(&mut Self, Self)","parent":null,"children":[],"decl_id":null,"docs":" Modifies `self` to contain the smallest `Span` possible that\n contains both `self` and `other`\n","sig":null,"attributes":[{"value":"/ Modifies `self` to contain the smallest `Span` possible that","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\span.rs","byte_start":779287,"byte_end":779351,"line_start":18,"line_end":18,"column_start":5,"column_end":69}},{"value":"/ contains both `self` and `other`","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\span.rs","byte_start":779356,"byte_end":779392,"line_start":19,"line_end":19,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":2201},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\span.rs","byte_start":780043,"byte_end":780053,"line_start":38,"line_end":38,"column_start":12,"column_end":22},"name":"total_span","qualname":"<Span>::total_span","value":"pub fn total_span<T: Iterator<Item = Self>>(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns the smallest `Span` possible that contains all the `Span`s\n defined in the `from` iterator\n","sig":null,"attributes":[{"value":"/ Returns the smallest `Span` possible that contains all the `Span`s","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\span.rs","byte_start":779922,"byte_end":779992,"line_start":36,"line_end":36,"column_start":5,"column_end":75}},{"value":"/ defined in the `from` iterator","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\span.rs","byte_start":779997,"byte_end":780031,"line_start":37,"line_end":37,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":2203},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\span.rs","byte_start":780312,"byte_end":780320,"line_start":47,"line_end":47,"column_start":12,"column_end":20},"name":"to_range","qualname":"<Span>::to_range","value":"pub fn to_range(Self) -> Option<Range<usize>>","parent":null,"children":[],"decl_id":null,"docs":" Converts `self` to a range if the span is not unknown\n","sig":null,"attributes":[{"value":"/ Converts `self` to a range if the span is not unknown","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\span.rs","byte_start":780243,"byte_end":780300,"line_start":46,"line_end":46,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":2204},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\span.rs","byte_start":780572,"byte_end":780582,"line_start":56,"line_end":56,"column_start":12,"column_end":22},"name":"is_defined","qualname":"<Span>::is_defined","value":"pub fn is_defined(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check wether `self` was defined or is a default/unknown span\n","sig":null,"attributes":[{"value":"/ Check wether `self` was defined or is a default/unknown span","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\span.rs","byte_start":780496,"byte_end":780560,"line_start":55,"line_end":55,"column_start":5,"column_end":69}}]},{"kind":"Mod","id":{"krate":0,"index":2207},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"valid","qualname":"::valid","value":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\mod.rs","parent":null,"children":[{"krate":0,"index":2208},{"krate":0,"index":2306},{"krate":0,"index":2326},{"krate":0,"index":2392},{"krate":0,"index":2464},{"krate":0,"index":2537},{"krate":0,"index":2567},{"krate":0,"index":2568},{"krate":0,"index":2571},{"krate":0,"index":2574},{"krate":0,"index":2575},{"krate":0,"index":2578},{"krate":0,"index":2579},{"krate":0,"index":2580},{"krate":0,"index":2582},{"krate":0,"index":2585},{"krate":0,"index":2588},{"krate":0,"index":2591},{"krate":0,"index":2594},{"krate":0,"index":2595},{"krate":0,"index":2598},{"krate":0,"index":2601},{"krate":0,"index":2604},{"krate":0,"index":2607},{"krate":0,"index":2610},{"krate":0,"index":2613},{"krate":0,"index":2616},{"krate":0,"index":2617},{"krate":0,"index":2620},{"krate":0,"index":2623},{"krate":0,"index":2626},{"krate":0,"index":2627},{"krate":0,"index":2630},{"krate":0,"index":2633},{"krate":0,"index":2636},{"krate":0,"index":2637},{"krate":0,"index":2640},{"krate":0,"index":2643},{"krate":0,"index":5175},{"krate":0,"index":5177},{"krate":0,"index":5178},{"krate":0,"index":5179},{"krate":0,"index":5182},{"krate":0,"index":5183},{"krate":0,"index":5185},{"krate":0,"index":5187},{"krate":0,"index":5189},{"krate":0,"index":5191},{"krate":0,"index":5194},{"krate":0,"index":5203},{"krate":0,"index":5205},{"krate":0,"index":5207},{"krate":0,"index":5209},{"krate":0,"index":5211},{"krate":0,"index":5236},{"krate":0,"index":5239},{"krate":0,"index":5241},{"krate":0,"index":5244},{"krate":0,"index":5246},{"krate":0,"index":5249},{"krate":0,"index":5251},{"krate":0,"index":5254},{"krate":0,"index":5256},{"krate":0,"index":5259},{"krate":0,"index":5262},{"krate":0,"index":2646},{"krate":0,"index":5284},{"krate":0,"index":5286},{"krate":0,"index":5287},{"krate":0,"index":5288},{"krate":0,"index":5291},{"krate":0,"index":5292},{"krate":0,"index":5294},{"krate":0,"index":5296},{"krate":0,"index":5298},{"krate":0,"index":5300},{"krate":0,"index":5282},{"krate":0,"index":5303},{"krate":0,"index":5310},{"krate":0,"index":5312},{"krate":0,"index":5314},{"krate":0,"index":5316},{"krate":0,"index":5318},{"krate":0,"index":5341},{"krate":0,"index":5344},{"krate":0,"index":5346},{"krate":0,"index":5349},{"krate":0,"index":5351},{"krate":0,"index":5354},{"krate":0,"index":5356},{"krate":0,"index":5359},{"krate":0,"index":5361},{"krate":0,"index":5364},{"krate":0,"index":5367},{"krate":0,"index":5381},{"krate":0,"index":5383},{"krate":0,"index":5384},{"krate":0,"index":5385},{"krate":0,"index":5388},{"krate":0,"index":5389},{"krate":0,"index":5391},{"krate":0,"index":5393},{"krate":0,"index":5395},{"krate":0,"index":5397},{"krate":0,"index":5400},{"krate":0,"index":5407},{"krate":0,"index":5409},{"krate":0,"index":5411},{"krate":0,"index":5413},{"krate":0,"index":5415},{"krate":0,"index":5438},{"krate":0,"index":5441},{"krate":0,"index":5443},{"krate":0,"index":5446},{"krate":0,"index":5448},{"krate":0,"index":5451},{"krate":0,"index":5453},{"krate":0,"index":5456},{"krate":0,"index":5458},{"krate":0,"index":5461},{"krate":0,"index":5464},{"krate":0,"index":5478},{"krate":0,"index":5481},{"krate":0,"index":2648},{"krate":0,"index":5483},{"krate":0,"index":5493},{"krate":0,"index":5495},{"krate":0,"index":5496},{"krate":0,"index":5498},{"krate":0,"index":5500},{"krate":0,"index":5505},{"krate":0,"index":5507},{"krate":0,"index":5520},{"krate":0,"index":5521},{"krate":0,"index":5523},{"krate":0,"index":5525},{"krate":0,"index":5530},{"krate":0,"index":5539},{"krate":0,"index":2651},{"krate":0,"index":2654}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4008},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\analyzer.rs","byte_start":792764,"byte_end":792786,"line_start":22,"line_end":22,"column_start":16,"column_end":38},"name":"UniformityRequirements","qualname":"::valid::analyzer::UniformityRequirements","value":"UniformityRequirements {  }","parent":null,"children":[{"krate":0,"index":4009}],"decl_id":null,"docs":" Kinds of expressions that require uniform control flow.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4043},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\analyzer.rs","byte_start":792807,"byte_end":792825,"line_start":23,"line_end":23,"column_start":15,"column_end":33},"name":"WORK_GROUP_BARRIER","qualname":"::valid::analyzer::UniformityRequirements::WORK_GROUP_BARRIER","value":"Self","parent":{"krate":0,"index":4042},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4044},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\analyzer.rs","byte_start":792847,"byte_end":792857,"line_start":24,"line_end":24,"column_start":15,"column_end":25},"name":"DERIVATIVE","qualname":"::valid::analyzer::UniformityRequirements::DERIVATIVE","value":"Self","parent":{"krate":0,"index":4042},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4045},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\analyzer.rs","byte_start":792879,"byte_end":792893,"line_start":25,"line_end":25,"column_start":15,"column_end":29},"name":"IMPLICIT_LEVEL","qualname":"::valid::analyzer::UniformityRequirements::IMPLICIT_LEVEL","value":"Self","parent":{"krate":0,"index":4042},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4105},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\analyzer.rs","byte_start":793150,"byte_end":793160,"line_start":34,"line_end":34,"column_start":12,"column_end":22},"name":"Uniformity","qualname":"::valid::analyzer::Uniformity","value":"Uniformity { non_uniform_result, requirements }","parent":null,"children":[{"krate":0,"index":4106},{"krate":0,"index":4107}],"decl_id":null,"docs":" Uniform control flow characteristics.\n","sig":null,"attributes":[{"value":"/ Uniform control flow characteristics.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\analyzer.rs","byte_start":792910,"byte_end":792951,"line_start":29,"line_end":29,"column_start":1,"column_end":42}}]},{"kind":"Field","id":{"krate":0,"index":4106},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\analyzer.rs","byte_start":793696,"byte_end":793714,"line_start":46,"line_end":46,"column_start":9,"column_end":27},"name":"non_uniform_result","qualname":"::valid::analyzer::Uniformity::non_uniform_result","value":"std::option::Option<arena::Handle<Expression>>","parent":{"krate":0,"index":4105},"children":[],"decl_id":null,"docs":" A child expression with non-uniform result.","sig":null,"attributes":[{"value":"/ A child expression with non-uniform result.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\analyzer.rs","byte_start":793167,"byte_end":793214,"line_start":35,"line_end":35,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\analyzer.rs","byte_start":793219,"byte_end":793222,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ This means, when the relevant invocations are scheduled on a compute unit,","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\analyzer.rs","byte_start":793227,"byte_end":793305,"line_start":37,"line_end":37,"column_start":5,"column_end":83}},{"value":"/ they have to use vector registers to store an individual value","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\analyzer.rs","byte_start":793310,"byte_end":793376,"line_start":38,"line_end":38,"column_start":5,"column_end":71}},{"value":"/ per invocation.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\analyzer.rs","byte_start":793381,"byte_end":793400,"line_start":39,"line_end":39,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\analyzer.rs","byte_start":793405,"byte_end":793408,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ Whenever the control flow is conditioned on such value,","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\analyzer.rs","byte_start":793413,"byte_end":793472,"line_start":41,"line_end":41,"column_start":5,"column_end":64}},{"value":"/ the hardware needs to keep track of the mask of invocations,","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\analyzer.rs","byte_start":793477,"byte_end":793541,"line_start":42,"line_end":42,"column_start":5,"column_end":69}},{"value":"/ and process all branches of the control flow.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\analyzer.rs","byte_start":793546,"byte_end":793595,"line_start":43,"line_end":43,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\analyzer.rs","byte_start":793600,"byte_end":793603,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ Any operations that depend on non-uniform results also produce non-uniform.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\analyzer.rs","byte_start":793608,"byte_end":793687,"line_start":45,"line_end":45,"column_start":5,"column_end":84}}]},{"kind":"Field","id":{"krate":0,"index":4107},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\analyzer.rs","byte_start":793823,"byte_end":793835,"line_start":48,"line_end":48,"column_start":9,"column_end":21},"name":"requirements","qualname":"::valid::analyzer::Uniformity::requirements","value":"valid::analyzer::UniformityRequirements","parent":{"krate":0,"index":4105},"children":[],"decl_id":null,"docs":" If this expression requires uniform control flow, store the reason here.\n","sig":null,"attributes":[{"value":"/ If this expression requires uniform control flow, store the reason here.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\analyzer.rs","byte_start":793738,"byte_end":793814,"line_start":47,"line_end":47,"column_start":5,"column_end":81}}]},{"kind":"Struct","id":{"krate":0,"index":4204},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\analyzer.rs","byte_start":795937,"byte_end":795946,"line_start":119,"line_end":119,"column_start":16,"column_end":25},"name":"GlobalUse","qualname":"::valid::analyzer::GlobalUse","value":"GlobalUse {  }","parent":null,"children":[{"krate":0,"index":4205}],"decl_id":null,"docs":" Indicates how a global variable is used.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4239},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\analyzer.rs","byte_start":796016,"byte_end":796020,"line_start":121,"line_end":121,"column_start":15,"column_end":19},"name":"READ","qualname":"::valid::analyzer::GlobalUse::READ","value":"Self","parent":{"krate":0,"index":4238},"children":[],"decl_id":null,"docs":" Data will be read from the variable.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4240},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\analyzer.rs","byte_start":796092,"byte_end":796097,"line_start":123,"line_end":123,"column_start":15,"column_end":20},"name":"WRITE","qualname":"::valid::analyzer::GlobalUse::WRITE","value":"Self","parent":{"krate":0,"index":4238},"children":[],"decl_id":null,"docs":" Data will be written to the variable.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4241},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\analyzer.rs","byte_start":796174,"byte_end":796179,"line_start":125,"line_end":125,"column_start":15,"column_end":20},"name":"QUERY","qualname":"::valid::analyzer::GlobalUse::QUERY","value":"Self","parent":{"krate":0,"index":4238},"children":[],"decl_id":null,"docs":" The information about the data is queried.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4301},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\analyzer.rs","byte_start":796378,"byte_end":796389,"line_start":132,"line_end":132,"column_start":12,"column_end":23},"name":"SamplingKey","qualname":"::valid::analyzer::SamplingKey","value":"SamplingKey { image, sampler }","parent":null,"children":[{"krate":0,"index":4302},{"krate":0,"index":4303}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4302},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\analyzer.rs","byte_start":796400,"byte_end":796405,"line_start":133,"line_end":133,"column_start":9,"column_end":14},"name":"image","qualname":"::valid::analyzer::SamplingKey::image","value":"arena::Handle<GlobalVariable>","parent":{"krate":0,"index":4301},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4303},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\analyzer.rs","byte_start":796446,"byte_end":796453,"line_start":134,"line_end":134,"column_start":9,"column_end":16},"name":"sampler","qualname":"::valid::analyzer::SamplingKey::sampler","value":"arena::Handle<GlobalVariable>","parent":{"krate":0,"index":4301},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4318},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\analyzer.rs","byte_start":796650,"byte_end":796664,"line_start":140,"line_end":140,"column_start":12,"column_end":26},"name":"ExpressionInfo","qualname":"::valid::analyzer::ExpressionInfo","value":"ExpressionInfo { uniformity, ref_count, ty }","parent":null,"children":[{"krate":0,"index":4319},{"krate":0,"index":4320},{"krate":0,"index":4321},{"krate":0,"index":4322}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4319},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\analyzer.rs","byte_start":796675,"byte_end":796685,"line_start":141,"line_end":141,"column_start":9,"column_end":19},"name":"uniformity","qualname":"::valid::analyzer::ExpressionInfo::uniformity","value":"valid::analyzer::Uniformity","parent":{"krate":0,"index":4318},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4320},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\analyzer.rs","byte_start":796707,"byte_end":796716,"line_start":142,"line_end":142,"column_start":9,"column_end":18},"name":"ref_count","qualname":"::valid::analyzer::ExpressionInfo::ref_count","value":"usize","parent":{"krate":0,"index":4318},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4322},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\analyzer.rs","byte_start":796795,"byte_end":796797,"line_start":144,"line_end":144,"column_start":9,"column_end":11},"name":"ty","qualname":"::valid::analyzer::ExpressionInfo::ty","value":"proc::typifier::TypeResolution","parent":{"krate":0,"index":4318},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4366},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\analyzer.rs","byte_start":798304,"byte_end":798316,"line_start":191,"line_end":191,"column_start":12,"column_end":24},"name":"FunctionInfo","qualname":"::valid::analyzer::FunctionInfo","value":"FunctionInfo { available_stages, uniformity, may_kill, sampling_set }","parent":null,"children":[{"krate":0,"index":4367},{"krate":0,"index":4368},{"krate":0,"index":4369},{"krate":0,"index":4370},{"krate":0,"index":4371},{"krate":0,"index":4372},{"krate":0,"index":4373},{"krate":0,"index":4374}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4368},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\analyzer.rs","byte_start":798472,"byte_end":798488,"line_start":196,"line_end":196,"column_start":9,"column_end":25},"name":"available_stages","qualname":"::valid::analyzer::FunctionInfo::available_stages","value":"valid::ShaderStages","parent":{"krate":0,"index":4366},"children":[],"decl_id":null,"docs":" Set of shader stages where calling this function is valid.\n","sig":null,"attributes":[{"value":"/ Set of shader stages where calling this function is valid.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\analyzer.rs","byte_start":798401,"byte_end":798463,"line_start":195,"line_end":195,"column_start":5,"column_end":67}}]},{"kind":"Field","id":{"krate":0,"index":4369},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\analyzer.rs","byte_start":798548,"byte_end":798558,"line_start":198,"line_end":198,"column_start":9,"column_end":19},"name":"uniformity","qualname":"::valid::analyzer::FunctionInfo::uniformity","value":"valid::analyzer::Uniformity","parent":{"krate":0,"index":4366},"children":[],"decl_id":null,"docs":" Uniformity characteristics.\n","sig":null,"attributes":[{"value":"/ Uniformity characteristics.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\analyzer.rs","byte_start":798508,"byte_end":798539,"line_start":197,"line_end":197,"column_start":5,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":4370},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\analyzer.rs","byte_start":798622,"byte_end":798630,"line_start":200,"line_end":200,"column_start":9,"column_end":17},"name":"may_kill","qualname":"::valid::analyzer::FunctionInfo::may_kill","value":"bool","parent":{"krate":0,"index":4366},"children":[],"decl_id":null,"docs":" Function may kill the invocation.\n","sig":null,"attributes":[{"value":"/ Function may kill the invocation.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\analyzer.rs","byte_start":798576,"byte_end":798613,"line_start":199,"line_end":199,"column_start":5,"column_end":42}}]},{"kind":"Field","id":{"krate":0,"index":4371},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\analyzer.rs","byte_start":798700,"byte_end":798712,"line_start":202,"line_end":202,"column_start":9,"column_end":21},"name":"sampling_set","qualname":"::valid::analyzer::FunctionInfo::sampling_set","value":"std::collections::HashSet<valid::analyzer::SamplingKey, std::hash::BuildHasherDefault<fxhash::FxHasher>>","parent":{"krate":0,"index":4366},"children":[],"decl_id":null,"docs":" Set of image-sampler pais used with sampling.\n","sig":null,"attributes":[{"value":"/ Set of image-sampler pais used with sampling.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\analyzer.rs","byte_start":798642,"byte_end":798691,"line_start":201,"line_end":201,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2263},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\analyzer.rs","byte_start":799197,"byte_end":799218,"line_start":216,"line_end":216,"column_start":12,"column_end":33},"name":"global_variable_count","qualname":"<FunctionInfo>::global_variable_count","value":"pub fn global_variable_count(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2264},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\analyzer.rs","byte_start":799285,"byte_end":799301,"line_start":219,"line_end":219,"column_start":12,"column_end":28},"name":"expression_count","qualname":"<FunctionInfo>::expression_count","value":"pub fn expression_count(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2265},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\analyzer.rs","byte_start":799368,"byte_end":799388,"line_start":222,"line_end":222,"column_start":12,"column_end":32},"name":"dominates_global_use","qualname":"<FunctionInfo>::dominates_global_use","value":"pub fn dominates_global_use(&Self, &Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4386},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\analyzer.rs","byte_start":800389,"byte_end":800399,"line_start":253,"line_end":253,"column_start":5,"column_end":15},"name":"Expression","qualname":"::valid::analyzer::UniformityDisruptor::Expression","value":"UniformityDisruptor::Expression(Handle<crate::Expression>)","parent":{"krate":0,"index":4377},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Expression {0:?} produced non-uniform result, and control flow depends on it\")","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\analyzer.rs","byte_start":800296,"byte_end":800384,"line_start":252,"line_end":252,"column_start":5,"column_end":93}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4389},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\analyzer.rs","byte_start":800510,"byte_end":800516,"line_start":255,"line_end":255,"column_start":5,"column_end":11},"name":"Return","qualname":"::valid::analyzer::UniformityDisruptor::Return","value":"UniformityDisruptor::Return","parent":{"krate":0,"index":4377},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"There is a Return earlier in the control flow of the function\")","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\analyzer.rs","byte_start":800432,"byte_end":800505,"line_start":254,"line_end":254,"column_start":5,"column_end":78}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4391},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\analyzer.rs","byte_start":800612,"byte_end":800619,"line_start":257,"line_end":257,"column_start":5,"column_end":12},"name":"Discard","qualname":"::valid::analyzer::UniformityDisruptor::Discard","value":"UniformityDisruptor::Discard","parent":{"krate":0,"index":4377},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"There is a Discard earlier in the entry point across all called functions\")","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\analyzer.rs","byte_start":800522,"byte_end":800607,"line_start":256,"line_end":256,"column_start":5,"column_end":90}}]},{"kind":"Enum","id":{"krate":0,"index":4377},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\analyzer.rs","byte_start":800270,"byte_end":800289,"line_start":251,"line_end":251,"column_start":10,"column_end":29},"name":"UniformityDisruptor","qualname":"::valid::analyzer::UniformityDisruptor","value":"pub enum UniformityDisruptor {\n    Expression(Handle<crate::Expression>),\n    Return,\n    Discard,\n}","parent":null,"children":[{"krate":0,"index":4386},{"krate":0,"index":4389},{"krate":0,"index":4391}],"decl_id":null,"docs":" Disruptor of the uniform control flow.\n","sig":null,"attributes":[{"value":"/ Disruptor of the uniform control flow.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\analyzer.rs","byte_start":800133,"byte_end":800175,"line_start":248,"line_end":248,"column_start":1,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":2305},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\analyzer.rs","byte_start":825684,"byte_end":825699,"line_start":853,"line_end":853,"column_start":12,"column_end":27},"name":"get_entry_point","qualname":"<ModuleInfo>::get_entry_point","value":"pub fn get_entry_point(&Self, usize) -> &FunctionInfo","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4408},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\compose.rs","byte_start":833162,"byte_end":833177,"line_start":13,"line_end":13,"column_start":5,"column_end":20},"name":"TypeDoesntExist","qualname":"::valid::compose::ComposeError::TypeDoesntExist","value":"ComposeError::TypeDoesntExist(Handle<crate::Type>)","parent":{"krate":0,"index":4393},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Compose type {0:?} doesn't exist\")","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\compose.rs","byte_start":833113,"byte_end":833157,"line_start":12,"line_end":12,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4411},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\compose.rs","byte_start":833258,"byte_end":833262,"line_start":15,"line_end":15,"column_start":5,"column_end":9},"name":"Type","qualname":"::valid::compose::ComposeError::Type","value":"ComposeError::Type(Handle<crate::Type>)","parent":{"krate":0,"index":4393},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Composing of type {0:?} can't be done\")","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\compose.rs","byte_start":833204,"byte_end":833253,"line_start":14,"line_end":14,"column_start":5,"column_end":54}}]},{"kind":"StructVariant","id":{"krate":0,"index":4414},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\compose.rs","byte_start":833368,"byte_end":833382,"line_start":17,"line_end":17,"column_start":5,"column_end":19},"name":"ComponentCount","qualname":"::valid::compose::ComposeError::ComponentCount","value":"ComposeError::ComponentCount { given, expected }","parent":{"krate":0,"index":4393},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Composing expects {expected} components but {given} were given\")","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\compose.rs","byte_start":833289,"byte_end":833363,"line_start":16,"line_end":16,"column_start":5,"column_end":79}}]},{"kind":"StructVariant","id":{"krate":0,"index":4417},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\compose.rs","byte_start":833485,"byte_end":833498,"line_start":19,"line_end":19,"column_start":5,"column_end":18},"name":"ComponentType","qualname":"::valid::compose::ComposeError::ComponentType","value":"ComposeError::ComponentType { index }","parent":{"krate":0,"index":4393},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Composing {index}'s component type is not expected\")","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\compose.rs","byte_start":833418,"byte_end":833480,"line_start":18,"line_end":18,"column_start":5,"column_end":67}}]},{"kind":"Enum","id":{"krate":0,"index":4393},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\compose.rs","byte_start":833094,"byte_end":833106,"line_start":11,"line_end":11,"column_start":10,"column_end":22},"name":"ComposeError","qualname":"::valid::compose::ComposeError","value":"pub enum ComposeError {\n    TypeDoesntExist(Handle<crate::Type>),\n    Type(Handle<crate::Type>),\n    ComponentCount {\n        given: u32,\n        expected: u32,\n    },\n    ComponentType {\n        index: u32,\n    },\n}","parent":null,"children":[{"krate":0,"index":4408},{"krate":0,"index":4411},{"krate":0,"index":4414},{"krate":0,"index":4417}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4444},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\expression.rs","byte_start":838946,"byte_end":838957,"line_start":15,"line_end":15,"column_start":5,"column_end":16},"name":"DoesntExist","qualname":"::valid::expression::ExpressionError::DoesntExist","value":"ExpressionError::DoesntExist","parent":{"krate":0,"index":4419},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Doesn't exist\")","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\expression.rs","byte_start":838916,"byte_end":838941,"line_start":14,"line_end":14,"column_start":5,"column_end":30}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4446},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\expression.rs","byte_start":839071,"byte_end":839081,"line_start":17,"line_end":17,"column_start":5,"column_end":15},"name":"NotInScope","qualname":"::valid::expression::ExpressionError::NotInScope","value":"ExpressionError::NotInScope","parent":{"krate":0,"index":4419},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Used by a statement before it was introduced into the scope by any of the dominating blocks\")","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\expression.rs","byte_start":838963,"byte_end":839066,"line_start":16,"line_end":16,"column_start":5,"column_end":108}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4448},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\expression.rs","byte_start":839154,"byte_end":839171,"line_start":19,"line_end":19,"column_start":5,"column_end":22},"name":"ForwardDependency","qualname":"::valid::expression::ExpressionError::ForwardDependency","value":"ExpressionError::ForwardDependency(Handle<crate::Expression>)","parent":{"krate":0,"index":4419},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Depends on {0:?}, which has not been processed yet\")","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\expression.rs","byte_start":839087,"byte_end":839149,"line_start":18,"line_end":18,"column_start":5,"column_end":67}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4451},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\expression.rs","byte_start":839275,"byte_end":839290,"line_start":21,"line_end":21,"column_start":5,"column_end":20},"name":"InvalidBaseType","qualname":"::valid::expression::ExpressionError::InvalidBaseType","value":"ExpressionError::InvalidBaseType(Handle<crate::Expression>)","parent":{"krate":0,"index":4419},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Base type {0:?} is not compatible with this expression\")","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\expression.rs","byte_start":839204,"byte_end":839270,"line_start":20,"line_end":20,"column_start":5,"column_end":71}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4454},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\expression.rs","byte_start":839380,"byte_end":839396,"line_start":23,"line_end":23,"column_start":5,"column_end":21},"name":"InvalidIndexType","qualname":"::valid::expression::ExpressionError::InvalidIndexType","value":"ExpressionError::InvalidIndexType(Handle<crate::Expression>)","parent":{"krate":0,"index":4419},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Accessing with index {0:?} can't be done\")","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\expression.rs","byte_start":839323,"byte_end":839375,"line_start":22,"line_end":22,"column_start":5,"column_end":57}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4457},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\expression.rs","byte_start":839490,"byte_end":839506,"line_start":25,"line_end":25,"column_start":5,"column_end":21},"name":"IndexOutOfBounds","qualname":"::valid::expression::ExpressionError::IndexOutOfBounds","value":"ExpressionError::IndexOutOfBounds(Handle<crate::Expression>, crate::ScalarValue)","parent":{"krate":0,"index":4419},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Accessing index {1:?} is out of {0:?} bounds\")","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\expression.rs","byte_start":839429,"byte_end":839485,"line_start":24,"line_end":24,"column_start":5,"column_end":61}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4461},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\expression.rs","byte_start":839630,"byte_end":839649,"line_start":27,"line_end":27,"column_start":5,"column_end":24},"name":"IndexMustBeConstant","qualname":"::valid::expression::ExpressionError::IndexMustBeConstant","value":"ExpressionError::IndexMustBeConstant(Handle<crate::Expression>)","parent":{"krate":0,"index":4419},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"The expression {0:?} may only be indexed by a constant\")","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\expression.rs","byte_start":839559,"byte_end":839625,"line_start":26,"line_end":26,"column_start":5,"column_end":71}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4464},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\expression.rs","byte_start":839736,"byte_end":839763,"line_start":29,"line_end":29,"column_start":5,"column_end":32},"name":"FunctionArgumentDoesntExist","qualname":"::valid::expression::ExpressionError::FunctionArgumentDoesntExist","value":"ExpressionError::FunctionArgumentDoesntExist(u32)","parent":{"krate":0,"index":4419},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Function argument {0:?} doesn't exist\")","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\expression.rs","byte_start":839682,"byte_end":839731,"line_start":28,"line_end":28,"column_start":5,"column_end":54}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4467},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\expression.rs","byte_start":839819,"byte_end":839838,"line_start":31,"line_end":31,"column_start":5,"column_end":24},"name":"ConstantDoesntExist","qualname":"::valid::expression::ExpressionError::ConstantDoesntExist","value":"ExpressionError::ConstantDoesntExist(Handle<crate::Constant>)","parent":{"krate":0,"index":4419},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Constant {0:?} doesn't exist\")","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\expression.rs","byte_start":839774,"byte_end":839814,"line_start":30,"line_end":30,"column_start":5,"column_end":45}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4470},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\expression.rs","byte_start":839921,"byte_end":839941,"line_start":33,"line_end":33,"column_start":5,"column_end":25},"name":"GlobalVarDoesntExist","qualname":"::valid::expression::ExpressionError::GlobalVarDoesntExist","value":"ExpressionError::GlobalVarDoesntExist(Handle<crate::GlobalVariable>)","parent":{"krate":0,"index":4419},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Global variable {0:?} doesn't exist\")","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\expression.rs","byte_start":839869,"byte_end":839916,"line_start":32,"line_end":32,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4473},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\expression.rs","byte_start":840029,"byte_end":840048,"line_start":35,"line_end":35,"column_start":5,"column_end":24},"name":"LocalVarDoesntExist","qualname":"::valid::expression::ExpressionError::LocalVarDoesntExist","value":"ExpressionError::LocalVarDoesntExist(Handle<crate::LocalVariable>)","parent":{"krate":0,"index":4419},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Local variable {0:?} doesn't exist\")","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\expression.rs","byte_start":839978,"byte_end":840024,"line_start":34,"line_end":34,"column_start":5,"column_end":51}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4476},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\expression.rs","byte_start":840131,"byte_end":840149,"line_start":37,"line_end":37,"column_start":5,"column_end":23},"name":"InvalidPointerType","qualname":"::valid::expression::ExpressionError::InvalidPointerType","value":"ExpressionError::InvalidPointerType(Handle<crate::Expression>)","parent":{"krate":0,"index":4419},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Loading of {0:?} can't be done\")","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\expression.rs","byte_start":840084,"byte_end":840126,"line_start":36,"line_end":36,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4479},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\expression.rs","byte_start":840234,"byte_end":840250,"line_start":39,"line_end":39,"column_start":5,"column_end":21},"name":"InvalidArrayType","qualname":"::valid::expression::ExpressionError::InvalidArrayType","value":"ExpressionError::InvalidArrayType(Handle<crate::Expression>)","parent":{"krate":0,"index":4419},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Array length of {0:?} can't be done\")","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\expression.rs","byte_start":840182,"byte_end":840229,"line_start":38,"line_end":38,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4482},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\expression.rs","byte_start":840329,"byte_end":840345,"line_start":41,"line_end":41,"column_start":5,"column_end":21},"name":"InvalidSplatType","qualname":"::valid::expression::ExpressionError::InvalidSplatType","value":"ExpressionError::InvalidSplatType(Handle<crate::Expression>)","parent":{"krate":0,"index":4419},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Splatting {0:?} can't be done\")","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\expression.rs","byte_start":840283,"byte_end":840324,"line_start":40,"line_end":40,"column_start":5,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4485},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\expression.rs","byte_start":840424,"byte_end":840441,"line_start":43,"line_end":43,"column_start":5,"column_end":22},"name":"InvalidVectorType","qualname":"::valid::expression::ExpressionError::InvalidVectorType","value":"ExpressionError::InvalidVectorType(Handle<crate::Expression>)","parent":{"krate":0,"index":4419},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Swizzling {0:?} can't be done\")","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\expression.rs","byte_start":840378,"byte_end":840419,"line_start":42,"line_end":42,"column_start":5,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4488},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\expression.rs","byte_start":840546,"byte_end":840569,"line_start":45,"line_end":45,"column_start":5,"column_end":28},"name":"InvalidSwizzleComponent","qualname":"::valid::expression::ExpressionError::InvalidSwizzleComponent","value":"ExpressionError::InvalidSwizzleComponent(crate::SwizzleComponent, crate::VectorSize)","parent":{"krate":0,"index":4419},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Swizzle component {0:?} is outside of vector size {1:?}\")","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\expression.rs","byte_start":840474,"byte_end":840541,"line_start":44,"line_end":44,"column_start":5,"column_end":72}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4492},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\expression.rs","byte_start":840645,"byte_end":840652,"line_start":47,"line_end":47,"column_start":5,"column_end":12},"name":"Compose","qualname":"::valid::expression::ExpressionError::Compose","value":"ExpressionError::Compose(super::ComposeError)","parent":{"krate":0,"index":4419},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(transparent)","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\expression.rs","byte_start":840619,"byte_end":840640,"line_start":46,"line_end":46,"column_start":5,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4495},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\expression.rs","byte_start":840713,"byte_end":840717,"line_start":49,"line_end":49,"column_start":5,"column_end":9},"name":"Proc","qualname":"::valid::expression::ExpressionError::Proc","value":"ExpressionError::Proc(ProcError)","parent":{"krate":0,"index":4419},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(transparent)","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\expression.rs","byte_start":840687,"byte_end":840708,"line_start":48,"line_end":48,"column_start":5,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4498},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\expression.rs","byte_start":840796,"byte_end":840819,"line_start":51,"line_end":51,"column_start":5,"column_end":28},"name":"InvalidUnaryOperandType","qualname":"::valid::expression::ExpressionError::InvalidUnaryOperandType","value":"ExpressionError::InvalidUnaryOperandType(crate::UnaryOperator, Handle<crate::Expression>)","parent":{"krate":0,"index":4419},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Operation {0:?} can't work with {1:?}\")","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\expression.rs","byte_start":840742,"byte_end":840791,"line_start":50,"line_end":50,"column_start":5,"column_end":54}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4502},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\expression.rs","byte_start":840938,"byte_end":840963,"line_start":53,"line_end":53,"column_start":5,"column_end":30},"name":"InvalidBinaryOperandTypes","qualname":"::valid::expression::ExpressionError::InvalidBinaryOperandTypes","value":"ExpressionError::InvalidBinaryOperandTypes(crate::BinaryOperator, Handle<crate::Expression>, Handle<crate::Expression>)","parent":{"krate":0,"index":4419},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Operation {0:?} can't work with {1:?} and {2:?}\")","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\expression.rs","byte_start":840874,"byte_end":840933,"line_start":52,"line_end":52,"column_start":5,"column_end":64}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4507},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\expression.rs","byte_start":841119,"byte_end":841137,"line_start":59,"line_end":59,"column_start":5,"column_end":23},"name":"InvalidSelectTypes","qualname":"::valid::expression::ExpressionError::InvalidSelectTypes","value":"ExpressionError::InvalidSelectTypes","parent":{"krate":0,"index":4419},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Selecting is not possible\")","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\expression.rs","byte_start":841077,"byte_end":841114,"line_start":58,"line_end":58,"column_start":5,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4509},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\expression.rs","byte_start":841209,"byte_end":841229,"line_start":61,"line_end":61,"column_start":5,"column_end":25},"name":"InvalidBooleanVector","qualname":"::valid::expression::ExpressionError::InvalidBooleanVector","value":"ExpressionError::InvalidBooleanVector(Handle<crate::Expression>)","parent":{"krate":0,"index":4419},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Relational argument {0:?} is not a boolean vector\")","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\expression.rs","byte_start":841143,"byte_end":841204,"line_start":60,"line_end":60,"column_start":5,"column_end":66}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4512},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\expression.rs","byte_start":841319,"byte_end":841339,"line_start":63,"line_end":63,"column_start":5,"column_end":25},"name":"InvalidFloatArgument","qualname":"::valid::expression::ExpressionError::InvalidFloatArgument","value":"ExpressionError::InvalidFloatArgument(Handle<crate::Expression>)","parent":{"krate":0,"index":4419},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Relational argument {0:?} is not a float\")","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\expression.rs","byte_start":841262,"byte_end":841314,"line_start":62,"line_end":62,"column_start":5,"column_end":57}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4515},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\expression.rs","byte_start":841411,"byte_end":841415,"line_start":65,"line_end":65,"column_start":5,"column_end":9},"name":"Type","qualname":"::valid::expression::ExpressionError::Type","value":"ExpressionError::Type(ResolveError)","parent":{"krate":0,"index":4419},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Type resolution failed\")","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\expression.rs","byte_start":841372,"byte_end":841406,"line_start":64,"line_end":64,"column_start":5,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4518},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\expression.rs","byte_start":841481,"byte_end":841503,"line_start":67,"line_end":67,"column_start":5,"column_end":27},"name":"ExpectedGlobalVariable","qualname":"::valid::expression::ExpressionError::ExpectedGlobalVariable","value":"ExpressionError::ExpectedGlobalVariable","parent":{"krate":0,"index":4419},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Not a global variable\")","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\expression.rs","byte_start":841443,"byte_end":841476,"line_start":66,"line_end":66,"column_start":5,"column_end":38}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4520},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\expression.rs","byte_start":841570,"byte_end":841594,"line_start":69,"line_end":69,"column_start":5,"column_end":29},"name":"ExpectedGlobalOrArgument","qualname":"::valid::expression::ExpressionError::ExpectedGlobalOrArgument","value":"ExpressionError::ExpectedGlobalOrArgument","parent":{"krate":0,"index":4419},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Not a global variable or a function argument\")","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\expression.rs","byte_start":841509,"byte_end":841565,"line_start":68,"line_end":68,"column_start":5,"column_end":61}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4522},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\expression.rs","byte_start":841653,"byte_end":841677,"line_start":71,"line_end":71,"column_start":5,"column_end":29},"name":"CallToUndeclaredFunction","qualname":"::valid::expression::ExpressionError::CallToUndeclaredFunction","value":"ExpressionError::CallToUndeclaredFunction(Handle<crate::Function>)","parent":{"krate":0,"index":4419},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Calling an undeclared function {0:?}\")","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\expression.rs","byte_start":841600,"byte_end":841648,"line_start":70,"line_end":70,"column_start":5,"column_end":53}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4525},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\expression.rs","byte_start":841762,"byte_end":841779,"line_start":73,"line_end":73,"column_start":5,"column_end":22},"name":"ExpectedImageType","qualname":"::valid::expression::ExpressionError::ExpectedImageType","value":"ExpressionError::ExpectedImageType(Handle<crate::Type>)","parent":{"krate":0,"index":4419},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Needs to be an image instead of {0:?}\")","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\expression.rs","byte_start":841708,"byte_end":841757,"line_start":72,"line_end":72,"column_start":5,"column_end":54}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4528},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\expression.rs","byte_start":841860,"byte_end":841879,"line_start":75,"line_end":75,"column_start":5,"column_end":24},"name":"ExpectedSamplerType","qualname":"::valid::expression::ExpressionError::ExpectedSamplerType","value":"ExpressionError::ExpectedSamplerType(Handle<crate::Type>)","parent":{"krate":0,"index":4419},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Needs to be an image instead of {0:?}\")","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\expression.rs","byte_start":841806,"byte_end":841855,"line_start":74,"line_end":74,"column_start":5,"column_end":54}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4531},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\expression.rs","byte_start":841961,"byte_end":841978,"line_start":77,"line_end":77,"column_start":5,"column_end":22},"name":"InvalidImageClass","qualname":"::valid::expression::ExpressionError::InvalidImageClass","value":"ExpressionError::InvalidImageClass(crate::ImageClass)","parent":{"krate":0,"index":4419},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Unable to operate on image class {0:?}\")","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\expression.rs","byte_start":841906,"byte_end":841956,"line_start":76,"line_end":76,"column_start":5,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4534},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\expression.rs","byte_start":842079,"byte_end":842096,"line_start":79,"line_end":79,"column_start":5,"column_end":22},"name":"InvalidDerivative","qualname":"::valid::expression::ExpressionError::InvalidDerivative","value":"ExpressionError::InvalidDerivative","parent":{"krate":0,"index":4419},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Derivatives can only be taken from scalar and vector floats\")","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\expression.rs","byte_start":842003,"byte_end":842074,"line_start":78,"line_end":78,"column_start":5,"column_end":76}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4536},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\expression.rs","byte_start":842159,"byte_end":842181,"line_start":81,"line_end":81,"column_start":5,"column_end":27},"name":"InvalidImageArrayIndex","qualname":"::valid::expression::ExpressionError::InvalidImageArrayIndex","value":"ExpressionError::InvalidImageArrayIndex","parent":{"krate":0,"index":4419},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Image array index parameter is misplaced\")","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\expression.rs","byte_start":842102,"byte_end":842154,"line_start":80,"line_end":80,"column_start":5,"column_end":57}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4538},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\expression.rs","byte_start":842244,"byte_end":842266,"line_start":83,"line_end":83,"column_start":5,"column_end":27},"name":"InvalidImageOtherIndex","qualname":"::valid::expression::ExpressionError::InvalidImageOtherIndex","value":"ExpressionError::InvalidImageOtherIndex","parent":{"krate":0,"index":4419},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Image other index parameter is misplaced\")","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\expression.rs","byte_start":842187,"byte_end":842239,"line_start":82,"line_end":82,"column_start":5,"column_end":57}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4540},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\expression.rs","byte_start":842345,"byte_end":842371,"line_start":85,"line_end":85,"column_start":5,"column_end":31},"name":"InvalidImageArrayIndexType","qualname":"::valid::expression::ExpressionError::InvalidImageArrayIndexType","value":"ExpressionError::InvalidImageArrayIndexType(Handle<crate::Expression>)","parent":{"krate":0,"index":4419},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Image array index type of {0:?} is not an integer scalar\")","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\expression.rs","byte_start":842272,"byte_end":842340,"line_start":84,"line_end":84,"column_start":5,"column_end":73}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4543},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\expression.rs","byte_start":842477,"byte_end":842503,"line_start":87,"line_end":87,"column_start":5,"column_end":31},"name":"InvalidImageOtherIndexType","qualname":"::valid::expression::ExpressionError::InvalidImageOtherIndexType","value":"ExpressionError::InvalidImageOtherIndexType(Handle<crate::Expression>)","parent":{"krate":0,"index":4419},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Image other index type of {0:?} is not an integer scalar\")","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\expression.rs","byte_start":842404,"byte_end":842472,"line_start":86,"line_end":86,"column_start":5,"column_end":73}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4546},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\expression.rs","byte_start":842614,"byte_end":842640,"line_start":89,"line_end":89,"column_start":5,"column_end":31},"name":"InvalidImageCoordinateType","qualname":"::valid::expression::ExpressionError::InvalidImageCoordinateType","value":"ExpressionError::InvalidImageCoordinateType(crate::ImageDimension, Handle<crate::Expression>)","parent":{"krate":0,"index":4419},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Image coordinate type of {1:?} does not match dimension {0:?}\")","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\expression.rs","byte_start":842536,"byte_end":842609,"line_start":88,"line_end":88,"column_start":5,"column_end":78}}]},{"kind":"StructVariant","id":{"krate":0,"index":4550},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\expression.rs","byte_start":842851,"byte_end":842877,"line_start":91,"line_end":91,"column_start":5,"column_end":31},"name":"ComparisonSamplingMismatch","qualname":"::valid::expression::ExpressionError::ComparisonSamplingMismatch","value":"ExpressionError::ComparisonSamplingMismatch { image, sampler, has_ref }","parent":{"krate":0,"index":4419},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Comparison sampling mismatch: image has class {image:?}, but the sampler is comparison={sampler}, and the reference was provided={has_ref}\")","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\expression.rs","byte_start":842696,"byte_end":842846,"line_start":90,"line_end":90,"column_start":5,"column_end":155}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4554},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\expression.rs","byte_start":843056,"byte_end":843075,"line_start":97,"line_end":97,"column_start":5,"column_end":24},"name":"InvalidSampleOffset","qualname":"::valid::expression::ExpressionError::InvalidSampleOffset","value":"ExpressionError::InvalidSampleOffset(crate::ImageDimension, Handle<crate::Constant>)","parent":{"krate":0,"index":4419},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Sample offset constant {1:?} doesn't match the image dimension {0:?}\")","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\expression.rs","byte_start":842971,"byte_end":843051,"line_start":96,"line_end":96,"column_start":5,"column_end":85}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4558},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\expression.rs","byte_start":843189,"byte_end":843210,"line_start":99,"line_end":99,"column_start":5,"column_end":26},"name":"InvalidDepthReference","qualname":"::valid::expression::ExpressionError::InvalidDepthReference","value":"ExpressionError::InvalidDepthReference(Handle<crate::Expression>)","parent":{"krate":0,"index":4419},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Depth reference {0:?} is not a scalar float\")","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\expression.rs","byte_start":843129,"byte_end":843184,"line_start":98,"line_end":98,"column_start":5,"column_end":60}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4561},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\expression.rs","byte_start":843303,"byte_end":843326,"line_start":101,"line_end":101,"column_start":5,"column_end":28},"name":"InvalidDepthSampleLevel","qualname":"::valid::expression::ExpressionError::InvalidDepthSampleLevel","value":"ExpressionError::InvalidDepthSampleLevel","parent":{"krate":0,"index":4419},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Depth sample level can only be Auto or Zero\")","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\expression.rs","byte_start":843243,"byte_end":843298,"line_start":100,"line_end":100,"column_start":5,"column_end":60}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4563},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\expression.rs","byte_start":843402,"byte_end":843429,"line_start":103,"line_end":103,"column_start":5,"column_end":32},"name":"InvalidSampleLevelExactType","qualname":"::valid::expression::ExpressionError::InvalidSampleLevelExactType","value":"ExpressionError::InvalidSampleLevelExactType(Handle<crate::Expression>)","parent":{"krate":0,"index":4419},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Sample level (exact) type {0:?} is not a scalar float\")","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\expression.rs","byte_start":843332,"byte_end":843397,"line_start":102,"line_end":102,"column_start":5,"column_end":70}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4566},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\expression.rs","byte_start":843531,"byte_end":843557,"line_start":105,"line_end":105,"column_start":5,"column_end":31},"name":"InvalidSampleLevelBiasType","qualname":"::valid::expression::ExpressionError::InvalidSampleLevelBiasType","value":"ExpressionError::InvalidSampleLevelBiasType(Handle<crate::Expression>)","parent":{"krate":0,"index":4419},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Sample level (bias) type {0:?} is not a scalar float\")","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\expression.rs","byte_start":843462,"byte_end":843526,"line_start":104,"line_end":104,"column_start":5,"column_end":69}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4569},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\expression.rs","byte_start":843679,"byte_end":843709,"line_start":107,"line_end":107,"column_start":5,"column_end":35},"name":"InvalidSampleLevelGradientType","qualname":"::valid::expression::ExpressionError::InvalidSampleLevelGradientType","value":"ExpressionError::InvalidSampleLevelGradientType(crate::ImageDimension, Handle<crate::Expression>)","parent":{"krate":0,"index":4419},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Sample level (gradient) of {1:?} doesn't match the image dimension {0:?}\")","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\expression.rs","byte_start":843590,"byte_end":843674,"line_start":106,"line_end":106,"column_start":5,"column_end":89}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4573},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\expression.rs","byte_start":843796,"byte_end":843815,"line_start":109,"line_end":109,"column_start":5,"column_end":24},"name":"InvalidCastArgument","qualname":"::valid::expression::ExpressionError::InvalidCastArgument","value":"ExpressionError::InvalidCastArgument","parent":{"krate":0,"index":4419},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Unable to cast\")","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\expression.rs","byte_start":843765,"byte_end":843791,"line_start":108,"line_end":108,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4575},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\expression.rs","byte_start":843870,"byte_end":843888,"line_start":111,"line_end":111,"column_start":5,"column_end":23},"name":"WrongArgumentCount","qualname":"::valid::expression::ExpressionError::WrongArgumentCount","value":"ExpressionError::WrongArgumentCount(crate::MathFunction)","parent":{"krate":0,"index":4419},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Invalid argument count for {0:?}\")","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\expression.rs","byte_start":843821,"byte_end":843865,"line_start":110,"line_end":110,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4578},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\expression.rs","byte_start":843996,"byte_end":844015,"line_start":113,"line_end":113,"column_start":5,"column_end":24},"name":"InvalidArgumentType","qualname":"::valid::expression::ExpressionError::InvalidArgumentType","value":"ExpressionError::InvalidArgumentType(crate::MathFunction, u32, Handle<crate::Expression>)","parent":{"krate":0,"index":4419},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Argument [{1}] to {0:?} as expression {2:?} has an invalid type.\")","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\expression.rs","byte_start":843915,"byte_end":843991,"line_start":112,"line_end":112,"column_start":5,"column_end":81}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4583},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\expression.rs","byte_start":844137,"byte_end":844160,"line_start":115,"line_end":115,"column_start":5,"column_end":28},"name":"InvalidAtomicResultType","qualname":"::valid::expression::ExpressionError::InvalidAtomicResultType","value":"ExpressionError::InvalidAtomicResultType(crate::ScalarKind, crate::Bytes)","parent":{"krate":0,"index":4419},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Atomic result type can't be {0:?} of {1} bytes\")","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\expression.rs","byte_start":844074,"byte_end":844132,"line_start":114,"line_end":114,"column_start":5,"column_end":63}}]},{"kind":"Enum","id":{"krate":0,"index":4419},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\expression.rs","byte_start":838894,"byte_end":838909,"line_start":13,"line_end":13,"column_start":10,"column_end":25},"name":"ExpressionError","qualname":"::valid::expression::ExpressionError","value":"pub enum ExpressionError {\n    DoesntExist,\n    NotInScope,\n    ForwardDependency(Handle<crate::Expression>),\n    InvalidBaseType(Handle<crate::Expression>),\n    InvalidIndexType(Handle<crate::Expression>),\n    IndexOutOfBounds(Handle<crate::Expression>, crate::ScalarValue),\n    IndexMustBeConstant(Handle<crate::Expression>),\n    FunctionArgumentDoesntExist(u32),\n    ConstantDoesntExist(Handle<crate::Constant>),\n    GlobalVarDoesntExist(Handle<crate::GlobalVariable>),\n    LocalVarDoesntExist(Handle<crate::LocalVariable>),\n    InvalidPointerType(Handle<crate::Expression>),\n    InvalidArrayType(Handle<crate::Expression>),\n    InvalidSplatType(Handle<crate::Expression>),\n    InvalidVectorType(Handle<crate::Expression>),\n    InvalidSwizzleComponent(crate::SwizzleComponent, crate::VectorSize),\n    Compose(super::ComposeError),\n    Proc(ProcError),\n    InvalidUnaryOperandType(crate::UnaryOperator, Handle<crate::Expression>),\n    InvalidBinaryOperandTypes(crate::BinaryOperator,\n                              Handle<crate::Expression>,\n                              Handle<crate::Expression>),\n    InvalidSelectTypes,\n    InvalidBooleanVector(Handle<crate::Expression>),\n    InvalidFloatArgument(Handle<crate::Expression>),\n    Type(ResolveError),\n    ExpectedGlobalVariable,\n    ExpectedGlobalOrArgument,\n    CallToUndeclaredFunction(Handle<crate::Function>),\n    ExpectedImageType(Handle<crate::Type>),\n    ExpectedSamplerType(Handle<crate::Type>),\n    InvalidImageClass(crate::ImageClass),\n    InvalidDerivative,\n    InvalidImageArrayIndex,\n    InvalidImageOtherIndex,\n    InvalidImageArrayIndexType(Handle<crate::Expression>),\n    InvalidImageOtherIndexType(Handle<crate::Expression>),\n    InvalidImageCoordinateType(crate::ImageDimension,\n                               Handle<crate::Expression>),\n    ComparisonSamplingMismatch {\n        image: crate::ImageClass,\n        sampler: bool,\n        has_ref: bool,\n    },\n    InvalidSampleOffset(crate::ImageDimension, Handle<crate::Constant>),\n    InvalidDepthReference(Handle<crate::Expression>),\n    InvalidDepthSampleLevel,\n    InvalidSampleLevelExactType(Handle<crate::Expression>),\n    InvalidSampleLevelBiasType(Handle<crate::Expression>),\n    InvalidSampleLevelGradientType(crate::ImageDimension,\n                                   Handle<crate::Expression>),\n    InvalidCastArgument,\n    WrongArgumentCount(crate::MathFunction),\n    InvalidArgumentType(crate::MathFunction, u32, Handle<crate::Expression>),\n    InvalidAtomicResultType(crate::ScalarKind, crate::Bytes),\n}","parent":null,"children":[{"krate":0,"index":4444},{"krate":0,"index":4446},{"krate":0,"index":4448},{"krate":0,"index":4451},{"krate":0,"index":4454},{"krate":0,"index":4457},{"krate":0,"index":4461},{"krate":0,"index":4464},{"krate":0,"index":4467},{"krate":0,"index":4470},{"krate":0,"index":4473},{"krate":0,"index":4476},{"krate":0,"index":4479},{"krate":0,"index":4482},{"krate":0,"index":4485},{"krate":0,"index":4488},{"krate":0,"index":4492},{"krate":0,"index":4495},{"krate":0,"index":4498},{"krate":0,"index":4502},{"krate":0,"index":4507},{"krate":0,"index":4509},{"krate":0,"index":4512},{"krate":0,"index":4515},{"krate":0,"index":4518},{"krate":0,"index":4520},{"krate":0,"index":4522},{"krate":0,"index":4525},{"krate":0,"index":4528},{"krate":0,"index":4531},{"krate":0,"index":4534},{"krate":0,"index":4536},{"krate":0,"index":4538},{"krate":0,"index":4540},{"krate":0,"index":4543},{"krate":0,"index":4546},{"krate":0,"index":4550},{"krate":0,"index":4554},{"krate":0,"index":4558},{"krate":0,"index":4561},{"krate":0,"index":4563},{"krate":0,"index":4566},{"krate":0,"index":4569},{"krate":0,"index":4573},{"krate":0,"index":4575},{"krate":0,"index":4578},{"krate":0,"index":4583}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4606},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\function.rs","byte_start":902132,"byte_end":902147,"line_start":17,"line_end":17,"column_start":5,"column_end":20},"name":"InvalidFunction","qualname":"::valid::function::CallError::InvalidFunction","value":"CallError::InvalidFunction","parent":{"krate":0,"index":4587},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Bad function\")","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\function.rs","byte_start":902103,"byte_end":902127,"line_start":16,"line_end":16,"column_start":5,"column_end":29}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4608},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\function.rs","byte_start":902209,"byte_end":902232,"line_start":19,"line_end":19,"column_start":5,"column_end":28},"name":"ForwardDeclaredFunction","qualname":"::valid::function::CallError::ForwardDeclaredFunction","value":"CallError::ForwardDeclaredFunction","parent":{"krate":0,"index":4587},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"The callee is declared after the caller\")","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\function.rs","byte_start":902153,"byte_end":902204,"line_start":18,"line_end":18,"column_start":5,"column_end":56}}]},{"kind":"StructVariant","id":{"krate":0,"index":4610},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\function.rs","byte_start":902293,"byte_end":902301,"line_start":21,"line_end":21,"column_start":5,"column_end":13},"name":"Argument","qualname":"::valid::function::CallError::Argument","value":"CallError::Argument { index, error }","parent":{"krate":0,"index":4587},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Argument {index} expression is invalid\")","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\function.rs","byte_start":902238,"byte_end":902288,"line_start":20,"line_end":20,"column_start":5,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4613},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\function.rs","byte_start":902463,"byte_end":902483,"line_start":27,"line_end":27,"column_start":5,"column_end":25},"name":"ResultAlreadyInScope","qualname":"::valid::function::CallError::ResultAlreadyInScope","value":"CallError::ResultAlreadyInScope(Handle<crate::Expression>)","parent":{"krate":0,"index":4587},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Result expression {0:?} has already been introduced earlier\")","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\function.rs","byte_start":902387,"byte_end":902458,"line_start":26,"line_end":26,"column_start":5,"column_end":76}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4616},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\function.rs","byte_start":902556,"byte_end":902567,"line_start":29,"line_end":29,"column_start":5,"column_end":16},"name":"ResultValue","qualname":"::valid::function::CallError::ResultValue","value":"CallError::ResultValue(ExpressionError)","parent":{"krate":0,"index":4587},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Result value is invalid\")","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\function.rs","byte_start":902516,"byte_end":902551,"line_start":28,"line_end":28,"column_start":5,"column_end":40}}]},{"kind":"StructVariant","id":{"krate":0,"index":4619},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\function.rs","byte_start":902671,"byte_end":902684,"line_start":31,"line_end":31,"column_start":5,"column_end":18},"name":"ArgumentCount","qualname":"::valid::function::CallError::ArgumentCount","value":"CallError::ArgumentCount { required, seen }","parent":{"krate":0,"index":4587},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Requires {required} arguments, but {seen} are provided\")","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\function.rs","byte_start":902600,"byte_end":902666,"line_start":30,"line_end":30,"column_start":5,"column_end":71}}]},{"kind":"StructVariant","id":{"krate":0,"index":4622},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\function.rs","byte_start":902818,"byte_end":902830,"line_start":33,"line_end":33,"column_start":5,"column_end":17},"name":"ArgumentType","qualname":"::valid::function::CallError::ArgumentType","value":"CallError::ArgumentType { index, required, seen_expression }","parent":{"krate":0,"index":4587},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Argument {index} value {seen_expression:?} doesn't match the type {required:?}\")","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\function.rs","byte_start":902723,"byte_end":902813,"line_start":32,"line_end":32,"column_start":5,"column_end":95}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4626},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\function.rs","byte_start":903019,"byte_end":903037,"line_start":39,"line_end":39,"column_start":5,"column_end":23},"name":"ExpressionMismatch","qualname":"::valid::function::CallError::ExpressionMismatch","value":"CallError::ExpressionMismatch(Option<Handle<crate::Expression>>)","parent":{"krate":0,"index":4587},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"The emitted expression doesn't match the call\")","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\function.rs","byte_start":902957,"byte_end":903014,"line_start":38,"line_end":38,"column_start":5,"column_end":62}}]},{"kind":"Enum","id":{"krate":0,"index":4587},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\function.rs","byte_start":902087,"byte_end":902096,"line_start":15,"line_end":15,"column_start":10,"column_end":19},"name":"CallError","qualname":"::valid::function::CallError","value":"pub enum CallError {\n    InvalidFunction,\n    ForwardDeclaredFunction,\n    Argument {\n        index: usize,\n        error: ExpressionError,\n    },\n    ResultAlreadyInScope(Handle<crate::Expression>),\n    ResultValue(ExpressionError),\n    ArgumentCount {\n        required: usize,\n        seen: usize,\n    },\n    ArgumentType {\n        index: usize,\n        required: Handle<crate::Type>,\n        seen_expression: Handle<crate::Expression>,\n    },\n    ExpressionMismatch(Option<Handle<crate::Expression>>),\n}","parent":null,"children":[{"krate":0,"index":4606},{"krate":0,"index":4608},{"krate":0,"index":4610},{"krate":0,"index":4613},{"krate":0,"index":4616},{"krate":0,"index":4619},{"krate":0,"index":4622},{"krate":0,"index":4626}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4637},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\function.rs","byte_start":903235,"byte_end":903249,"line_start":46,"line_end":46,"column_start":5,"column_end":19},"name":"InvalidPointer","qualname":"::valid::function::AtomicError::InvalidPointer","value":"AtomicError::InvalidPointer(Handle<crate::Expression>)","parent":{"krate":0,"index":4629},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Pointer {0:?} to atomic is invalid.\")","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\function.rs","byte_start":903183,"byte_end":903230,"line_start":45,"line_end":45,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4640},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\function.rs","byte_start":903330,"byte_end":903344,"line_start":48,"line_end":48,"column_start":5,"column_end":19},"name":"InvalidOperand","qualname":"::valid::function::AtomicError::InvalidOperand","value":"AtomicError::InvalidOperand(Handle<crate::Expression>)","parent":{"krate":0,"index":4629},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Operand {0:?} has invalid type.\")","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\function.rs","byte_start":903282,"byte_end":903325,"line_start":47,"line_end":47,"column_start":5,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4643},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\function.rs","byte_start":903453,"byte_end":903473,"line_start":50,"line_end":50,"column_start":5,"column_end":25},"name":"ResultAlreadyInScope","qualname":"::valid::function::AtomicError::ResultAlreadyInScope","value":"AtomicError::ResultAlreadyInScope(Handle<crate::Expression>)","parent":{"krate":0,"index":4629},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Result expression {0:?} has already been introduced earlier\")","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\function.rs","byte_start":903377,"byte_end":903448,"line_start":49,"line_end":49,"column_start":5,"column_end":76}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4646},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\function.rs","byte_start":903572,"byte_end":903590,"line_start":52,"line_end":52,"column_start":5,"column_end":23},"name":"ResultTypeMismatch","qualname":"::valid::function::AtomicError::ResultTypeMismatch","value":"AtomicError::ResultTypeMismatch(Handle<crate::Expression>)","parent":{"krate":0,"index":4629},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Result type for {0:?} doesn't match the statement\")","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\function.rs","byte_start":903506,"byte_end":903567,"line_start":51,"line_end":51,"column_start":5,"column_end":66}}]},{"kind":"Enum","id":{"krate":0,"index":4629},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\function.rs","byte_start":903165,"byte_end":903176,"line_start":44,"line_end":44,"column_start":10,"column_end":21},"name":"AtomicError","qualname":"::valid::function::AtomicError","value":"pub enum AtomicError {\n    InvalidPointer(Handle<crate::Expression>),\n    InvalidOperand(Handle<crate::Expression>),\n    ResultAlreadyInScope(Handle<crate::Expression>),\n    ResultTypeMismatch(Handle<crate::Expression>),\n}","parent":null,"children":[{"krate":0,"index":4637},{"krate":0,"index":4640},{"krate":0,"index":4643},{"krate":0,"index":4646}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4657},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\function.rs","byte_start":903825,"byte_end":903836,"line_start":59,"line_end":59,"column_start":5,"column_end":16},"name":"InvalidType","qualname":"::valid::function::LocalVariableError::InvalidType","value":"LocalVariableError::InvalidType(Handle<crate::Type>)","parent":{"krate":0,"index":4649},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Local variable has a type {0:?} that can't be stored in a local variable.\")","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\function.rs","byte_start":903735,"byte_end":903820,"line_start":58,"line_end":58,"column_start":5,"column_end":90}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4660},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\function.rs","byte_start":903923,"byte_end":903938,"line_start":61,"line_end":61,"column_start":5,"column_end":20},"name":"InitializerType","qualname":"::valid::function::LocalVariableError::InitializerType","value":"LocalVariableError::InitializerType","parent":{"krate":0,"index":4649},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Initializer doesn't match the variable type\")","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\function.rs","byte_start":903863,"byte_end":903918,"line_start":60,"line_end":60,"column_start":5,"column_end":60}}]},{"kind":"Enum","id":{"krate":0,"index":4649},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\function.rs","byte_start":903710,"byte_end":903728,"line_start":57,"line_end":57,"column_start":10,"column_end":28},"name":"LocalVariableError","qualname":"::valid::function::LocalVariableError","value":"pub enum LocalVariableError {\n    InvalidType(Handle<crate::Type>),\n    InitializerType,\n}","parent":null,"children":[{"krate":0,"index":4657},{"krate":0,"index":4660}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":4683},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\function.rs","byte_start":904100,"byte_end":904110,"line_start":68,"line_end":68,"column_start":5,"column_end":15},"name":"Expression","qualname":"::valid::function::FunctionError::Expression","value":"FunctionError::Expression { handle, error }","parent":{"krate":0,"index":4662},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Expression {handle:?} is invalid\")","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\function.rs","byte_start":904051,"byte_end":904095,"line_start":67,"line_end":67,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4686},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\function.rs","byte_start":904294,"byte_end":904318,"line_start":74,"line_end":74,"column_start":5,"column_end":29},"name":"ExpressionAlreadyInScope","qualname":"::valid::function::FunctionError::ExpressionAlreadyInScope","value":"FunctionError::ExpressionAlreadyInScope(Handle<crate::Expression>)","parent":{"krate":0,"index":4662},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Expression {0:?} can't be introduced - it's already in scope\")","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\function.rs","byte_start":904217,"byte_end":904289,"line_start":73,"line_end":73,"column_start":5,"column_end":77}}]},{"kind":"StructVariant","id":{"krate":0,"index":4689},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\function.rs","byte_start":904413,"byte_end":904426,"line_start":76,"line_end":76,"column_start":5,"column_end":18},"name":"LocalVariable","qualname":"::valid::function::FunctionError::LocalVariable","value":"FunctionError::LocalVariable { handle, name, error }","parent":{"krate":0,"index":4662},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Local variable {handle:?} '{name}' is invalid\")","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\function.rs","byte_start":904351,"byte_end":904408,"line_start":75,"line_end":75,"column_start":5,"column_end":62}}]},{"kind":"StructVariant","id":{"krate":0,"index":4693},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\function.rs","byte_start":904660,"byte_end":904679,"line_start":83,"line_end":83,"column_start":5,"column_end":24},"name":"InvalidArgumentType","qualname":"::valid::function::FunctionError::InvalidArgumentType","value":"FunctionError::InvalidArgumentType { index, name }","parent":{"krate":0,"index":4662},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Argument '{name}' at index {index} has a type that can't be passed into functions.\")","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\function.rs","byte_start":904561,"byte_end":904655,"line_start":82,"line_end":82,"column_start":5,"column_end":99}}]},{"kind":"StructVariant","id":{"krate":0,"index":4696},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\function.rs","byte_start":904838,"byte_end":904865,"line_start":85,"line_end":85,"column_start":5,"column_end":32},"name":"InvalidArgumentPointerClass","qualname":"::valid::function::FunctionError::InvalidArgumentPointerClass","value":"FunctionError::InvalidArgumentPointerClass { index, name, class }","parent":{"krate":0,"index":4662},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Argument '{name}' at index {index} is a pointer of class {class:?}, which can't be passed into functions.\")","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\function.rs","byte_start":904716,"byte_end":904833,"line_start":84,"line_end":84,"column_start":5,"column_end":122}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4700},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\function.rs","byte_start":905032,"byte_end":905055,"line_start":91,"line_end":91,"column_start":5,"column_end":28},"name":"InstructionsAfterReturn","qualname":"::valid::function::FunctionError::InstructionsAfterReturn","value":"FunctionError::InstructionsAfterReturn","parent":{"krate":0,"index":4662},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"There are instructions after `return`/`break`/`continue`\")","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\function.rs","byte_start":904959,"byte_end":905027,"line_start":90,"line_end":90,"column_start":5,"column_end":73}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4702},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\function.rs","byte_start":905137,"byte_end":905163,"line_start":93,"line_end":93,"column_start":5,"column_end":31},"name":"BreakOutsideOfLoopOrSwitch","qualname":"::valid::function::FunctionError::BreakOutsideOfLoopOrSwitch","value":"FunctionError::BreakOutsideOfLoopOrSwitch","parent":{"krate":0,"index":4662},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"The `break` is used outside of a `loop` or `switch` context\")","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\function.rs","byte_start":905061,"byte_end":905132,"line_start":92,"line_end":92,"column_start":5,"column_end":76}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4704},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\function.rs","byte_start":905236,"byte_end":905257,"line_start":95,"line_end":95,"column_start":5,"column_end":26},"name":"ContinueOutsideOfLoop","qualname":"::valid::function::FunctionError::ContinueOutsideOfLoop","value":"FunctionError::ContinueOutsideOfLoop","parent":{"krate":0,"index":4662},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"The `continue` is used outside of a `loop` context\")","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\function.rs","byte_start":905169,"byte_end":905231,"line_start":94,"line_end":94,"column_start":5,"column_end":67}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4706},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\function.rs","byte_start":905330,"byte_end":905347,"line_start":97,"line_end":97,"column_start":5,"column_end":22},"name":"InvalidReturnSpot","qualname":"::valid::function::FunctionError::InvalidReturnSpot","value":"FunctionError::InvalidReturnSpot","parent":{"krate":0,"index":4662},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"The `return` is called within a `continuing` block\")","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\function.rs","byte_start":905263,"byte_end":905325,"line_start":96,"line_end":96,"column_start":5,"column_end":67}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4708},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\function.rs","byte_start":905435,"byte_end":905452,"line_start":99,"line_end":99,"column_start":5,"column_end":22},"name":"InvalidReturnType","qualname":"::valid::function::FunctionError::InvalidReturnType","value":"FunctionError::InvalidReturnType(Option<Handle<crate::Expression>>)","parent":{"krate":0,"index":4662},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"The `return` value {0:?} does not match the function return value\")","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\function.rs","byte_start":905353,"byte_end":905430,"line_start":98,"line_end":98,"column_start":5,"column_end":82}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4711},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\function.rs","byte_start":905558,"byte_end":905571,"line_start":101,"line_end":101,"column_start":5,"column_end":18},"name":"InvalidIfType","qualname":"::valid::function::FunctionError::InvalidIfType","value":"FunctionError::InvalidIfType(Handle<crate::Expression>)","parent":{"krate":0,"index":4662},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"The `if` condition {0:?} is not a boolean scalar\")","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\function.rs","byte_start":905493,"byte_end":905553,"line_start":100,"line_end":100,"column_start":5,"column_end":65}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4714},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\function.rs","byte_start":905670,"byte_end":905687,"line_start":103,"line_end":103,"column_start":5,"column_end":22},"name":"InvalidSwitchType","qualname":"::valid::function::FunctionError::InvalidSwitchType","value":"FunctionError::InvalidSwitchType(Handle<crate::Expression>)","parent":{"krate":0,"index":4662},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"The `switch` value {0:?} is not an integer scalar\")","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\function.rs","byte_start":905604,"byte_end":905665,"line_start":102,"line_end":102,"column_start":5,"column_end":66}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4717},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\function.rs","byte_start":905782,"byte_end":905803,"line_start":105,"line_end":105,"column_start":5,"column_end":26},"name":"ConflictingSwitchCase","qualname":"::valid::function::FunctionError::ConflictingSwitchCase","value":"FunctionError::ConflictingSwitchCase(i32)","parent":{"krate":0,"index":4662},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Multiple `switch` cases for {0:?} are present\")","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\function.rs","byte_start":905720,"byte_end":905777,"line_start":104,"line_end":104,"column_start":5,"column_end":62}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4720},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\function.rs","byte_start":905898,"byte_end":905917,"line_start":107,"line_end":107,"column_start":5,"column_end":24},"name":"InvalidStorePointer","qualname":"::valid::function::FunctionError::InvalidStorePointer","value":"FunctionError::InvalidStorePointer(Handle<crate::Expression>)","parent":{"krate":0,"index":4662},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"The pointer {0:?} doesn't relate to a valid destination for a store\")","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\function.rs","byte_start":905814,"byte_end":905893,"line_start":106,"line_end":106,"column_start":5,"column_end":84}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4723},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\function.rs","byte_start":906000,"byte_end":906017,"line_start":109,"line_end":109,"column_start":5,"column_end":22},"name":"InvalidStoreValue","qualname":"::valid::function::FunctionError::InvalidStoreValue","value":"FunctionError::InvalidStoreValue(Handle<crate::Expression>)","parent":{"krate":0,"index":4662},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"The value {0:?} can not be stored\")","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\function.rs","byte_start":905950,"byte_end":905995,"line_start":108,"line_end":108,"column_start":5,"column_end":50}}]},{"kind":"StructVariant","id":{"krate":0,"index":4726},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\function.rs","byte_start":906130,"byte_end":906147,"line_start":111,"line_end":111,"column_start":5,"column_end":22},"name":"InvalidStoreTypes","qualname":"::valid::function::FunctionError::InvalidStoreTypes","value":"FunctionError::InvalidStoreTypes { pointer, value }","parent":{"krate":0,"index":4662},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Store of {value:?} into {pointer:?} doesn't have matching types\")","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\function.rs","byte_start":906050,"byte_end":906125,"line_start":110,"line_end":110,"column_start":5,"column_end":80}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4729},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\function.rs","byte_start":906297,"byte_end":906314,"line_start":116,"line_end":116,"column_start":5,"column_end":22},"name":"InvalidExpression","qualname":"::valid::function::FunctionError::InvalidExpression","value":"FunctionError::InvalidExpression(Handle<crate::Expression>)","parent":{"krate":0,"index":4662},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"The expression {0:?} is currupted\")","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\function.rs","byte_start":906247,"byte_end":906292,"line_start":115,"line_end":115,"column_start":5,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4732},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\function.rs","byte_start":906398,"byte_end":906415,"line_start":118,"line_end":118,"column_start":5,"column_end":22},"name":"InvalidImageStore","qualname":"::valid::function::FunctionError::InvalidImageStore","value":"FunctionError::InvalidImageStore(ExpressionError)","parent":{"krate":0,"index":4662},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Image store parameters are invalid\")","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\function.rs","byte_start":906347,"byte_end":906393,"line_start":117,"line_end":117,"column_start":5,"column_end":51}}]},{"kind":"StructVariant","id":{"krate":0,"index":4735},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\function.rs","byte_start":906496,"byte_end":906507,"line_start":120,"line_end":120,"column_start":5,"column_end":16},"name":"InvalidCall","qualname":"::valid::function::FunctionError::InvalidCall","value":"FunctionError::InvalidCall { function, error }","parent":{"krate":0,"index":4662},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Call to {function:?} is invalid\")","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\function.rs","byte_start":906448,"byte_end":906491,"line_start":119,"line_end":119,"column_start":5,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4738},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\function.rs","byte_start":906652,"byte_end":906665,"line_start":126,"line_end":126,"column_start":5,"column_end":18},"name":"InvalidAtomic","qualname":"::valid::function::FunctionError::InvalidAtomic","value":"FunctionError::InvalidAtomic(AtomicError)","parent":{"krate":0,"index":4662},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Atomic operation is invalid\")","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\function.rs","byte_start":906608,"byte_end":906647,"line_start":125,"line_end":125,"column_start":5,"column_end":44}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4741},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\function.rs","byte_start":906811,"byte_end":906832,"line_start":130,"line_end":130,"column_start":5,"column_end":26},"name":"NonUniformControlFlow","qualname":"::valid::function::FunctionError::NonUniformControlFlow","value":"FunctionError::NonUniformControlFlow(UniformityRequirements, Handle<crate::Expression>, UniformityDisruptor)","parent":{"krate":0,"index":4662},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Required uniformity of control flow for {0:?} in {1:?} is not fulfilled because of {2:?}\")","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\function.rs","byte_start":906692,"byte_end":906806,"line_start":127,"line_end":129,"column_start":5,"column_end":7}}]},{"kind":"Enum","id":{"krate":0,"index":4662},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\function.rs","byte_start":904031,"byte_end":904044,"line_start":66,"line_end":66,"column_start":10,"column_end":23},"name":"FunctionError","qualname":"::valid::function::FunctionError","value":"pub enum FunctionError {\n    Expression {\n        handle: Handle<crate::Expression>,\n        error: ExpressionError,\n    },\n    ExpressionAlreadyInScope(Handle<crate::Expression>),\n    LocalVariable {\n        handle: Handle<crate::LocalVariable>,\n        name: String,\n        error: LocalVariableError,\n    },\n    InvalidArgumentType {\n        index: usize,\n        name: String,\n    },\n    InvalidArgumentPointerClass {\n        index: usize,\n        name: String,\n        class: crate::StorageClass,\n    },\n    InstructionsAfterReturn,\n    BreakOutsideOfLoopOrSwitch,\n    ContinueOutsideOfLoop,\n    InvalidReturnSpot,\n    InvalidReturnType(Option<Handle<crate::Expression>>),\n    InvalidIfType(Handle<crate::Expression>),\n    InvalidSwitchType(Handle<crate::Expression>),\n    ConflictingSwitchCase(i32),\n    InvalidStorePointer(Handle<crate::Expression>),\n    InvalidStoreValue(Handle<crate::Expression>),\n    InvalidStoreTypes {\n        pointer: Handle<crate::Expression>,\n        value: Handle<crate::Expression>,\n    },\n    InvalidExpression(Handle<crate::Expression>),\n    InvalidImageStore(ExpressionError),\n    InvalidCall {\n        function: Handle<crate::Function>,\n        error: CallError,\n    },\n    InvalidAtomic(AtomicError),\n    NonUniformControlFlow(UniformityRequirements, Handle<crate::Expression>,\n                          UniformityDisruptor),\n}","parent":null,"children":[{"krate":0,"index":4683},{"krate":0,"index":4686},{"krate":0,"index":4689},{"krate":0,"index":4693},{"krate":0,"index":4696},{"krate":0,"index":4700},{"krate":0,"index":4702},{"krate":0,"index":4704},{"krate":0,"index":4706},{"krate":0,"index":4708},{"krate":0,"index":4711},{"krate":0,"index":4714},{"krate":0,"index":4717},{"krate":0,"index":4720},{"krate":0,"index":4723},{"krate":0,"index":4726},{"krate":0,"index":4729},{"krate":0,"index":4732},{"krate":0,"index":4735},{"krate":0,"index":4738},{"krate":0,"index":4741}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4855},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\interface.rs","byte_start":933660,"byte_end":933672,"line_start":15,"line_end":15,"column_start":5,"column_end":17},"name":"InvalidUsage","qualname":"::valid::interface::GlobalVariableError::InvalidUsage","value":"GlobalVariableError::InvalidUsage","parent":{"krate":0,"index":4843},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Usage isn't compatible with the storage class\")","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\interface.rs","byte_start":933598,"byte_end":933655,"line_start":14,"line_end":14,"column_start":5,"column_end":62}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4857},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\interface.rs","byte_start":933739,"byte_end":933750,"line_start":17,"line_end":17,"column_start":5,"column_end":16},"name":"InvalidType","qualname":"::valid::interface::GlobalVariableError::InvalidType","value":"GlobalVariableError::InvalidType","parent":{"krate":0,"index":4843},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Type isn't compatible with the storage class\")","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\interface.rs","byte_start":933678,"byte_end":933734,"line_start":16,"line_end":16,"column_start":5,"column_end":61}}]},{"kind":"StructVariant","id":{"krate":0,"index":4859},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\interface.rs","byte_start":933830,"byte_end":933846,"line_start":19,"line_end":19,"column_start":5,"column_end":21},"name":"MissingTypeFlags","qualname":"::valid::interface::GlobalVariableError::MissingTypeFlags","value":"GlobalVariableError::MissingTypeFlags { required, seen }","parent":{"krate":0,"index":4843},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Type flags {seen:?} do not meet the required {required:?}\")","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\interface.rs","byte_start":933756,"byte_end":933825,"line_start":18,"line_end":18,"column_start":5,"column_end":74}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4862},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\interface.rs","byte_start":933978,"byte_end":933999,"line_start":24,"line_end":24,"column_start":5,"column_end":26},"name":"UnsupportedCapability","qualname":"::valid::interface::GlobalVariableError::UnsupportedCapability","value":"GlobalVariableError::UnsupportedCapability(Capabilities)","parent":{"krate":0,"index":4843},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Capability {0:?} is not supported\")","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\interface.rs","byte_start":933928,"byte_end":933973,"line_start":23,"line_end":23,"column_start":5,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4865},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\interface.rs","byte_start":934083,"byte_end":934097,"line_start":26,"line_end":26,"column_start":5,"column_end":19},"name":"InvalidBinding","qualname":"::valid::interface::GlobalVariableError::InvalidBinding","value":"GlobalVariableError::InvalidBinding","parent":{"krate":0,"index":4843},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Binding decoration is missing or not applicable\")","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\interface.rs","byte_start":934019,"byte_end":934078,"line_start":25,"line_end":25,"column_start":5,"column_end":64}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4867},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\interface.rs","byte_start":934186,"byte_end":934195,"line_start":28,"line_end":28,"column_start":5,"column_end":14},"name":"Alignment","qualname":"::valid::interface::GlobalVariableError::Alignment","value":"GlobalVariableError::Alignment(Handle<crate::Type>, Disalignment)","parent":{"krate":0,"index":4843},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Alignment requirements for this storage class are not met by {0:?}\")","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\interface.rs","byte_start":934103,"byte_end":934181,"line_start":27,"line_end":27,"column_start":5,"column_end":83}}]},{"kind":"Enum","id":{"krate":0,"index":4843},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\interface.rs","byte_start":933572,"byte_end":933591,"line_start":13,"line_end":13,"column_start":10,"column_end":29},"name":"GlobalVariableError","qualname":"::valid::interface::GlobalVariableError","value":"pub enum GlobalVariableError {\n    InvalidUsage,\n    InvalidType,\n    MissingTypeFlags {\n        required: super::TypeFlags,\n        seen: super::TypeFlags,\n    },\n    UnsupportedCapability(Capabilities),\n    InvalidBinding,\n    Alignment(Handle<crate::Type>, Disalignment),\n}","parent":null,"children":[{"krate":0,"index":4855},{"krate":0,"index":4857},{"krate":0,"index":4859},{"krate":0,"index":4862},{"krate":0,"index":4865},{"krate":0,"index":4867}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4886},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\interface.rs","byte_start":934373,"byte_end":934384,"line_start":34,"line_end":34,"column_start":5,"column_end":16},"name":"InvalidType","qualname":"::valid::interface::VaryingError::InvalidType","value":"VaryingError::InvalidType(Handle<crate::Type>)","parent":{"krate":0,"index":4871},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"The type {0:?} does not match the varying\")","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\interface.rs","byte_start":934315,"byte_end":934368,"line_start":33,"line_end":33,"column_start":5,"column_end":58}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4889},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\interface.rs","byte_start":934454,"byte_end":934474,"line_start":36,"line_end":36,"column_start":5,"column_end":25},"name":"InvalidInterpolation","qualname":"::valid::interface::VaryingError::InvalidInterpolation","value":"VaryingError::InvalidInterpolation","parent":{"krate":0,"index":4871},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Interpolation is not valid\")","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\interface.rs","byte_start":934411,"byte_end":934449,"line_start":35,"line_end":35,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4891},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\interface.rs","byte_start":934580,"byte_end":934600,"line_start":38,"line_end":38,"column_start":5,"column_end":25},"name":"MissingInterpolation","qualname":"::valid::interface::VaryingError::MissingInterpolation","value":"VaryingError::MissingInterpolation","parent":{"krate":0,"index":4871},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Interpolation must be specified on vertex shader outputs and fragment shader inputs\")","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\interface.rs","byte_start":934480,"byte_end":934575,"line_start":37,"line_end":37,"column_start":5,"column_end":100}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4893},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\interface.rs","byte_start":934668,"byte_end":934687,"line_start":40,"line_end":40,"column_start":5,"column_end":24},"name":"InvalidBuiltInStage","qualname":"::valid::interface::VaryingError::InvalidBuiltInStage","value":"VaryingError::InvalidBuiltInStage(crate::BuiltIn)","parent":{"krate":0,"index":4871},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Built-in {0:?} is not available at this stage\")","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\interface.rs","byte_start":934606,"byte_end":934663,"line_start":39,"line_end":39,"column_start":5,"column_end":62}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4896},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\interface.rs","byte_start":934760,"byte_end":934778,"line_start":42,"line_end":42,"column_start":5,"column_end":23},"name":"InvalidBuiltInType","qualname":"::valid::interface::VaryingError::InvalidBuiltInType","value":"VaryingError::InvalidBuiltInType(crate::BuiltIn)","parent":{"krate":0,"index":4871},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Built-in type for {0:?} is invalid\")","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\interface.rs","byte_start":934709,"byte_end":934755,"line_start":41,"line_end":41,"column_start":5,"column_end":51}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4899},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\interface.rs","byte_start":934879,"byte_end":934893,"line_start":44,"line_end":44,"column_start":5,"column_end":19},"name":"MissingBinding","qualname":"::valid::interface::VaryingError::MissingBinding","value":"VaryingError::MissingBinding","parent":{"krate":0,"index":4871},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Entry point arguments and return values must all have bindings\")","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\interface.rs","byte_start":934800,"byte_end":934874,"line_start":43,"line_end":43,"column_start":5,"column_end":79}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4901},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\interface.rs","byte_start":934954,"byte_end":934974,"line_start":46,"line_end":46,"column_start":5,"column_end":25},"name":"MemberMissingBinding","qualname":"::valid::interface::VaryingError::MemberMissingBinding","value":"VaryingError::MemberMissingBinding(u32)","parent":{"krate":0,"index":4871},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Struct member {0} is missing a binding\")","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\interface.rs","byte_start":934899,"byte_end":934949,"line_start":45,"line_end":45,"column_start":5,"column_end":55}}]},{"kind":"StructVariant","id":{"krate":0,"index":4904},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\interface.rs","byte_start":935054,"byte_end":935070,"line_start":48,"line_end":48,"column_start":5,"column_end":21},"name":"BindingCollision","qualname":"::valid::interface::VaryingError::BindingCollision","value":"VaryingError::BindingCollision { location }","parent":{"krate":0,"index":4871},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Multiple bindings at location {location} are present\")","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\interface.rs","byte_start":934985,"byte_end":935049,"line_start":47,"line_end":47,"column_start":5,"column_end":69}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4906},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\interface.rs","byte_start":935151,"byte_end":935167,"line_start":50,"line_end":50,"column_start":5,"column_end":21},"name":"DuplicateBuiltIn","qualname":"::valid::interface::VaryingError::DuplicateBuiltIn","value":"VaryingError::DuplicateBuiltIn(crate::BuiltIn)","parent":{"krate":0,"index":4871},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Built-in {0:?} is present more than once\")","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\interface.rs","byte_start":935094,"byte_end":935146,"line_start":49,"line_end":49,"column_start":5,"column_end":57}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4909},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\interface.rs","byte_start":935239,"byte_end":935260,"line_start":52,"line_end":52,"column_start":5,"column_end":26},"name":"UnsupportedCapability","qualname":"::valid::interface::VaryingError::UnsupportedCapability","value":"VaryingError::UnsupportedCapability(Capabilities)","parent":{"krate":0,"index":4871},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Capability {0:?} is not supported\")","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\interface.rs","byte_start":935189,"byte_end":935234,"line_start":51,"line_end":51,"column_start":5,"column_end":50}}]},{"kind":"Enum","id":{"krate":0,"index":4871},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\interface.rs","byte_start":934296,"byte_end":934308,"line_start":32,"line_end":32,"column_start":10,"column_end":22},"name":"VaryingError","qualname":"::valid::interface::VaryingError","value":"pub enum VaryingError {\n    InvalidType(Handle<crate::Type>),\n    InvalidInterpolation,\n    MissingInterpolation,\n    InvalidBuiltInStage(crate::BuiltIn),\n    InvalidBuiltInType(crate::BuiltIn),\n    MissingBinding,\n    MemberMissingBinding(u32),\n    BindingCollision {\n        location: u32,\n    },\n    DuplicateBuiltIn(crate::BuiltIn),\n    UnsupportedCapability(Capabilities),\n}","parent":null,"children":[{"krate":0,"index":4886},{"krate":0,"index":4889},{"krate":0,"index":4891},{"krate":0,"index":4893},{"krate":0,"index":4896},{"krate":0,"index":4899},{"krate":0,"index":4901},{"krate":0,"index":4904},{"krate":0,"index":4906},{"krate":0,"index":4909}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4933},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\interface.rs","byte_start":935402,"byte_end":935410,"line_start":58,"line_end":58,"column_start":5,"column_end":13},"name":"Conflict","qualname":"::valid::interface::EntryPointError::Conflict","value":"EntryPointError::Conflict","parent":{"krate":0,"index":4912},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Multiple conflicting entry points\")","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\interface.rs","byte_start":935352,"byte_end":935397,"line_start":57,"line_end":57,"column_start":5,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4935},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\interface.rs","byte_start":935467,"byte_end":935491,"line_start":60,"line_end":60,"column_start":5,"column_end":29},"name":"UnexpectedEarlyDepthTest","qualname":"::valid::interface::EntryPointError::UnexpectedEarlyDepthTest","value":"EntryPointError::UnexpectedEarlyDepthTest","parent":{"krate":0,"index":4912},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Early depth test is not applicable\")","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\interface.rs","byte_start":935416,"byte_end":935462,"line_start":59,"line_end":59,"column_start":5,"column_end":51}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4937},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\interface.rs","byte_start":935546,"byte_end":935569,"line_start":62,"line_end":62,"column_start":5,"column_end":28},"name":"UnexpectedWorkgroupSize","qualname":"::valid::interface::EntryPointError::UnexpectedWorkgroupSize","value":"EntryPointError::UnexpectedWorkgroupSize","parent":{"krate":0,"index":4912},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Workgroup size is not applicable\")","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\interface.rs","byte_start":935497,"byte_end":935541,"line_start":61,"line_end":61,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4939},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\interface.rs","byte_start":935622,"byte_end":935645,"line_start":64,"line_end":64,"column_start":5,"column_end":28},"name":"OutOfRangeWorkgroupSize","qualname":"::valid::interface::EntryPointError::OutOfRangeWorkgroupSize","value":"EntryPointError::OutOfRangeWorkgroupSize","parent":{"krate":0,"index":4912},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Workgroup size is out of range\")","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\interface.rs","byte_start":935575,"byte_end":935617,"line_start":63,"line_end":63,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4941},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\interface.rs","byte_start":935707,"byte_end":935731,"line_start":66,"line_end":66,"column_start":5,"column_end":29},"name":"ForbiddenStageOperations","qualname":"::valid::interface::EntryPointError::ForbiddenStageOperations","value":"EntryPointError::ForbiddenStageOperations","parent":{"krate":0,"index":4912},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Uses operations forbidden at this stage\")","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\interface.rs","byte_start":935651,"byte_end":935702,"line_start":65,"line_end":65,"column_start":5,"column_end":56}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4943},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\interface.rs","byte_start":935804,"byte_end":935822,"line_start":68,"line_end":68,"column_start":5,"column_end":23},"name":"InvalidGlobalUsage","qualname":"::valid::interface::EntryPointError::InvalidGlobalUsage","value":"EntryPointError::InvalidGlobalUsage(Handle<crate::GlobalVariable>, GlobalUse)","parent":{"krate":0,"index":4912},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Global variable {0:?} is used incorrectly as {1:?}\")","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\interface.rs","byte_start":935737,"byte_end":935799,"line_start":67,"line_end":67,"column_start":5,"column_end":67}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4947},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\interface.rs","byte_start":935934,"byte_end":935950,"line_start":70,"line_end":70,"column_start":5,"column_end":21},"name":"BindingCollision","qualname":"::valid::interface::EntryPointError::BindingCollision","value":"EntryPointError::BindingCollision(Handle<crate::GlobalVariable>)","parent":{"krate":0,"index":4912},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Bindings for {0:?} conflict with other resource\")","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\interface.rs","byte_start":935870,"byte_end":935929,"line_start":69,"line_end":69,"column_start":5,"column_end":64}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4950},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\interface.rs","byte_start":936030,"byte_end":936038,"line_start":72,"line_end":72,"column_start":5,"column_end":13},"name":"Argument","qualname":"::valid::interface::EntryPointError::Argument","value":"EntryPointError::Argument(u32, VaryingError)","parent":{"krate":0,"index":4912},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Argument {0} varying error\")","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\interface.rs","byte_start":935987,"byte_end":936025,"line_start":71,"line_end":71,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4954},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\interface.rs","byte_start":936110,"byte_end":936116,"line_start":74,"line_end":74,"column_start":5,"column_end":11},"name":"Result","qualname":"::valid::interface::EntryPointError::Result","value":"EntryPointError::Result(VaryingError)","parent":{"krate":0,"index":4912},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Result varying error\")","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\interface.rs","byte_start":936073,"byte_end":936105,"line_start":73,"line_end":73,"column_start":5,"column_end":37}}]},{"kind":"StructVariant","id":{"krate":0,"index":4957},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\interface.rs","byte_start":936225,"byte_end":936252,"line_start":76,"line_end":76,"column_start":5,"column_end":32},"name":"InvalidIntegerInterpolation","qualname":"::valid::interface::EntryPointError::InvalidIntegerInterpolation","value":"EntryPointError::InvalidIntegerInterpolation { location }","parent":{"krate":0,"index":4912},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Location {location} onterpolation of an integer has to be flat\")","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\interface.rs","byte_start":936146,"byte_end":936220,"line_start":75,"line_end":75,"column_start":5,"column_end":79}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4959},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\interface.rs","byte_start":936302,"byte_end":936310,"line_start":78,"line_end":78,"column_start":5,"column_end":13},"name":"Function","qualname":"::valid::interface::EntryPointError::Function","value":"EntryPointError::Function(FunctionError)","parent":{"krate":0,"index":4912},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(transparent)","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\interface.rs","byte_start":936276,"byte_end":936297,"line_start":77,"line_end":77,"column_start":5,"column_end":26}}]},{"kind":"Enum","id":{"krate":0,"index":4912},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\interface.rs","byte_start":935330,"byte_end":935345,"line_start":56,"line_end":56,"column_start":10,"column_end":25},"name":"EntryPointError","qualname":"::valid::interface::EntryPointError","value":"pub enum EntryPointError {\n    Conflict,\n    UnexpectedEarlyDepthTest,\n    UnexpectedWorkgroupSize,\n    OutOfRangeWorkgroupSize,\n    ForbiddenStageOperations,\n    InvalidGlobalUsage(Handle<crate::GlobalVariable>, GlobalUse),\n    BindingCollision(Handle<crate::GlobalVariable>),\n    Argument(u32, VaryingError),\n    Result(VaryingError),\n    InvalidIntegerInterpolation {\n        location: u32,\n    },\n    Function(FunctionError),\n}","parent":null,"children":[{"krate":0,"index":4933},{"krate":0,"index":4935},{"krate":0,"index":4937},{"krate":0,"index":4939},{"krate":0,"index":4941},{"krate":0,"index":4943},{"krate":0,"index":4947},{"krate":0,"index":4950},{"krate":0,"index":4954},{"krate":0,"index":4957},{"krate":0,"index":4959}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4962},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\type.rs","byte_start":953780,"byte_end":953789,"line_start":13,"line_end":13,"column_start":16,"column_end":25},"name":"TypeFlags","qualname":"::valid::r#type::TypeFlags","value":"TypeFlags {  }","parent":null,"children":[{"krate":0,"index":4963}],"decl_id":null,"docs":" Flags associated with [`Type`]s by [`Validator`].","sig":null,"attributes":[{"value":"repr(transparent)","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":13848978,"byte_end":13848987,"line_start":362,"line_end":362,"column_start":11,"column_end":20}}]},{"kind":"Const","id":{"krate":0,"index":5001},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\type.rs","byte_start":954110,"byte_end":954114,"line_start":21,"line_end":21,"column_start":15,"column_end":19},"name":"DATA","qualname":"::valid::r#type::TypeFlags::DATA","value":"Self","parent":{"krate":0,"index":5000},"children":[],"decl_id":null,"docs":" Can be used for data variables.","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5002},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\type.rs","byte_start":954784,"byte_end":954789,"line_start":36,"line_end":36,"column_start":15,"column_end":20},"name":"SIZED","qualname":"::valid::r#type::TypeFlags::SIZED","value":"Self","parent":{"krate":0,"index":5000},"children":[],"decl_id":null,"docs":" The data type has a size known by pipeline creation time.","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5003},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\type.rs","byte_start":954855,"byte_end":954859,"line_start":39,"line_end":39,"column_start":15,"column_end":19},"name":"COPY","qualname":"::valid::r#type::TypeFlags::COPY","value":"Self","parent":{"krate":0,"index":5000},"children":[],"decl_id":null,"docs":" The data can be copied around.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5004},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\type.rs","byte_start":955096,"byte_end":955105,"line_start":45,"line_end":45,"column_start":15,"column_end":24},"name":"INTERFACE","qualname":"::valid::r#type::TypeFlags::INTERFACE","value":"Self","parent":{"krate":0,"index":5000},"children":[],"decl_id":null,"docs":" Can be be used for interfacing between pipeline stages.","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5005},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\type.rs","byte_start":955183,"byte_end":955194,"line_start":48,"line_end":48,"column_start":15,"column_end":26},"name":"HOST_SHARED","qualname":"::valid::r#type::TypeFlags::HOST_SHARED","value":"Self","parent":{"krate":0,"index":5000},"children":[],"decl_id":null,"docs":" Can be used for host-shareable structures.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5006},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\type.rs","byte_start":955271,"byte_end":955280,"line_start":51,"line_end":51,"column_start":15,"column_end":24},"name":"TOP_LEVEL","qualname":"::valid::r#type::TypeFlags::TOP_LEVEL","value":"Self","parent":{"krate":0,"index":5000},"children":[],"decl_id":null,"docs":" This is a top-level host-shareable type.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5007},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\type.rs","byte_start":955364,"byte_end":955372,"line_start":54,"line_end":54,"column_start":15,"column_end":23},"name":"ARGUMENT","qualname":"::valid::r#type::TypeFlags::ARGUMENT","value":"Self","parent":{"krate":0,"index":5000},"children":[],"decl_id":null,"docs":" This type can be passed as a function argument.\n","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":5095},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\type.rs","byte_start":955564,"byte_end":955575,"line_start":61,"line_end":61,"column_start":5,"column_end":16},"name":"ArrayStride","qualname":"::valid::r#type::Disalignment::ArrayStride","value":"Disalignment::ArrayStride { stride, alignment }","parent":{"krate":0,"index":5079},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"The array stride {stride} is not a multiple of the required alignment {alignment}\")","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\type.rs","byte_start":955466,"byte_end":955559,"line_start":60,"line_end":60,"column_start":5,"column_end":98}}]},{"kind":"StructVariant","id":{"krate":0,"index":5098},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\type.rs","byte_start":955709,"byte_end":955719,"line_start":63,"line_end":63,"column_start":5,"column_end":15},"name":"StructSpan","qualname":"::valid::r#type::Disalignment::StructSpan","value":"Disalignment::StructSpan { span, alignment }","parent":{"krate":0,"index":5079},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"The struct span {span}, is not a multiple of the required alignment {alignment}\")","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\type.rs","byte_start":955613,"byte_end":955704,"line_start":62,"line_end":62,"column_start":5,"column_end":96}}]},{"kind":"StructVariant","id":{"krate":0,"index":5101},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\type.rs","byte_start":955870,"byte_end":955882,"line_start":65,"line_end":65,"column_start":5,"column_end":17},"name":"MemberOffset","qualname":"::valid::r#type::Disalignment::MemberOffset","value":"Disalignment::MemberOffset { index, offset, alignment }","parent":{"krate":0,"index":5079},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"The struct member[{index}] offset {offset} is not a multiple of the required alignment {alignment}\")","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\type.rs","byte_start":955755,"byte_end":955865,"line_start":64,"line_end":64,"column_start":5,"column_end":115}}]},{"kind":"StructVariant","id":{"krate":0,"index":5105},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\type.rs","byte_start":956028,"byte_end":956041,"line_start":71,"line_end":71,"column_start":5,"column_end":18},"name":"UnsizedMember","qualname":"::valid::r#type::Disalignment::UnsizedMember","value":"Disalignment::UnsizedMember { index }","parent":{"krate":0,"index":5079},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"The struct member[{index}] is not statically sized\")","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\type.rs","byte_start":955961,"byte_end":956023,"line_start":70,"line_end":70,"column_start":5,"column_end":67}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5107},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\type.rs","byte_start":956109,"byte_end":956125,"line_start":73,"line_end":73,"column_start":5,"column_end":21},"name":"NonHostShareable","qualname":"::valid::r#type::Disalignment::NonHostShareable","value":"Disalignment::NonHostShareable","parent":{"krate":0,"index":5079},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"The type is not host-shareable\")","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\type.rs","byte_start":956062,"byte_end":956104,"line_start":72,"line_end":72,"column_start":5,"column_end":47}}]},{"kind":"Enum","id":{"krate":0,"index":5079},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\type.rs","byte_start":955447,"byte_end":955459,"line_start":59,"line_end":59,"column_start":10,"column_end":22},"name":"Disalignment","qualname":"::valid::r#type::Disalignment","value":"pub enum Disalignment {\n    ArrayStride {\n        stride: u32,\n        alignment: u32,\n    },\n    StructSpan {\n        span: u32,\n        alignment: u32,\n    },\n    MemberOffset {\n        index: u32,\n        offset: u32,\n        alignment: u32,\n    },\n    UnsizedMember {\n        index: u32,\n    },\n    NonHostShareable,\n}","parent":null,"children":[{"krate":0,"index":5095},{"krate":0,"index":5098},{"krate":0,"index":5101},{"krate":0,"index":5105},{"krate":0,"index":5107}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5124},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\type.rs","byte_start":956257,"byte_end":956269,"line_start":79,"line_end":79,"column_start":5,"column_end":17},"name":"InvalidWidth","qualname":"::valid::r#type::TypeError::InvalidWidth","value":"TypeError::InvalidWidth(crate::ScalarKind, crate::Bytes)","parent":{"krate":0,"index":5109},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"The {0:?} scalar width {1} is not supported\")","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\type.rs","byte_start":956197,"byte_end":956252,"line_start":78,"line_end":78,"column_start":5,"column_end":60}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5128},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\type.rs","byte_start":956382,"byte_end":956400,"line_start":81,"line_end":81,"column_start":5,"column_end":23},"name":"InvalidAtomicWidth","qualname":"::valid::r#type::TypeError::InvalidAtomicWidth","value":"TypeError::InvalidAtomicWidth(crate::ScalarKind, crate::Bytes)","parent":{"krate":0,"index":5109},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"The {0:?} scalar width {1} is not supported for an atomic\")","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\type.rs","byte_start":956308,"byte_end":956377,"line_start":80,"line_end":80,"column_start":5,"column_end":74}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5132},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\type.rs","byte_start":956497,"byte_end":956511,"line_start":83,"line_end":83,"column_start":5,"column_end":19},"name":"UnresolvedBase","qualname":"::valid::r#type::TypeError::UnresolvedBase","value":"TypeError::UnresolvedBase(Handle<crate::Type>)","parent":{"krate":0,"index":5109},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"The base handle {0:?} can not be resolved\")","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\type.rs","byte_start":956439,"byte_end":956492,"line_start":82,"line_end":82,"column_start":5,"column_end":58}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5135},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\type.rs","byte_start":956592,"byte_end":956610,"line_start":85,"line_end":85,"column_start":5,"column_end":23},"name":"InvalidPointerBase","qualname":"::valid::r#type::TypeError::InvalidPointerBase","value":"TypeError::InvalidPointerBase(Handle<crate::Type>)","parent":{"krate":0,"index":5109},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Invalid type for pointer target {0:?}\")","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\type.rs","byte_start":956538,"byte_end":956587,"line_start":84,"line_end":84,"column_start":5,"column_end":54}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5138},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\type.rs","byte_start":956685,"byte_end":956696,"line_start":87,"line_end":87,"column_start":5,"column_end":16},"name":"InvalidData","qualname":"::valid::r#type::TypeError::InvalidData","value":"TypeError::InvalidData(Handle<crate::Type>)","parent":{"krate":0,"index":5109},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Expected data type, found {0:?}\")","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\type.rs","byte_start":956637,"byte_end":956680,"line_start":86,"line_end":86,"column_start":5,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5141},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\type.rs","byte_start":956780,"byte_end":956800,"line_start":89,"line_end":89,"column_start":5,"column_end":25},"name":"InvalidArrayBaseType","qualname":"::valid::r#type::TypeError::InvalidArrayBaseType","value":"TypeError::InvalidArrayBaseType(Handle<crate::Type>)","parent":{"krate":0,"index":5109},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Base type {0:?} for the array is invalid\")","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\type.rs","byte_start":956723,"byte_end":956775,"line_start":88,"line_end":88,"column_start":5,"column_end":57}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5144},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\type.rs","byte_start":956896,"byte_end":956920,"line_start":91,"line_end":91,"column_start":5,"column_end":29},"name":"InvalidArraySizeConstant","qualname":"::valid::r#type::TypeError::InvalidArraySizeConstant","value":"TypeError::InvalidArraySizeConstant(Handle<crate::Constant>)","parent":{"krate":0,"index":5109},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"The constant {0:?} can not be used for an array size\")","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\type.rs","byte_start":956827,"byte_end":956891,"line_start":90,"line_end":90,"column_start":5,"column_end":69}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5147},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\type.rs","byte_start":957018,"byte_end":957040,"line_start":93,"line_end":93,"column_start":5,"column_end":27},"name":"NonPositiveArrayLength","qualname":"::valid::r#type::TypeError::NonPositiveArrayLength","value":"TypeError::NonPositiveArrayLength(Handle<crate::Constant>)","parent":{"krate":0,"index":5109},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Array type {0:?} must have a length of one or more\")","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\type.rs","byte_start":956951,"byte_end":957013,"line_start":92,"line_end":92,"column_start":5,"column_end":67}}]},{"kind":"StructVariant","id":{"krate":0,"index":5150},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\type.rs","byte_start":957159,"byte_end":957182,"line_start":95,"line_end":95,"column_start":5,"column_end":28},"name":"InsufficientArrayStride","qualname":"::valid::r#type::TypeError::InsufficientArrayStride","value":"TypeError::InsufficientArrayStride { stride, base_size }","parent":{"krate":0,"index":5109},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Array stride {stride} is smaller than the base element size {base_size}\")","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\type.rs","byte_start":957071,"byte_end":957154,"line_start":94,"line_end":94,"column_start":5,"column_end":88}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5153},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\type.rs","byte_start":957291,"byte_end":957310,"line_start":97,"line_end":97,"column_start":5,"column_end":24},"name":"InvalidDynamicArray","qualname":"::valid::r#type::TypeError::InvalidDynamicArray","value":"TypeError::InvalidDynamicArray(String, Handle<crate::Type>)","parent":{"krate":0,"index":5109},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Field '{0}' can't be dynamically-sized, has type {1:?}\")","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\type.rs","byte_start":957220,"byte_end":957286,"line_start":96,"line_end":96,"column_start":5,"column_end":71}}]},{"kind":"StructVariant","id":{"krate":0,"index":5157},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\type.rs","byte_start":957428,"byte_end":957441,"line_start":99,"line_end":99,"column_start":5,"column_end":18},"name":"MemberOverlap","qualname":"::valid::r#type::TypeError::MemberOverlap","value":"TypeError::MemberOverlap { index, offset }","parent":{"krate":0,"index":5109},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Structure member[{index}] at {offset} overlaps the previous member\")","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\type.rs","byte_start":957345,"byte_end":957423,"line_start":98,"line_end":98,"column_start":5,"column_end":83}}]},{"kind":"StructVariant","id":{"krate":0,"index":5160},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\type.rs","byte_start":957605,"byte_end":957622,"line_start":103,"line_end":103,"column_start":5,"column_end":22},"name":"MemberOutOfBounds","qualname":"::valid::r#type::TypeError::MemberOutOfBounds","value":"TypeError::MemberOutOfBounds { index, offset, size, span }","parent":{"krate":0,"index":5109},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Structure member[{index}] at {offset} and size {size} crosses the structure boundary of size {span}\")","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\type.rs","byte_start":957475,"byte_end":957600,"line_start":100,"line_end":102,"column_start":5,"column_end":7}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5165},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\type.rs","byte_start":957781,"byte_end":957795,"line_start":110,"line_end":110,"column_start":5,"column_end":19},"name":"NestedTopLevel","qualname":"::valid::r#type::TypeError::NestedTopLevel","value":"TypeError::NestedTopLevel","parent":{"krate":0,"index":5109},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"The composite type contains a top-level structure\")","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\type.rs","byte_start":957715,"byte_end":957776,"line_start":109,"line_end":109,"column_start":5,"column_end":66}}]},{"kind":"Enum","id":{"krate":0,"index":5109},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\type.rs","byte_start":956181,"byte_end":956190,"line_start":77,"line_end":77,"column_start":10,"column_end":19},"name":"TypeError","qualname":"::valid::r#type::TypeError","value":"pub enum TypeError {\n    InvalidWidth(crate::ScalarKind, crate::Bytes),\n    InvalidAtomicWidth(crate::ScalarKind, crate::Bytes),\n    UnresolvedBase(Handle<crate::Type>),\n    InvalidPointerBase(Handle<crate::Type>),\n    InvalidData(Handle<crate::Type>),\n    InvalidArrayBaseType(Handle<crate::Type>),\n    InvalidArraySizeConstant(Handle<crate::Constant>),\n    NonPositiveArrayLength(Handle<crate::Constant>),\n    InsufficientArrayStride {\n        stride: u32,\n        base_size: u32,\n    },\n    InvalidDynamicArray(String, Handle<crate::Type>),\n    MemberOverlap {\n        index: u32,\n        offset: u32,\n    },\n    MemberOutOfBounds {\n        index: u32,\n        offset: u32,\n        size: u32,\n        span: u32,\n    },\n    NestedTopLevel,\n}","parent":null,"children":[{"krate":0,"index":5124},{"krate":0,"index":5128},{"krate":0,"index":5132},{"krate":0,"index":5135},{"krate":0,"index":5138},{"krate":0,"index":5141},{"krate":0,"index":5144},{"krate":0,"index":5147},{"krate":0,"index":5150},{"krate":0,"index":5153},{"krate":0,"index":5157},{"krate":0,"index":5160},{"krate":0,"index":5165}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5175},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\mod.rs","byte_start":781797,"byte_end":781812,"line_start":33,"line_end":33,"column_start":16,"column_end":31},"name":"ValidationFlags","qualname":"::valid::ValidationFlags","value":"ValidationFlags {  }","parent":null,"children":[{"krate":0,"index":5176}],"decl_id":null,"docs":" Validation flags.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5212},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\mod.rs","byte_start":781895,"byte_end":781906,"line_start":36,"line_end":36,"column_start":15,"column_end":26},"name":"EXPRESSIONS","qualname":"::valid::ValidationFlags::EXPRESSIONS","value":"Self","parent":{"krate":0,"index":5211},"children":[],"decl_id":null,"docs":" Expressions.\n","sig":null,"attributes":[{"value":"cfg(feature = \"validate\")","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":13854197,"byte_end":13854215,"line_start":520,"line_end":520,"column_start":19,"column_end":37}}]},{"kind":"Const","id":{"krate":0,"index":5213},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\mod.rs","byte_start":782008,"byte_end":782014,"line_start":39,"line_end":39,"column_start":15,"column_end":21},"name":"BLOCKS","qualname":"::valid::ValidationFlags::BLOCKS","value":"Self","parent":{"krate":0,"index":5211},"children":[],"decl_id":null,"docs":" Statements and blocks of them.\n","sig":null,"attributes":[{"value":"cfg(feature = \"validate\")","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":13854197,"byte_end":13854215,"line_start":520,"line_end":520,"column_start":19,"column_end":37}}]},{"kind":"Const","id":{"krate":0,"index":5214},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\mod.rs","byte_start":782144,"byte_end":782167,"line_start":42,"line_end":42,"column_start":15,"column_end":38},"name":"CONTROL_FLOW_UNIFORMITY","qualname":"::valid::ValidationFlags::CONTROL_FLOW_UNIFORMITY","value":"Self","parent":{"krate":0,"index":5211},"children":[],"decl_id":null,"docs":" Uniformity of control flow for operations that require it.\n","sig":null,"attributes":[{"value":"cfg(feature = \"validate\")","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":13854197,"byte_end":13854215,"line_start":520,"line_end":520,"column_start":19,"column_end":37}}]},{"kind":"Const","id":{"krate":0,"index":5215},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\mod.rs","byte_start":782272,"byte_end":782286,"line_start":45,"line_end":45,"column_start":15,"column_end":29},"name":"STRUCT_LAYOUTS","qualname":"::valid::ValidationFlags::STRUCT_LAYOUTS","value":"Self","parent":{"krate":0,"index":5211},"children":[],"decl_id":null,"docs":" Host-shareable structure layouts.\n","sig":null,"attributes":[{"value":"cfg(feature = \"validate\")","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":13854197,"byte_end":13854215,"line_start":520,"line_end":520,"column_start":19,"column_end":37}}]},{"kind":"Const","id":{"krate":0,"index":5216},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\mod.rs","byte_start":782368,"byte_end":782377,"line_start":48,"line_end":48,"column_start":15,"column_end":24},"name":"CONSTANTS","qualname":"::valid::ValidationFlags::CONSTANTS","value":"Self","parent":{"krate":0,"index":5211},"children":[],"decl_id":null,"docs":" Constants.\n","sig":null,"attributes":[{"value":"cfg(feature = \"validate\")","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":13854197,"byte_end":13854215,"line_start":520,"line_end":520,"column_start":19,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":5284},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\mod.rs","byte_start":782729,"byte_end":782741,"line_start":64,"line_end":64,"column_start":16,"column_end":28},"name":"Capabilities","qualname":"::valid::Capabilities","value":"Capabilities {  }","parent":null,"children":[{"krate":0,"index":5285}],"decl_id":null,"docs":" Allowed IR capabilities.\n","sig":null,"attributes":[{"value":"must_use","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":13848978,"byte_end":13848987,"line_start":362,"line_end":362,"column_start":11,"column_end":20}}]},{"kind":"Const","id":{"krate":0,"index":5319},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\mod.rs","byte_start":782815,"byte_end":782828,"line_start":66,"line_end":66,"column_start":15,"column_end":28},"name":"PUSH_CONSTANT","qualname":"::valid::Capabilities::PUSH_CONSTANT","value":"Self","parent":{"krate":0,"index":5318},"children":[],"decl_id":null,"docs":" Support for `StorageClass:PushConstant`.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5320},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\mod.rs","byte_start":782891,"byte_end":782898,"line_start":68,"line_end":68,"column_start":15,"column_end":22},"name":"FLOAT64","qualname":"::valid::Capabilities::FLOAT64","value":"Self","parent":{"krate":0,"index":5318},"children":[],"decl_id":null,"docs":" Float values with width = 8.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5321},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\mod.rs","byte_start":782970,"byte_end":782985,"line_start":70,"line_end":70,"column_start":15,"column_end":30},"name":"PRIMITIVE_INDEX","qualname":"::valid::Capabilities::PRIMITIVE_INDEX","value":"Self","parent":{"krate":0,"index":5318},"children":[],"decl_id":null,"docs":" Support for `Builtin:PrimitiveIndex`.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5381},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\mod.rs","byte_start":783199,"byte_end":783211,"line_start":78,"line_end":78,"column_start":16,"column_end":28},"name":"ShaderStages","qualname":"::valid::ShaderStages","value":"ShaderStages {  }","parent":null,"children":[{"krate":0,"index":5382}],"decl_id":null,"docs":" Validation flags.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5416},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\mod.rs","byte_start":783232,"byte_end":783238,"line_start":79,"line_end":79,"column_start":15,"column_end":21},"name":"VERTEX","qualname":"::valid::ShaderStages::VERTEX","value":"Self","parent":{"krate":0,"index":5415},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5417},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\mod.rs","byte_start":783260,"byte_end":783268,"line_start":80,"line_end":80,"column_start":15,"column_end":23},"name":"FRAGMENT","qualname":"::valid::ShaderStages::FRAGMENT","value":"Self","parent":{"krate":0,"index":5415},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5418},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\mod.rs","byte_start":783290,"byte_end":783297,"line_start":81,"line_end":81,"column_start":15,"column_end":22},"name":"COMPUTE","qualname":"::valid::ShaderStages::COMPUTE","value":"Self","parent":{"krate":0,"index":5415},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5478},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\mod.rs","byte_start":783468,"byte_end":783478,"line_start":88,"line_end":88,"column_start":12,"column_end":22},"name":"ModuleInfo","qualname":"::valid::ModuleInfo","value":"ModuleInfo {  }","parent":null,"children":[{"krate":0,"index":5479},{"krate":0,"index":5480}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5483},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\mod.rs","byte_start":783794,"byte_end":783803,"line_start":101,"line_end":101,"column_start":12,"column_end":21},"name":"Validator","qualname":"::valid::Validator","value":"Validator {  }","parent":null,"children":[{"krate":0,"index":5484},{"krate":0,"index":5485},{"krate":0,"index":5486},{"krate":0,"index":5487},{"krate":0,"index":5488},{"krate":0,"index":5489},{"krate":0,"index":5490},{"krate":0,"index":5491},{"krate":0,"index":5492}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5509},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\mod.rs","byte_start":784265,"byte_end":784276,"line_start":117,"line_end":117,"column_start":5,"column_end":16},"name":"InvalidType","qualname":"::valid::ConstantError::InvalidType","value":"ConstantError::InvalidType","parent":{"krate":0,"index":5495},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"The type doesn't match the constant\")","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\mod.rs","byte_start":784213,"byte_end":784260,"line_start":116,"line_end":116,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5511},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\mod.rs","byte_start":784345,"byte_end":784364,"line_start":119,"line_end":119,"column_start":5,"column_end":24},"name":"UnresolvedComponent","qualname":"::valid::ConstantError::UnresolvedComponent","value":"ConstantError::UnresolvedComponent(Handle<crate::Constant>)","parent":{"krate":0,"index":5495},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"The component handle {0:?} can not be resolved\")","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\mod.rs","byte_start":784282,"byte_end":784340,"line_start":118,"line_end":118,"column_start":5,"column_end":63}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5514},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\mod.rs","byte_start":784459,"byte_end":784473,"line_start":121,"line_end":121,"column_start":5,"column_end":19},"name":"UnresolvedSize","qualname":"::valid::ConstantError::UnresolvedSize","value":"ConstantError::UnresolvedSize(Handle<crate::Constant>)","parent":{"krate":0,"index":5495},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"The array size handle {0:?} can not be resolved\")","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\mod.rs","byte_start":784395,"byte_end":784454,"line_start":120,"line_end":120,"column_start":5,"column_end":64}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5517},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\mod.rs","byte_start":784530,"byte_end":784537,"line_start":123,"line_end":123,"column_start":5,"column_end":12},"name":"Compose","qualname":"::valid::ConstantError::Compose","value":"ConstantError::Compose(ComposeError)","parent":{"krate":0,"index":5495},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(transparent)","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\mod.rs","byte_start":784504,"byte_end":784525,"line_start":122,"line_end":122,"column_start":5,"column_end":26}}]},{"kind":"Enum","id":{"krate":0,"index":5495},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\mod.rs","byte_start":784193,"byte_end":784206,"line_start":115,"line_end":115,"column_start":10,"column_end":23},"name":"ConstantError","qualname":"::valid::ConstantError","value":"pub enum ConstantError {\n    InvalidType,\n    UnresolvedComponent(Handle<crate::Constant>),\n    UnresolvedSize(Handle<crate::Constant>),\n    Compose(ComposeError),\n}","parent":null,"children":[{"krate":0,"index":5509},{"krate":0,"index":5511},{"krate":0,"index":5514},{"krate":0,"index":5517}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5541},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\mod.rs","byte_start":784663,"byte_end":784671,"line_start":129,"line_end":129,"column_start":5,"column_end":13},"name":"Layouter","qualname":"::valid::ValidationError::Layouter","value":"ValidationError::Layouter(InvalidBaseType)","parent":{"krate":0,"index":5520},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(transparent)","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\mod.rs","byte_start":784637,"byte_end":784658,"line_start":128,"line_end":128,"column_start":5,"column_end":26}}]},{"kind":"StructVariant","id":{"krate":0,"index":5544},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\mod.rs","byte_start":784754,"byte_end":784758,"line_start":131,"line_end":131,"column_start":5,"column_end":9},"name":"Type","qualname":"::valid::ValidationError::Type","value":"ValidationError::Type { handle, name, error }","parent":{"krate":0,"index":5520},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Type {handle:?} '{name}' is invalid\")","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\mod.rs","byte_start":784702,"byte_end":784749,"line_start":130,"line_end":130,"column_start":5,"column_end":52}}]},{"kind":"StructVariant","id":{"krate":0,"index":5548},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\mod.rs","byte_start":784931,"byte_end":784939,"line_start":138,"line_end":138,"column_start":5,"column_end":13},"name":"Constant","qualname":"::valid::ValidationError::Constant","value":"ValidationError::Constant { handle, name, error }","parent":{"krate":0,"index":5520},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Constant {handle:?} '{name}' is invalid\")","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\mod.rs","byte_start":784875,"byte_end":784926,"line_start":137,"line_end":137,"column_start":5,"column_end":56}}]},{"kind":"StructVariant","id":{"krate":0,"index":5552},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\mod.rs","byte_start":785127,"byte_end":785141,"line_start":145,"line_end":145,"column_start":5,"column_end":19},"name":"GlobalVariable","qualname":"::valid::ValidationError::GlobalVariable","value":"ValidationError::GlobalVariable { handle, name, error }","parent":{"krate":0,"index":5520},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Global variable {handle:?} '{name}' is invalid\")","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\mod.rs","byte_start":785064,"byte_end":785122,"line_start":144,"line_end":144,"column_start":5,"column_end":63}}]},{"kind":"StructVariant","id":{"krate":0,"index":5556},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\mod.rs","byte_start":785334,"byte_end":785342,"line_start":152,"line_end":152,"column_start":5,"column_end":13},"name":"Function","qualname":"::valid::ValidationError::Function","value":"ValidationError::Function { handle, name, error }","parent":{"krate":0,"index":5520},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Function {handle:?} '{name}' is invalid\")","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\mod.rs","byte_start":785278,"byte_end":785329,"line_start":151,"line_end":151,"column_start":5,"column_end":56}}]},{"kind":"StructVariant","id":{"krate":0,"index":5560},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\mod.rs","byte_start":785526,"byte_end":785536,"line_start":159,"line_end":159,"column_start":5,"column_end":15},"name":"EntryPoint","qualname":"::valid::ValidationError::EntryPoint","value":"ValidationError::EntryPoint { stage, name, error }","parent":{"krate":0,"index":5520},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Entry point {name} at {stage:?} is invalid\")","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\mod.rs","byte_start":785467,"byte_end":785521,"line_start":158,"line_end":158,"column_start":5,"column_end":59}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5564},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\mod.rs","byte_start":785693,"byte_end":785702,"line_start":166,"line_end":166,"column_start":5,"column_end":14},"name":"Corrupted","qualname":"::valid::ValidationError::Corrupted","value":"ValidationError::Corrupted","parent":{"krate":0,"index":5520},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Module is corrupted\")","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\mod.rs","byte_start":785657,"byte_end":785688,"line_start":165,"line_end":165,"column_start":5,"column_end":36}}]},{"kind":"Enum","id":{"krate":0,"index":5520},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\mod.rs","byte_start":784615,"byte_end":784630,"line_start":127,"line_end":127,"column_start":10,"column_end":25},"name":"ValidationError","qualname":"::valid::ValidationError","value":"pub enum ValidationError {\n    Layouter(InvalidBaseType),\n    Type {\n        handle: Handle<crate::Type>,\n        name: String,\n        error: TypeError,\n    },\n    Constant {\n        handle: Handle<crate::Constant>,\n        name: String,\n        error: ConstantError,\n    },\n    GlobalVariable {\n        handle: Handle<crate::GlobalVariable>,\n        name: String,\n        error: GlobalVariableError,\n    },\n    Function {\n        handle: Handle<crate::Function>,\n        name: String,\n        error: FunctionError,\n    },\n    EntryPoint {\n        stage: crate::ShaderStage,\n        name: String,\n        error: EntryPointError,\n    },\n    Corrupted,\n}","parent":null,"children":[{"krate":0,"index":5541},{"krate":0,"index":5544},{"krate":0,"index":5548},{"krate":0,"index":5552},{"krate":0,"index":5556},{"krate":0,"index":5560},{"krate":0,"index":5564}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2655},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\mod.rs","byte_start":787134,"byte_end":787137,"line_start":213,"line_end":213,"column_start":12,"column_end":15},"name":"new","qualname":"<Validator>::new","value":"pub fn new(ValidationFlags, Capabilities) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new validator instance.\n","sig":null,"attributes":[{"value":"/ Construct a new validator instance.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\mod.rs","byte_start":787083,"byte_end":787122,"line_start":212,"line_end":212,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":2659},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\mod.rs","byte_start":789144,"byte_end":789152,"line_start":268,"line_end":268,"column_start":12,"column_end":20},"name":"validate","qualname":"<Validator>::validate","value":"pub fn validate(&mut Self, &crate::Module)\n-> Result<ModuleInfo, ValidationError>","parent":null,"children":[],"decl_id":null,"docs":" Check the given module to be valid.\n","sig":null,"attributes":[{"value":"/ Check the given module to be valid.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\mod.rs","byte_start":789093,"byte_end":789132,"line_start":267,"line_end":267,"column_start":5,"column_end":44}}]},{"kind":"Const","id":{"krate":0,"index":2690},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":9837,"byte_end":9847,"line_start":230,"line_end":230,"column_start":11,"column_end":21},"name":"BOOL_WIDTH","qualname":"::BOOL_WIDTH","value":"Bytes","parent":null,"children":[],"decl_id":null,"docs":" Width of a boolean type, in bytes.\n","sig":null,"attributes":[{"value":"/ Width of a boolean type, in bytes.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":9788,"byte_end":9826,"line_start":229,"line_end":229,"column_start":1,"column_end":39}}]},{"kind":"Type","id":{"krate":0,"index":2691},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":9932,"byte_end":9943,"line_start":233,"line_end":233,"column_start":10,"column_end":21},"name":"FastHashMap","qualname":"::FastHashMap","value":"HashMap<K, T, BuildHasherDefault<fxhash::FxHasher>>","parent":null,"children":[],"decl_id":null,"docs":" Hash map that is faster but not resilient to DoS attacks.\n","sig":null,"attributes":[{"value":"/ Hash map that is faster but not resilient to DoS attacks.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":9861,"byte_end":9922,"line_start":232,"line_end":232,"column_start":1,"column_end":62}}]},{"kind":"Type","id":{"krate":0,"index":2694},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":10076,"byte_end":10087,"line_start":235,"line_end":235,"column_start":10,"column_end":21},"name":"FastHashSet","qualname":"::FastHashSet","value":"HashSet<K, BuildHasherDefault<fxhash::FxHasher>>","parent":null,"children":[],"decl_id":null,"docs":" Hash set that is faster but not resilient to DoS attacks.\n","sig":null,"attributes":[{"value":"/ Hash set that is faster but not resilient to DoS attacks.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":10005,"byte_end":10066,"line_start":234,"line_end":234,"column_start":1,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":5566},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":11130,"byte_end":11144,"line_start":255,"line_end":255,"column_start":12,"column_end":26},"name":"EarlyDepthTest","qualname":"::EarlyDepthTest","value":"EarlyDepthTest {  }","parent":null,"children":[{"krate":0,"index":5567}],"decl_id":null,"docs":" Early fragment tests. In a standard situation if a driver determines that it is possible to\n switch on early depth test it will. Typical situations when early depth test is switched off:\n   - Calling ```discard``` in a shader.\n   - Writing to the depth buffer, unless ConservativeDepth is enabled.","sig":null,"attributes":[{"value":"/ Early fragment tests. In a standard situation if a driver determines that it is possible to","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":10280,"byte_end":10375,"line_start":240,"line_end":240,"column_start":1,"column_end":96}},{"value":"/ switch on early depth test it will. Typical situations when early depth test is switched off:","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":10376,"byte_end":10473,"line_start":241,"line_end":241,"column_start":1,"column_end":98}},{"value":"/   - Calling ```discard``` in a shader.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":10474,"byte_end":10516,"line_start":242,"line_end":242,"column_start":1,"column_end":43}},{"value":"/   - Writing to the depth buffer, unless ConservativeDepth is enabled.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":10517,"byte_end":10590,"line_start":243,"line_end":243,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":10591,"byte_end":10594,"line_start":244,"line_end":244,"column_start":1,"column_end":4}},{"value":"/ SPIR-V: ExecutionMode EarlyFragmentTests","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":10595,"byte_end":10639,"line_start":245,"line_end":245,"column_start":1,"column_end":45}},{"value":"/ In GLSL: layout(early_fragment_tests) in;","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":10640,"byte_end":10685,"line_start":246,"line_end":246,"column_start":1,"column_end":46}},{"value":"/ HLSL: Attribute earlydepthstencil","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":10686,"byte_end":10723,"line_start":247,"line_end":247,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":10724,"byte_end":10727,"line_start":248,"line_end":248,"column_start":1,"column_end":4}},{"value":"/ For more, see:","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":10728,"byte_end":10746,"line_start":249,"line_end":249,"column_start":1,"column_end":19}},{"value":"/   - <https://www.khronos.org/opengl/wiki/Early_Fragment_Test#Explicit_specification>","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":10747,"byte_end":10835,"line_start":250,"line_end":250,"column_start":1,"column_end":89}},{"value":"/   - <https://docs.microsoft.com/en-us/windows/win32/direct3dhlsl/sm5-attributes-earlydepthstencil>","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":10836,"byte_end":10938,"line_start":251,"line_end":251,"column_start":1,"column_end":103}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5588},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":12060,"byte_end":12072,"line_start":273,"line_end":273,"column_start":5,"column_end":17},"name":"GreaterEqual","qualname":"::ConservativeDepth::GreaterEqual","value":"ConservativeDepth::GreaterEqual","parent":{"krate":0,"index":5587},"children":[],"decl_id":null,"docs":" Shader may rewrite depth only with a value greater than calculated;\n","sig":null,"attributes":[{"value":"/ Shader may rewrite depth only with a value greater than calculated;","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":11984,"byte_end":12055,"line_start":272,"line_end":272,"column_start":5,"column_end":76}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5590},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":12184,"byte_end":12193,"line_start":276,"line_end":276,"column_start":5,"column_end":14},"name":"LessEqual","qualname":"::ConservativeDepth::LessEqual","value":"ConservativeDepth::LessEqual","parent":{"krate":0,"index":5587},"children":[],"decl_id":null,"docs":" Shader may rewrite depth smaller than one that would have been written without the modification.\n","sig":null,"attributes":[{"value":"/ Shader may rewrite depth smaller than one that would have been written without the modification.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":12079,"byte_end":12179,"line_start":275,"line_end":275,"column_start":5,"column_end":105}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5592},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":12244,"byte_end":12253,"line_start":279,"line_end":279,"column_start":5,"column_end":14},"name":"Unchanged","qualname":"::ConservativeDepth::Unchanged","value":"ConservativeDepth::Unchanged","parent":{"krate":0,"index":5587},"children":[],"decl_id":null,"docs":" Shader may not rewrite depth value.\n","sig":null,"attributes":[{"value":"/ Shader may not rewrite depth value.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":12200,"byte_end":12239,"line_start":278,"line_end":278,"column_start":5,"column_end":44}}]},{"kind":"Enum","id":{"krate":0,"index":5587},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":11960,"byte_end":11977,"line_start":271,"line_end":271,"column_start":10,"column_end":27},"name":"ConservativeDepth","qualname":"::ConservativeDepth","value":"pub enum ConservativeDepth { GreaterEqual, LessEqual, Unchanged, }","parent":null,"children":[{"krate":0,"index":5588},{"krate":0,"index":5590},{"krate":0,"index":5592}],"decl_id":null,"docs":" Enables adjusting depth without disabling early Z.","sig":null,"attributes":[{"value":"/ Enables adjusting depth without disabling early Z.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":11194,"byte_end":11248,"line_start":258,"line_end":258,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":11249,"byte_end":11252,"line_start":259,"line_end":259,"column_start":1,"column_end":4}},{"value":"/ SPIR-V: ExecutionMode DepthGreater/DepthLess/DepthUnchanged","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":11253,"byte_end":11316,"line_start":260,"line_end":260,"column_start":1,"column_end":64}},{"value":"/ GLSL: layout (depth_<greater/less/unchanged/any>) out float gl_FragDepth;","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":11317,"byte_end":11394,"line_start":261,"line_end":261,"column_start":1,"column_end":78}},{"value":"/   - ```depth_any``` option behaves as if the layout qualifier was not present.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":11395,"byte_end":11477,"line_start":262,"line_end":262,"column_start":1,"column_end":83}},{"value":"/ HLSL: SV_Depth/SV_DepthGreaterEqual/SV_DepthLessEqual","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":11478,"byte_end":11535,"line_start":263,"line_end":263,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":11536,"byte_end":11539,"line_start":264,"line_end":264,"column_start":1,"column_end":4}},{"value":"/ For more, see:","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":11540,"byte_end":11558,"line_start":265,"line_end":265,"column_start":1,"column_end":19}},{"value":"/   - <https://www.khronos.org/registry/OpenGL/extensions/ARB/ARB_conservative_depth.txt>","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":11559,"byte_end":11650,"line_start":266,"line_end":266,"column_start":1,"column_end":92}},{"value":"/   - <https://docs.microsoft.com/en-us/windows/win32/direct3dhlsl/dx-graphics-hlsl-semantics#system-value-semantics>","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":11651,"byte_end":11770,"line_start":267,"line_end":267,"column_start":1,"column_end":120}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5613},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":12558,"byte_end":12564,"line_start":288,"line_end":288,"column_start":5,"column_end":11},"name":"Vertex","qualname":"::ShaderStage::Vertex","value":"ShaderStage::Vertex","parent":{"krate":0,"index":5612},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5615},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":12570,"byte_end":12578,"line_start":289,"line_end":289,"column_start":5,"column_end":13},"name":"Fragment","qualname":"::ShaderStage::Fragment","value":"ShaderStage::Fragment","parent":{"krate":0,"index":5612},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5617},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":12584,"byte_end":12591,"line_start":290,"line_end":290,"column_start":5,"column_end":12},"name":"Compute","qualname":"::ShaderStage::Compute","value":"ShaderStage::Compute","parent":{"krate":0,"index":5612},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":5612},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":12540,"byte_end":12551,"line_start":287,"line_end":287,"column_start":10,"column_end":21},"name":"ShaderStage","qualname":"::ShaderStage","value":"pub enum ShaderStage { Vertex, Fragment, Compute, }","parent":null,"children":[{"krate":0,"index":5613},{"krate":0,"index":5615},{"krate":0,"index":5617}],"decl_id":null,"docs":" Stage of the programmable pipeline.\n","sig":null,"attributes":[{"value":"/ Stage of the programmable pipeline.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":12258,"byte_end":12297,"line_start":282,"line_end":282,"column_start":1,"column_end":40}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":12478,"byte_end":12500,"line_start":286,"line_end":286,"column_start":1,"column_end":23}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5638},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":12865,"byte_end":12873,"line_start":299,"line_end":299,"column_start":5,"column_end":13},"name":"Function","qualname":"::StorageClass::Function","value":"StorageClass::Function","parent":{"krate":0,"index":5637},"children":[],"decl_id":null,"docs":" Function locals.\n","sig":null,"attributes":[{"value":"/ Function locals.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":12840,"byte_end":12860,"line_start":298,"line_end":298,"column_start":5,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5640},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":12926,"byte_end":12933,"line_start":301,"line_end":301,"column_start":5,"column_end":12},"name":"Private","qualname":"::StorageClass::Private","value":"StorageClass::Private","parent":{"krate":0,"index":5637},"children":[],"decl_id":null,"docs":" Private data, per invocation, mutable.\n","sig":null,"attributes":[{"value":"/ Private data, per invocation, mutable.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":12879,"byte_end":12921,"line_start":300,"line_end":300,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5642},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":12979,"byte_end":12988,"line_start":303,"line_end":303,"column_start":5,"column_end":14},"name":"WorkGroup","qualname":"::StorageClass::WorkGroup","value":"StorageClass::WorkGroup","parent":{"krate":0,"index":5637},"children":[],"decl_id":null,"docs":" Workgroup shared data, mutable.\n","sig":null,"attributes":[{"value":"/ Workgroup shared data, mutable.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":12939,"byte_end":12974,"line_start":302,"line_end":302,"column_start":5,"column_end":40}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5644},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":13023,"byte_end":13030,"line_start":305,"line_end":305,"column_start":5,"column_end":12},"name":"Uniform","qualname":"::StorageClass::Uniform","value":"StorageClass::Uniform","parent":{"krate":0,"index":5637},"children":[],"decl_id":null,"docs":" Uniform buffer data.\n","sig":null,"attributes":[{"value":"/ Uniform buffer data.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":12994,"byte_end":13018,"line_start":304,"line_end":304,"column_start":5,"column_end":29}}]},{"kind":"StructVariant","id":{"krate":0,"index":5646},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":13086,"byte_end":13093,"line_start":307,"line_end":307,"column_start":5,"column_end":12},"name":"Storage","qualname":"::StorageClass::Storage","value":"StorageClass::Storage { access }","parent":{"krate":0,"index":5637},"children":[],"decl_id":null,"docs":" Storage buffer data, potentially mutable.\n","sig":null,"attributes":[{"value":"/ Storage buffer data, potentially mutable.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":13036,"byte_end":13081,"line_start":306,"line_end":306,"column_start":5,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5648},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":13178,"byte_end":13184,"line_start":309,"line_end":309,"column_start":5,"column_end":11},"name":"Handle","qualname":"::StorageClass::Handle","value":"StorageClass::Handle","parent":{"krate":0,"index":5637},"children":[],"decl_id":null,"docs":" Opaque handles, such as samplers and images.\n","sig":null,"attributes":[{"value":"/ Opaque handles, such as samplers and images.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":13125,"byte_end":13173,"line_start":308,"line_end":308,"column_start":5,"column_end":53}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5650},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":13214,"byte_end":13226,"line_start":311,"line_end":311,"column_start":5,"column_end":17},"name":"PushConstant","qualname":"::StorageClass::PushConstant","value":"StorageClass::PushConstant","parent":{"krate":0,"index":5637},"children":[],"decl_id":null,"docs":" Push constants.\n","sig":null,"attributes":[{"value":"/ Push constants.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":13190,"byte_end":13209,"line_start":310,"line_end":310,"column_start":5,"column_end":24}}]},{"kind":"Enum","id":{"krate":0,"index":5637},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":12821,"byte_end":12833,"line_start":297,"line_end":297,"column_start":10,"column_end":22},"name":"StorageClass","qualname":"::StorageClass","value":"pub enum StorageClass {\n    Function,\n    Private,\n    WorkGroup,\n    Uniform,\n    Storage {\n        access: StorageAccess,\n    },\n    Handle,\n    PushConstant,\n}","parent":null,"children":[{"krate":0,"index":5638},{"krate":0,"index":5640},{"krate":0,"index":5642},{"krate":0,"index":5644},{"krate":0,"index":5646},{"krate":0,"index":5648},{"krate":0,"index":5650}],"decl_id":null,"docs":" Class of storage for variables.\n","sig":null,"attributes":[{"value":"/ Class of storage for variables.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":12596,"byte_end":12631,"line_start":293,"line_end":293,"column_start":1,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5672},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":13467,"byte_end":13475,"line_start":319,"line_end":319,"column_start":5,"column_end":13},"name":"Position","qualname":"::BuiltIn::Position","value":"BuiltIn::Position","parent":{"krate":0,"index":5671},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5674},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":13481,"byte_end":13490,"line_start":320,"line_end":320,"column_start":5,"column_end":14},"name":"ViewIndex","qualname":"::BuiltIn::ViewIndex","value":"BuiltIn::ViewIndex","parent":{"krate":0,"index":5671},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5676},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":13510,"byte_end":13522,"line_start":322,"line_end":322,"column_start":5,"column_end":17},"name":"BaseInstance","qualname":"::BuiltIn::BaseInstance","value":"BuiltIn::BaseInstance","parent":{"krate":0,"index":5671},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5678},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":13528,"byte_end":13538,"line_start":323,"line_end":323,"column_start":5,"column_end":15},"name":"BaseVertex","qualname":"::BuiltIn::BaseVertex","value":"BuiltIn::BaseVertex","parent":{"krate":0,"index":5671},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5680},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":13544,"byte_end":13556,"line_start":324,"line_end":324,"column_start":5,"column_end":17},"name":"ClipDistance","qualname":"::BuiltIn::ClipDistance","value":"BuiltIn::ClipDistance","parent":{"krate":0,"index":5671},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5682},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":13562,"byte_end":13574,"line_start":325,"line_end":325,"column_start":5,"column_end":17},"name":"CullDistance","qualname":"::BuiltIn::CullDistance","value":"BuiltIn::CullDistance","parent":{"krate":0,"index":5671},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5684},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":13580,"byte_end":13593,"line_start":326,"line_end":326,"column_start":5,"column_end":18},"name":"InstanceIndex","qualname":"::BuiltIn::InstanceIndex","value":"BuiltIn::InstanceIndex","parent":{"krate":0,"index":5671},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5686},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":13599,"byte_end":13608,"line_start":327,"line_end":327,"column_start":5,"column_end":14},"name":"PointSize","qualname":"::BuiltIn::PointSize","value":"BuiltIn::PointSize","parent":{"krate":0,"index":5671},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5688},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":13614,"byte_end":13625,"line_start":328,"line_end":328,"column_start":5,"column_end":16},"name":"VertexIndex","qualname":"::BuiltIn::VertexIndex","value":"BuiltIn::VertexIndex","parent":{"krate":0,"index":5671},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5690},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":13647,"byte_end":13656,"line_start":330,"line_end":330,"column_start":5,"column_end":14},"name":"FragDepth","qualname":"::BuiltIn::FragDepth","value":"BuiltIn::FragDepth","parent":{"krate":0,"index":5671},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5692},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":13662,"byte_end":13673,"line_start":331,"line_end":331,"column_start":5,"column_end":16},"name":"FrontFacing","qualname":"::BuiltIn::FrontFacing","value":"BuiltIn::FrontFacing","parent":{"krate":0,"index":5671},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5694},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":13679,"byte_end":13693,"line_start":332,"line_end":332,"column_start":5,"column_end":19},"name":"PrimitiveIndex","qualname":"::BuiltIn::PrimitiveIndex","value":"BuiltIn::PrimitiveIndex","parent":{"krate":0,"index":5671},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5696},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":13699,"byte_end":13710,"line_start":333,"line_end":333,"column_start":5,"column_end":16},"name":"SampleIndex","qualname":"::BuiltIn::SampleIndex","value":"BuiltIn::SampleIndex","parent":{"krate":0,"index":5671},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5698},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":13716,"byte_end":13726,"line_start":334,"line_end":334,"column_start":5,"column_end":15},"name":"SampleMask","qualname":"::BuiltIn::SampleMask","value":"BuiltIn::SampleMask","parent":{"krate":0,"index":5671},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5700},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":13747,"byte_end":13765,"line_start":336,"line_end":336,"column_start":5,"column_end":23},"name":"GlobalInvocationId","qualname":"::BuiltIn::GlobalInvocationId","value":"BuiltIn::GlobalInvocationId","parent":{"krate":0,"index":5671},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5702},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":13771,"byte_end":13788,"line_start":337,"line_end":337,"column_start":5,"column_end":22},"name":"LocalInvocationId","qualname":"::BuiltIn::LocalInvocationId","value":"BuiltIn::LocalInvocationId","parent":{"krate":0,"index":5671},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5704},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":13794,"byte_end":13814,"line_start":338,"line_end":338,"column_start":5,"column_end":25},"name":"LocalInvocationIndex","qualname":"::BuiltIn::LocalInvocationIndex","value":"BuiltIn::LocalInvocationIndex","parent":{"krate":0,"index":5671},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5706},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":13820,"byte_end":13831,"line_start":339,"line_end":339,"column_start":5,"column_end":16},"name":"WorkGroupId","qualname":"::BuiltIn::WorkGroupId","value":"BuiltIn::WorkGroupId","parent":{"krate":0,"index":5671},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5708},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":13837,"byte_end":13850,"line_start":340,"line_end":340,"column_start":5,"column_end":18},"name":"WorkGroupSize","qualname":"::BuiltIn::WorkGroupSize","value":"BuiltIn::WorkGroupSize","parent":{"krate":0,"index":5671},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5710},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":13856,"byte_end":13869,"line_start":341,"line_end":341,"column_start":5,"column_end":18},"name":"NumWorkGroups","qualname":"::BuiltIn::NumWorkGroups","value":"BuiltIn::NumWorkGroups","parent":{"krate":0,"index":5671},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":5671},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":13453,"byte_end":13460,"line_start":318,"line_end":318,"column_start":10,"column_end":17},"name":"BuiltIn","qualname":"::BuiltIn","value":"pub enum BuiltIn {\n    Position,\n    ViewIndex,\n    BaseInstance,\n    BaseVertex,\n    ClipDistance,\n    CullDistance,\n    InstanceIndex,\n    PointSize,\n    VertexIndex,\n    FragDepth,\n    FrontFacing,\n    PrimitiveIndex,\n    SampleIndex,\n    SampleMask,\n    GlobalInvocationId,\n    LocalInvocationId,\n    LocalInvocationIndex,\n    WorkGroupId,\n    WorkGroupSize,\n    NumWorkGroups,\n}","parent":null,"children":[{"krate":0,"index":5672},{"krate":0,"index":5674},{"krate":0,"index":5676},{"krate":0,"index":5678},{"krate":0,"index":5680},{"krate":0,"index":5682},{"krate":0,"index":5684},{"krate":0,"index":5686},{"krate":0,"index":5688},{"krate":0,"index":5690},{"krate":0,"index":5692},{"krate":0,"index":5694},{"krate":0,"index":5696},{"krate":0,"index":5698},{"krate":0,"index":5700},{"krate":0,"index":5702},{"krate":0,"index":5704},{"krate":0,"index":5706},{"krate":0,"index":5708},{"krate":0,"index":5710}],"decl_id":null,"docs":" Built-in inputs and outputs.\n","sig":null,"attributes":[{"value":"/ Built-in inputs and outputs.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":13231,"byte_end":13263,"line_start":314,"line_end":314,"column_start":1,"column_end":33}}]},{"kind":"Type","id":{"krate":0,"index":2697},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":13915,"byte_end":13920,"line_start":345,"line_end":345,"column_start":10,"column_end":15},"name":"Bytes","qualname":"::Bytes","value":"u8","parent":null,"children":[],"decl_id":null,"docs":" Number of bytes per scalar.\n","sig":null,"attributes":[{"value":"/ Number of bytes per scalar.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":13874,"byte_end":13905,"line_start":344,"line_end":344,"column_start":1,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5731},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":14202,"byte_end":14204,"line_start":354,"line_end":354,"column_start":5,"column_end":7},"name":"Bi","qualname":"::VectorSize::Bi","value":"VectorSize::Bi","parent":{"krate":0,"index":5730},"children":[],"decl_id":null,"docs":" 2D vector\n","sig":null,"attributes":[{"value":"/ 2D vector","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":14184,"byte_end":14197,"line_start":353,"line_end":353,"column_start":5,"column_end":18}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5734},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":14232,"byte_end":14235,"line_start":356,"line_end":356,"column_start":5,"column_end":8},"name":"Tri","qualname":"::VectorSize::Tri","value":"VectorSize::Tri","parent":{"krate":0,"index":5730},"children":[],"decl_id":null,"docs":" 3D vector\n","sig":null,"attributes":[{"value":"/ 3D vector","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":14214,"byte_end":14227,"line_start":355,"line_end":355,"column_start":5,"column_end":18}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5737},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":14263,"byte_end":14267,"line_start":358,"line_end":358,"column_start":5,"column_end":9},"name":"Quad","qualname":"::VectorSize::Quad","value":"VectorSize::Quad","parent":{"krate":0,"index":5730},"children":[],"decl_id":null,"docs":" 4D vector\n","sig":null,"attributes":[{"value":"/ 4D vector","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":14245,"byte_end":14258,"line_start":357,"line_end":357,"column_start":5,"column_end":18}}]},{"kind":"Enum","id":{"krate":0,"index":5730},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":14167,"byte_end":14177,"line_start":352,"line_end":352,"column_start":10,"column_end":20},"name":"VectorSize","qualname":"::VectorSize","value":"pub enum VectorSize { Bi = , Tri = , Quad = , }","parent":null,"children":[{"krate":0,"index":5731},{"krate":0,"index":5734},{"krate":0,"index":5737}],"decl_id":null,"docs":" Number of components in a vector.\n","sig":null,"attributes":[{"value":"/ Number of components in a vector.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":13928,"byte_end":13965,"line_start":347,"line_end":347,"column_start":1,"column_end":38}},{"value":"repr(u8)","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":13966,"byte_end":13977,"line_start":348,"line_end":348,"column_start":1,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5759},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":14556,"byte_end":14560,"line_start":368,"line_end":368,"column_start":5,"column_end":9},"name":"Sint","qualname":"::ScalarKind::Sint","value":"ScalarKind::Sint","parent":{"krate":0,"index":5758},"children":[],"decl_id":null,"docs":" Signed integer type.\n","sig":null,"attributes":[{"value":"/ Signed integer type.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":14527,"byte_end":14551,"line_start":367,"line_end":367,"column_start":5,"column_end":29}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5761},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":14597,"byte_end":14601,"line_start":370,"line_end":370,"column_start":5,"column_end":9},"name":"Uint","qualname":"::ScalarKind::Uint","value":"ScalarKind::Uint","parent":{"krate":0,"index":5758},"children":[],"decl_id":null,"docs":" Unsigned integer type.\n","sig":null,"attributes":[{"value":"/ Unsigned integer type.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":14566,"byte_end":14592,"line_start":369,"line_end":369,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5763},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":14636,"byte_end":14641,"line_start":372,"line_end":372,"column_start":5,"column_end":10},"name":"Float","qualname":"::ScalarKind::Float","value":"ScalarKind::Float","parent":{"krate":0,"index":5758},"children":[],"decl_id":null,"docs":" Floating point type.\n","sig":null,"attributes":[{"value":"/ Floating point type.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":14607,"byte_end":14631,"line_start":371,"line_end":371,"column_start":5,"column_end":29}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5765},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":14669,"byte_end":14673,"line_start":374,"line_end":374,"column_start":5,"column_end":9},"name":"Bool","qualname":"::ScalarKind::Bool","value":"ScalarKind::Bool","parent":{"krate":0,"index":5758},"children":[],"decl_id":null,"docs":" Boolean type.\n","sig":null,"attributes":[{"value":"/ Boolean type.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":14647,"byte_end":14664,"line_start":373,"line_end":373,"column_start":5,"column_end":22}}]},{"kind":"Enum","id":{"krate":0,"index":5758},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":14510,"byte_end":14520,"line_start":366,"line_end":366,"column_start":10,"column_end":20},"name":"ScalarKind","qualname":"::ScalarKind","value":"pub enum ScalarKind { Sint, Uint, Float, Bool, }","parent":null,"children":[{"krate":0,"index":5759},{"krate":0,"index":5761},{"krate":0,"index":5763},{"krate":0,"index":5765}],"decl_id":null,"docs":" Primitive type for a scalar.\n","sig":null,"attributes":[{"value":"/ Primitive type for a scalar.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":14276,"byte_end":14308,"line_start":361,"line_end":361,"column_start":1,"column_end":33}},{"value":"repr(u8)","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":14309,"byte_end":14320,"line_start":362,"line_end":362,"column_start":1,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5786},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":14953,"byte_end":14961,"line_start":384,"line_end":384,"column_start":5,"column_end":13},"name":"Constant","qualname":"::ArraySize::Constant","value":"ArraySize::Constant(Handle<Constant>)","parent":{"krate":0,"index":5785},"children":[],"decl_id":null,"docs":" The array size is constant.\n","sig":null,"attributes":[{"value":"/ The array size is constant.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":14917,"byte_end":14948,"line_start":383,"line_end":383,"column_start":5,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5789},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":15031,"byte_end":15038,"line_start":386,"line_end":386,"column_start":5,"column_end":12},"name":"Dynamic","qualname":"::ArraySize::Dynamic","value":"ArraySize::Dynamic","parent":{"krate":0,"index":5785},"children":[],"decl_id":null,"docs":" The array size can change at runtime.\n","sig":null,"attributes":[{"value":"/ The array size can change at runtime.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":14985,"byte_end":15026,"line_start":385,"line_end":385,"column_start":5,"column_end":46}}]},{"kind":"Enum","id":{"krate":0,"index":5785},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":14901,"byte_end":14910,"line_start":382,"line_end":382,"column_start":10,"column_end":19},"name":"ArraySize","qualname":"::ArraySize","value":"pub enum ArraySize { Constant(Handle<Constant>), Dynamic, }","parent":null,"children":[{"krate":0,"index":5786},{"krate":0,"index":5789}],"decl_id":null,"docs":" Size of an array.\n","sig":null,"attributes":[{"value":"/ Size of an array.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":14678,"byte_end":14699,"line_start":377,"line_end":377,"column_start":1,"column_end":22}},{"value":"repr(u8)","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":14700,"byte_end":14711,"line_start":378,"line_end":378,"column_start":1,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5811},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":15427,"byte_end":15438,"line_start":396,"line_end":396,"column_start":5,"column_end":16},"name":"Perspective","qualname":"::Interpolation::Perspective","value":"Interpolation::Perspective","parent":{"krate":0,"index":5810},"children":[],"decl_id":null,"docs":" The value will be interpolated in a perspective-correct fashion.\n Also known as \"smooth\" in glsl.\n","sig":null,"attributes":[{"value":"/ The value will be interpolated in a perspective-correct fashion.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":15314,"byte_end":15382,"line_start":394,"line_end":394,"column_start":5,"column_end":73}},{"value":"/ Also known as \"smooth\" in glsl.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":15387,"byte_end":15422,"line_start":395,"line_end":395,"column_start":5,"column_end":40}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5813},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":15584,"byte_end":15590,"line_start":400,"line_end":400,"column_start":5,"column_end":11},"name":"Linear","qualname":"::Interpolation::Linear","value":"Interpolation::Linear","parent":{"krate":0,"index":5810},"children":[],"decl_id":null,"docs":" Indicates that linear, non-perspective, correct\n interpolation must be used.\n Also known as \"no_perspective\" in glsl.\n","sig":null,"attributes":[{"value":"/ Indicates that linear, non-perspective, correct","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":15444,"byte_end":15495,"line_start":397,"line_end":397,"column_start":5,"column_end":56}},{"value":"/ interpolation must be used.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":15500,"byte_end":15531,"line_start":398,"line_end":398,"column_start":5,"column_end":36}},{"value":"/ Also known as \"no_perspective\" in glsl.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":15536,"byte_end":15579,"line_start":399,"line_end":399,"column_start":5,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5815},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":15655,"byte_end":15659,"line_start":402,"line_end":402,"column_start":5,"column_end":9},"name":"Flat","qualname":"::Interpolation::Flat","value":"Interpolation::Flat","parent":{"krate":0,"index":5810},"children":[],"decl_id":null,"docs":" Indicates that no interpolation will be performed.\n","sig":null,"attributes":[{"value":"/ Indicates that no interpolation will be performed.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":15596,"byte_end":15650,"line_start":401,"line_end":401,"column_start":5,"column_end":59}}]},{"kind":"Enum","id":{"krate":0,"index":5810},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":15294,"byte_end":15307,"line_start":393,"line_end":393,"column_start":10,"column_end":23},"name":"Interpolation","qualname":"::Interpolation","value":"pub enum Interpolation { Perspective, Linear, Flat, }","parent":null,"children":[{"krate":0,"index":5811},{"krate":0,"index":5813},{"krate":0,"index":5815}],"decl_id":null,"docs":" The interpolation qualifier of a binding or struct field.\n","sig":null,"attributes":[{"value":"/ The interpolation qualifier of a binding or struct field.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":15043,"byte_end":15104,"line_start":389,"line_end":389,"column_start":1,"column_end":62}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5836},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":15984,"byte_end":15990,"line_start":411,"line_end":411,"column_start":5,"column_end":11},"name":"Center","qualname":"::Sampling::Center","value":"Sampling::Center","parent":{"krate":0,"index":5835},"children":[],"decl_id":null,"docs":" Interpolate the value at the center of the pixel.\n","sig":null,"attributes":[{"value":"/ Interpolate the value at the center of the pixel.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":15926,"byte_end":15979,"line_start":410,"line_end":410,"column_start":5,"column_end":58}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5838},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":16208,"byte_end":16216,"line_start":416,"line_end":416,"column_start":5,"column_end":13},"name":"Centroid","qualname":"::Sampling::Centroid","value":"Sampling::Centroid","parent":{"krate":0,"index":5835},"children":[],"decl_id":null,"docs":" Interpolate the value at a point that lies within all samples covered by\n the fragment within the current primitive. In multisampling, use a\n single value for all samples in the primitive.\n","sig":null,"attributes":[{"value":"/ Interpolate the value at a point that lies within all samples covered by","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":15997,"byte_end":16073,"line_start":413,"line_end":413,"column_start":5,"column_end":81}},{"value":"/ the fragment within the current primitive. In multisampling, use a","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":16078,"byte_end":16148,"line_start":414,"line_end":414,"column_start":5,"column_end":75}},{"value":"/ single value for all samples in the primitive.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":16153,"byte_end":16203,"line_start":415,"line_end":415,"column_start":5,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5840},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":16348,"byte_end":16354,"line_start":420,"line_end":420,"column_start":5,"column_end":11},"name":"Sample","qualname":"::Sampling::Sample","value":"Sampling::Sample","parent":{"krate":0,"index":5835},"children":[],"decl_id":null,"docs":" Interpolate the value at each sample location. In multisampling, invoke\n the fragment shader once per sample.\n","sig":null,"attributes":[{"value":"/ Interpolate the value at each sample location. In multisampling, invoke","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":16223,"byte_end":16298,"line_start":418,"line_end":418,"column_start":5,"column_end":80}},{"value":"/ the fragment shader once per sample.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":16303,"byte_end":16343,"line_start":419,"line_end":419,"column_start":5,"column_end":45}}]},{"kind":"Enum","id":{"krate":0,"index":5835},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":15911,"byte_end":15919,"line_start":409,"line_end":409,"column_start":10,"column_end":18},"name":"Sampling","qualname":"::Sampling","value":"pub enum Sampling { Center, Centroid, Sample, }","parent":null,"children":[{"krate":0,"index":5836},{"krate":0,"index":5838},{"krate":0,"index":5840}],"decl_id":null,"docs":" The sampling qualifiers of a binding or struct field.\n","sig":null,"attributes":[{"value":"/ The sampling qualifiers of a binding or struct field.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":15664,"byte_end":15721,"line_start":405,"line_end":405,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":5860},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":16643,"byte_end":16655,"line_start":428,"line_end":428,"column_start":12,"column_end":24},"name":"StructMember","qualname":"::StructMember","value":"StructMember { name, ty, binding, offset }","parent":null,"children":[{"krate":0,"index":5861},{"krate":0,"index":5862},{"krate":0,"index":5863},{"krate":0,"index":5864}],"decl_id":null,"docs":" Member of a user-defined structure.\n","sig":null,"attributes":[{"value":"/ Member of a user-defined structure.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":16359,"byte_end":16398,"line_start":423,"line_end":423,"column_start":1,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":5861},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":16666,"byte_end":16670,"line_start":429,"line_end":429,"column_start":9,"column_end":13},"name":"name","qualname":"::StructMember::name","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":5860},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5862},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":16723,"byte_end":16725,"line_start":431,"line_end":431,"column_start":9,"column_end":11},"name":"ty","qualname":"::StructMember::ty","value":"arena::Handle<Type>","parent":{"krate":0,"index":5860},"children":[],"decl_id":null,"docs":" Type of the field.\n","sig":null,"attributes":[{"value":"/ Type of the field.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":16692,"byte_end":16714,"line_start":430,"line_end":430,"column_start":5,"column_end":27}}]},{"kind":"Field","id":{"krate":0,"index":5863},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":16795,"byte_end":16802,"line_start":433,"line_end":433,"column_start":9,"column_end":16},"name":"binding","qualname":"::StructMember::binding","value":"std::option::Option<Binding>","parent":{"krate":0,"index":5860},"children":[],"decl_id":null,"docs":" For I/O structs, defines the binding.\n","sig":null,"attributes":[{"value":"/ For I/O structs, defines the binding.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":16745,"byte_end":16786,"line_start":432,"line_end":432,"column_start":5,"column_end":46}}]},{"kind":"Field","id":{"krate":0,"index":5864},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":16880,"byte_end":16886,"line_start":435,"line_end":435,"column_start":9,"column_end":15},"name":"offset","qualname":"::StructMember::offset","value":"u32","parent":{"krate":0,"index":5860},"children":[],"decl_id":null,"docs":" Offset from the beginning from the struct.\n","sig":null,"attributes":[{"value":"/ Offset from the beginning from the struct.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":16825,"byte_end":16871,"line_start":434,"line_end":434,"column_start":5,"column_end":51}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5880},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":17166,"byte_end":17168,"line_start":444,"line_end":444,"column_start":5,"column_end":7},"name":"D1","qualname":"::ImageDimension::D1","value":"ImageDimension::D1","parent":{"krate":0,"index":5879},"children":[],"decl_id":null,"docs":" 1D image\n","sig":null,"attributes":[{"value":"/ 1D image","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":17149,"byte_end":17161,"line_start":443,"line_end":443,"column_start":5,"column_end":17}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5882},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":17191,"byte_end":17193,"line_start":446,"line_end":446,"column_start":5,"column_end":7},"name":"D2","qualname":"::ImageDimension::D2","value":"ImageDimension::D2","parent":{"krate":0,"index":5879},"children":[],"decl_id":null,"docs":" 2D image\n","sig":null,"attributes":[{"value":"/ 2D image","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":17174,"byte_end":17186,"line_start":445,"line_end":445,"column_start":5,"column_end":17}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5884},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":17216,"byte_end":17218,"line_start":448,"line_end":448,"column_start":5,"column_end":7},"name":"D3","qualname":"::ImageDimension::D3","value":"ImageDimension::D3","parent":{"krate":0,"index":5879},"children":[],"decl_id":null,"docs":" 3D image\n","sig":null,"attributes":[{"value":"/ 3D image","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":17199,"byte_end":17211,"line_start":447,"line_end":447,"column_start":5,"column_end":17}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5886},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":17241,"byte_end":17245,"line_start":450,"line_end":450,"column_start":5,"column_end":9},"name":"Cube","qualname":"::ImageDimension::Cube","value":"ImageDimension::Cube","parent":{"krate":0,"index":5879},"children":[],"decl_id":null,"docs":" Cube map\n","sig":null,"attributes":[{"value":"/ Cube map","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":17224,"byte_end":17236,"line_start":449,"line_end":449,"column_start":5,"column_end":17}}]},{"kind":"Enum","id":{"krate":0,"index":5879},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":17128,"byte_end":17142,"line_start":442,"line_end":442,"column_start":10,"column_end":24},"name":"ImageDimension","qualname":"::ImageDimension","value":"pub enum ImageDimension { D1, D2, D3, Cube, }","parent":null,"children":[{"krate":0,"index":5880},{"krate":0,"index":5882},{"krate":0,"index":5884},{"krate":0,"index":5886}],"decl_id":null,"docs":" The number of dimensions an image has.\n","sig":null,"attributes":[{"value":"/ The number of dimensions an image has.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":16896,"byte_end":16938,"line_start":438,"line_end":438,"column_start":1,"column_end":43}}]},{"kind":"Struct","id":{"krate":0,"index":5908},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":17465,"byte_end":17478,"line_start":458,"line_end":458,"column_start":16,"column_end":29},"name":"StorageAccess","qualname":"::StorageAccess","value":"StorageAccess {  }","parent":null,"children":[{"krate":0,"index":5909}],"decl_id":null,"docs":" Flags describing an image.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5942},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":17558,"byte_end":17562,"line_start":460,"line_end":460,"column_start":15,"column_end":19},"name":"LOAD","qualname":"::StorageAccess::LOAD","value":"Self","parent":{"krate":0,"index":5941},"children":[],"decl_id":null,"docs":" Storage can be used as a source for load ops.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5943},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":17643,"byte_end":17648,"line_start":462,"line_end":462,"column_start":15,"column_end":20},"name":"STORE","qualname":"::StorageAccess::STORE","value":"Self","parent":{"krate":0,"index":5941},"children":[],"decl_id":null,"docs":" Storage can be used as a target for store ops.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6001},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":17920,"byte_end":17927,"line_start":472,"line_end":472,"column_start":5,"column_end":12},"name":"R8Unorm","qualname":"::StorageFormat::R8Unorm","value":"StorageFormat::R8Unorm","parent":{"krate":0,"index":6000},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6003},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":17933,"byte_end":17940,"line_start":473,"line_end":473,"column_start":5,"column_end":12},"name":"R8Snorm","qualname":"::StorageFormat::R8Snorm","value":"StorageFormat::R8Snorm","parent":{"krate":0,"index":6000},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6005},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":17946,"byte_end":17952,"line_start":474,"line_end":474,"column_start":5,"column_end":11},"name":"R8Uint","qualname":"::StorageFormat::R8Uint","value":"StorageFormat::R8Uint","parent":{"krate":0,"index":6000},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6007},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":17958,"byte_end":17964,"line_start":475,"line_end":475,"column_start":5,"column_end":11},"name":"R8Sint","qualname":"::StorageFormat::R8Sint","value":"StorageFormat::R8Sint","parent":{"krate":0,"index":6000},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6009},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":17993,"byte_end":18000,"line_start":478,"line_end":478,"column_start":5,"column_end":12},"name":"R16Uint","qualname":"::StorageFormat::R16Uint","value":"StorageFormat::R16Uint","parent":{"krate":0,"index":6000},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6011},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":18006,"byte_end":18013,"line_start":479,"line_end":479,"column_start":5,"column_end":12},"name":"R16Sint","qualname":"::StorageFormat::R16Sint","value":"StorageFormat::R16Sint","parent":{"krate":0,"index":6000},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6013},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":18019,"byte_end":18027,"line_start":480,"line_end":480,"column_start":5,"column_end":13},"name":"R16Float","qualname":"::StorageFormat::R16Float","value":"StorageFormat::R16Float","parent":{"krate":0,"index":6000},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6015},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":18033,"byte_end":18041,"line_start":481,"line_end":481,"column_start":5,"column_end":13},"name":"Rg8Unorm","qualname":"::StorageFormat::Rg8Unorm","value":"StorageFormat::Rg8Unorm","parent":{"krate":0,"index":6000},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6017},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":18047,"byte_end":18055,"line_start":482,"line_end":482,"column_start":5,"column_end":13},"name":"Rg8Snorm","qualname":"::StorageFormat::Rg8Snorm","value":"StorageFormat::Rg8Snorm","parent":{"krate":0,"index":6000},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6019},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":18061,"byte_end":18068,"line_start":483,"line_end":483,"column_start":5,"column_end":12},"name":"Rg8Uint","qualname":"::StorageFormat::Rg8Uint","value":"StorageFormat::Rg8Uint","parent":{"krate":0,"index":6000},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6021},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":18074,"byte_end":18081,"line_start":484,"line_end":484,"column_start":5,"column_end":12},"name":"Rg8Sint","qualname":"::StorageFormat::Rg8Sint","value":"StorageFormat::Rg8Sint","parent":{"krate":0,"index":6000},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6023},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":18110,"byte_end":18117,"line_start":487,"line_end":487,"column_start":5,"column_end":12},"name":"R32Uint","qualname":"::StorageFormat::R32Uint","value":"StorageFormat::R32Uint","parent":{"krate":0,"index":6000},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6025},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":18123,"byte_end":18130,"line_start":488,"line_end":488,"column_start":5,"column_end":12},"name":"R32Sint","qualname":"::StorageFormat::R32Sint","value":"StorageFormat::R32Sint","parent":{"krate":0,"index":6000},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6027},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":18136,"byte_end":18144,"line_start":489,"line_end":489,"column_start":5,"column_end":13},"name":"R32Float","qualname":"::StorageFormat::R32Float","value":"StorageFormat::R32Float","parent":{"krate":0,"index":6000},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6029},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":18150,"byte_end":18158,"line_start":490,"line_end":490,"column_start":5,"column_end":13},"name":"Rg16Uint","qualname":"::StorageFormat::Rg16Uint","value":"StorageFormat::Rg16Uint","parent":{"krate":0,"index":6000},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6031},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":18164,"byte_end":18172,"line_start":491,"line_end":491,"column_start":5,"column_end":13},"name":"Rg16Sint","qualname":"::StorageFormat::Rg16Sint","value":"StorageFormat::Rg16Sint","parent":{"krate":0,"index":6000},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6033},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":18178,"byte_end":18187,"line_start":492,"line_end":492,"column_start":5,"column_end":14},"name":"Rg16Float","qualname":"::StorageFormat::Rg16Float","value":"StorageFormat::Rg16Float","parent":{"krate":0,"index":6000},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6035},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":18193,"byte_end":18203,"line_start":493,"line_end":493,"column_start":5,"column_end":15},"name":"Rgba8Unorm","qualname":"::StorageFormat::Rgba8Unorm","value":"StorageFormat::Rgba8Unorm","parent":{"krate":0,"index":6000},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6037},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":18209,"byte_end":18219,"line_start":494,"line_end":494,"column_start":5,"column_end":15},"name":"Rgba8Snorm","qualname":"::StorageFormat::Rgba8Snorm","value":"StorageFormat::Rgba8Snorm","parent":{"krate":0,"index":6000},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6039},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":18225,"byte_end":18234,"line_start":495,"line_end":495,"column_start":5,"column_end":14},"name":"Rgba8Uint","qualname":"::StorageFormat::Rgba8Uint","value":"StorageFormat::Rgba8Uint","parent":{"krate":0,"index":6000},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6041},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":18240,"byte_end":18249,"line_start":496,"line_end":496,"column_start":5,"column_end":14},"name":"Rgba8Sint","qualname":"::StorageFormat::Rgba8Sint","value":"StorageFormat::Rgba8Sint","parent":{"krate":0,"index":6000},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6043},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":18285,"byte_end":18297,"line_start":499,"line_end":499,"column_start":5,"column_end":17},"name":"Rgb10a2Unorm","qualname":"::StorageFormat::Rgb10a2Unorm","value":"StorageFormat::Rgb10a2Unorm","parent":{"krate":0,"index":6000},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6045},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":18303,"byte_end":18315,"line_start":500,"line_end":500,"column_start":5,"column_end":17},"name":"Rg11b10Float","qualname":"::StorageFormat::Rg11b10Float","value":"StorageFormat::Rg11b10Float","parent":{"krate":0,"index":6000},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6047},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":18344,"byte_end":18352,"line_start":503,"line_end":503,"column_start":5,"column_end":13},"name":"Rg32Uint","qualname":"::StorageFormat::Rg32Uint","value":"StorageFormat::Rg32Uint","parent":{"krate":0,"index":6000},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6049},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":18358,"byte_end":18366,"line_start":504,"line_end":504,"column_start":5,"column_end":13},"name":"Rg32Sint","qualname":"::StorageFormat::Rg32Sint","value":"StorageFormat::Rg32Sint","parent":{"krate":0,"index":6000},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6051},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":18372,"byte_end":18381,"line_start":505,"line_end":505,"column_start":5,"column_end":14},"name":"Rg32Float","qualname":"::StorageFormat::Rg32Float","value":"StorageFormat::Rg32Float","parent":{"krate":0,"index":6000},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6053},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":18387,"byte_end":18397,"line_start":506,"line_end":506,"column_start":5,"column_end":15},"name":"Rgba16Uint","qualname":"::StorageFormat::Rgba16Uint","value":"StorageFormat::Rgba16Uint","parent":{"krate":0,"index":6000},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6055},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":18403,"byte_end":18413,"line_start":507,"line_end":507,"column_start":5,"column_end":15},"name":"Rgba16Sint","qualname":"::StorageFormat::Rgba16Sint","value":"StorageFormat::Rgba16Sint","parent":{"krate":0,"index":6000},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6057},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":18419,"byte_end":18430,"line_start":508,"line_end":508,"column_start":5,"column_end":16},"name":"Rgba16Float","qualname":"::StorageFormat::Rgba16Float","value":"StorageFormat::Rgba16Float","parent":{"krate":0,"index":6000},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6059},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":18460,"byte_end":18470,"line_start":511,"line_end":511,"column_start":5,"column_end":15},"name":"Rgba32Uint","qualname":"::StorageFormat::Rgba32Uint","value":"StorageFormat::Rgba32Uint","parent":{"krate":0,"index":6000},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6061},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":18476,"byte_end":18486,"line_start":512,"line_end":512,"column_start":5,"column_end":15},"name":"Rgba32Sint","qualname":"::StorageFormat::Rgba32Sint","value":"StorageFormat::Rgba32Sint","parent":{"krate":0,"index":6000},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6063},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":18492,"byte_end":18503,"line_start":513,"line_end":513,"column_start":5,"column_end":16},"name":"Rgba32Float","qualname":"::StorageFormat::Rgba32Float","value":"StorageFormat::Rgba32Float","parent":{"krate":0,"index":6000},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":6000},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":17879,"byte_end":17892,"line_start":470,"line_end":470,"column_start":10,"column_end":23},"name":"StorageFormat","qualname":"::StorageFormat","value":"pub enum StorageFormat {\n    R8Unorm,\n    R8Snorm,\n    R8Uint,\n    R8Sint,\n    R16Uint,\n    R16Sint,\n    R16Float,\n    Rg8Unorm,\n    Rg8Snorm,\n    Rg8Uint,\n    Rg8Sint,\n    R32Uint,\n    R32Sint,\n    R32Float,\n    Rg16Uint,\n    Rg16Sint,\n    Rg16Float,\n    Rgba8Unorm,\n    Rgba8Snorm,\n    Rgba8Uint,\n    Rgba8Sint,\n    Rgb10a2Unorm,\n    Rg11b10Float,\n    Rg32Uint,\n    Rg32Sint,\n    Rg32Float,\n    Rgba16Uint,\n    Rgba16Sint,\n    Rgba16Float,\n    Rgba32Uint,\n    Rgba32Sint,\n    Rgba32Float,\n}","parent":null,"children":[{"krate":0,"index":6001},{"krate":0,"index":6003},{"krate":0,"index":6005},{"krate":0,"index":6007},{"krate":0,"index":6009},{"krate":0,"index":6011},{"krate":0,"index":6013},{"krate":0,"index":6015},{"krate":0,"index":6017},{"krate":0,"index":6019},{"krate":0,"index":6021},{"krate":0,"index":6023},{"krate":0,"index":6025},{"krate":0,"index":6027},{"krate":0,"index":6029},{"krate":0,"index":6031},{"krate":0,"index":6033},{"krate":0,"index":6035},{"krate":0,"index":6037},{"krate":0,"index":6039},{"krate":0,"index":6041},{"krate":0,"index":6043},{"krate":0,"index":6045},{"krate":0,"index":6047},{"krate":0,"index":6049},{"krate":0,"index":6051},{"krate":0,"index":6053},{"krate":0,"index":6055},{"krate":0,"index":6057},{"krate":0,"index":6059},{"krate":0,"index":6061},{"krate":0,"index":6063}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":6084},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":18778,"byte_end":18785,"line_start":522,"line_end":522,"column_start":5,"column_end":12},"name":"Sampled","qualname":"::ImageClass::Sampled","value":"ImageClass::Sampled { kind, multi }","parent":{"krate":0,"index":6083},"children":[],"decl_id":null,"docs":" Regular sampled image.\n","sig":null,"attributes":[{"value":"/ Regular sampled image.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":18747,"byte_end":18773,"line_start":521,"line_end":521,"column_start":5,"column_end":31}}]},{"kind":"StructVariant","id":{"krate":0,"index":6087},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":19082,"byte_end":19087,"line_start":532,"line_end":532,"column_start":5,"column_end":10},"name":"Depth","qualname":"::ImageClass::Depth","value":"ImageClass::Depth { multi }","parent":{"krate":0,"index":6083},"children":[],"decl_id":null,"docs":" Depth comparison image.\n","sig":null,"attributes":[{"value":"/ Depth comparison image.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":19050,"byte_end":19077,"line_start":531,"line_end":531,"column_start":5,"column_end":32}}]},{"kind":"StructVariant","id":{"krate":0,"index":6089},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":19184,"byte_end":19191,"line_start":537,"line_end":537,"column_start":5,"column_end":12},"name":"Storage","qualname":"::ImageClass::Storage","value":"ImageClass::Storage { format, access }","parent":{"krate":0,"index":6083},"children":[],"decl_id":null,"docs":" Storage image.\n","sig":null,"attributes":[{"value":"/ Storage image.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":19161,"byte_end":19179,"line_start":536,"line_end":536,"column_start":5,"column_end":23}}]},{"kind":"Enum","id":{"krate":0,"index":6083},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":18730,"byte_end":18740,"line_start":520,"line_end":520,"column_start":10,"column_end":20},"name":"ImageClass","qualname":"::ImageClass","value":"pub enum ImageClass {\n    Sampled {\n        kind: ScalarKind,\n        multi: bool,\n    },\n    Depth {\n        multi: bool,\n    },\n    Storage {\n        format: StorageFormat,\n        access: StorageAccess,\n    },\n}","parent":null,"children":[{"krate":0,"index":6084},{"krate":0,"index":6087},{"krate":0,"index":6089}],"decl_id":null,"docs":" Sub-class of the image type.\n","sig":null,"attributes":[{"value":"/ Sub-class of the image type.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":18508,"byte_end":18540,"line_start":516,"line_end":516,"column_start":1,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":6111},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":19467,"byte_end":19471,"line_start":547,"line_end":547,"column_start":12,"column_end":16},"name":"Type","qualname":"::Type","value":"Type { name, inner }","parent":null,"children":[{"krate":0,"index":6112},{"krate":0,"index":6113}],"decl_id":null,"docs":" A data type declared in the module.\n","sig":null,"attributes":[{"value":"/ A data type declared in the module.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":19266,"byte_end":19305,"line_start":543,"line_end":543,"column_start":1,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":6112},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":19520,"byte_end":19524,"line_start":549,"line_end":549,"column_start":9,"column_end":13},"name":"name","qualname":"::Type::name","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":6111},"children":[],"decl_id":null,"docs":" The name of the type, if any.\n","sig":null,"attributes":[{"value":"/ The name of the type, if any.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":19478,"byte_end":19511,"line_start":548,"line_end":548,"column_start":5,"column_end":38}}]},{"kind":"Field","id":{"krate":0,"index":6113},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":19612,"byte_end":19617,"line_start":551,"line_end":551,"column_start":9,"column_end":14},"name":"inner","qualname":"::Type::inner","value":"TypeInner","parent":{"krate":0,"index":6111},"children":[],"decl_id":null,"docs":" Inner structure that depends on the kind of the type.\n","sig":null,"attributes":[{"value":"/ Inner structure that depends on the kind of the type.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":19546,"byte_end":19603,"line_start":550,"line_end":550,"column_start":5,"column_end":62}}]},{"kind":"StructVariant","id":{"krate":0,"index":6127},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":19928,"byte_end":19934,"line_start":560,"line_end":560,"column_start":5,"column_end":11},"name":"Scalar","qualname":"::TypeInner::Scalar","value":"TypeInner::Scalar { kind, width }","parent":{"krate":0,"index":6126},"children":[],"decl_id":null,"docs":" Number of integral or floating-point kind.\n","sig":null,"attributes":[{"value":"/ Number of integral or floating-point kind.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":19877,"byte_end":19923,"line_start":559,"line_end":559,"column_start":5,"column_end":51}}]},{"kind":"StructVariant","id":{"krate":0,"index":6130},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":20002,"byte_end":20008,"line_start":562,"line_end":562,"column_start":5,"column_end":11},"name":"Vector","qualname":"::TypeInner::Vector","value":"TypeInner::Vector { size, kind, width }","parent":{"krate":0,"index":6126},"children":[],"decl_id":null,"docs":" Vector of numbers.\n","sig":null,"attributes":[{"value":"/ Vector of numbers.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":19975,"byte_end":19997,"line_start":561,"line_end":561,"column_start":5,"column_end":27}}]},{"kind":"StructVariant","id":{"krate":0,"index":6134},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":20122,"byte_end":20128,"line_start":568,"line_end":568,"column_start":5,"column_end":11},"name":"Matrix","qualname":"::TypeInner::Matrix","value":"TypeInner::Matrix { columns, rows, width }","parent":{"krate":0,"index":6126},"children":[],"decl_id":null,"docs":" Matrix of floats.\n","sig":null,"attributes":[{"value":"/ Matrix of floats.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":20096,"byte_end":20117,"line_start":567,"line_end":567,"column_start":5,"column_end":26}}]},{"kind":"StructVariant","id":{"krate":0,"index":6138},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":20242,"byte_end":20248,"line_start":574,"line_end":574,"column_start":5,"column_end":11},"name":"Atomic","qualname":"::TypeInner::Atomic","value":"TypeInner::Atomic { kind, width }","parent":{"krate":0,"index":6126},"children":[],"decl_id":null,"docs":" Atomic scalar.\n","sig":null,"attributes":[{"value":"/ Atomic scalar.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":20219,"byte_end":20237,"line_start":573,"line_end":573,"column_start":5,"column_end":23}}]},{"kind":"StructVariant","id":{"krate":0,"index":6141},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":21555,"byte_end":21562,"line_start":601,"line_end":601,"column_start":5,"column_end":12},"name":"Pointer","qualname":"::TypeInner::Pointer","value":"TypeInner::Pointer { base, class }","parent":{"krate":0,"index":6126},"children":[],"decl_id":null,"docs":" Pointer to another type.","sig":null,"attributes":[{"value":"/ Pointer to another type.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":20289,"byte_end":20317,"line_start":575,"line_end":575,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":20322,"byte_end":20325,"line_start":576,"line_end":576,"column_start":5,"column_end":8}},{"value":"/ Pointers to scalars and vectors should be treated as equivalent to","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":20330,"byte_end":20400,"line_start":577,"line_end":577,"column_start":5,"column_end":75}},{"value":"/ [`ValuePointer`] types. Use the [`TypeInner::equivalent`] method to","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":20405,"byte_end":20476,"line_start":578,"line_end":578,"column_start":5,"column_end":76}},{"value":"/ compare types in a way that treats pointers correctly.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":20481,"byte_end":20539,"line_start":579,"line_end":579,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":20544,"byte_end":20547,"line_start":580,"line_end":580,"column_start":5,"column_end":8}},{"value":"/ ## Pointers to non-`SIZED` types","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":20552,"byte_end":20588,"line_start":581,"line_end":581,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":20593,"byte_end":20596,"line_start":582,"line_end":582,"column_start":5,"column_end":8}},{"value":"/ The `base` type of a pointer may be a non-[`SIZED`] type like a","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":20601,"byte_end":20668,"line_start":583,"line_end":583,"column_start":5,"column_end":72}},{"value":"/ dynamically-sized [`Array`], or a [`Struct`] whose last member is a","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":20673,"byte_end":20744,"line_start":584,"line_end":584,"column_start":5,"column_end":76}},{"value":"/ dynamically sized array. Such pointers occur as the types of","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":20749,"byte_end":20813,"line_start":585,"line_end":585,"column_start":5,"column_end":69}},{"value":"/ [`GlobalVariable`] or [`AccessIndex`] expressions referring to","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":20818,"byte_end":20884,"line_start":586,"line_end":586,"column_start":5,"column_end":71}},{"value":"/ dynamically-sized arrays.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":20889,"byte_end":20918,"line_start":587,"line_end":587,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":20923,"byte_end":20926,"line_start":588,"line_end":588,"column_start":5,"column_end":8}},{"value":"/ However, among pointers to non-`SIZED` types, only pointers to `Struct`s","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":20931,"byte_end":21007,"line_start":589,"line_end":589,"column_start":5,"column_end":81}},{"value":"/ are [`DATA`]. Pointers to dynamically sized `Array`s cannot be passed as","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":21012,"byte_end":21088,"line_start":590,"line_end":590,"column_start":5,"column_end":81}},{"value":"/ arguments, stored in variables, or held in arrays or structures. Their","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":21093,"byte_end":21167,"line_start":591,"line_end":591,"column_start":5,"column_end":79}},{"value":"/ only use is as the types of `AccessIndex` expressions.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":21172,"byte_end":21230,"line_start":592,"line_end":592,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":21235,"byte_end":21238,"line_start":593,"line_end":593,"column_start":5,"column_end":8}},{"value":"/ [`SIZED`]: valid::TypeFlags::SIZED","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":21243,"byte_end":21281,"line_start":594,"line_end":594,"column_start":5,"column_end":43}},{"value":"/ [`DATA`]: valid::TypeFlags::DATA","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":21286,"byte_end":21322,"line_start":595,"line_end":595,"column_start":5,"column_end":41}},{"value":"/ [`Array`]: TypeInner::Array","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":21327,"byte_end":21358,"line_start":596,"line_end":596,"column_start":5,"column_end":36}},{"value":"/ [`Struct`]: TypeInner::Struct","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":21363,"byte_end":21396,"line_start":597,"line_end":597,"column_start":5,"column_end":38}},{"value":"/ [`ValuePointer`]: TypeInner::ValuePointer","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":21401,"byte_end":21446,"line_start":598,"line_end":598,"column_start":5,"column_end":50}},{"value":"/ [`GlobalVariable`]: Expression::GlobalVariable","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":21451,"byte_end":21501,"line_start":599,"line_end":599,"column_start":5,"column_end":55}},{"value":"/ [`AccessIndex`]: Expression::AccessIndex","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":21506,"byte_end":21550,"line_start":600,"line_end":600,"column_start":5,"column_end":49}}]},{"kind":"StructVariant","id":{"krate":0,"index":6144},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":22228,"byte_end":22240,"line_start":618,"line_end":618,"column_start":5,"column_end":17},"name":"ValuePointer","qualname":"::TypeInner::ValuePointer","value":"TypeInner::ValuePointer { size, kind, width, class }","parent":{"krate":0,"index":6126},"children":[],"decl_id":null,"docs":" Pointer to a scalar or vector.","sig":null,"attributes":[{"value":"/ Pointer to a scalar or vector.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":21634,"byte_end":21668,"line_start":606,"line_end":606,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":21673,"byte_end":21676,"line_start":607,"line_end":607,"column_start":5,"column_end":8}},{"value":"/ A `ValuePointer` type is equivalent to a `Pointer` whose `base` is a","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":21681,"byte_end":21753,"line_start":608,"line_end":608,"column_start":5,"column_end":77}},{"value":"/ `Scalar` or `Vector` type. This is for use in [`TypeResolution::Value`]","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":21758,"byte_end":21833,"line_start":609,"line_end":609,"column_start":5,"column_end":80}},{"value":"/ variants; see the documentation for [`TypeResolution`] for details.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":21838,"byte_end":21909,"line_start":610,"line_end":610,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":21914,"byte_end":21917,"line_start":611,"line_end":611,"column_start":5,"column_end":8}},{"value":"/ Use the [`TypeInner::equivalent`] method to compare types that could be","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":21922,"byte_end":21997,"line_start":612,"line_end":612,"column_start":5,"column_end":80}},{"value":"/ pointers, to ensure that `Pointer` and `ValuePointer` types are","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":22002,"byte_end":22069,"line_start":613,"line_end":613,"column_start":5,"column_end":72}},{"value":"/ recognized as equivalent.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":22074,"byte_end":22103,"line_start":614,"line_end":614,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":22108,"byte_end":22111,"line_start":615,"line_end":615,"column_start":5,"column_end":8}},{"value":"/ [`TypeResolution`]: proc::TypeResolution","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":22116,"byte_end":22160,"line_start":616,"line_end":616,"column_start":5,"column_end":49}},{"value":"/ [`TypeResolution::Value`]: proc::TypeResolution::Value","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":22165,"byte_end":22223,"line_start":617,"line_end":617,"column_start":5,"column_end":63}}]},{"kind":"StructVariant","id":{"krate":0,"index":6149},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":23501,"byte_end":23506,"line_start":650,"line_end":650,"column_start":5,"column_end":10},"name":"Array","qualname":"::TypeInner::Array","value":"TypeInner::Array { base, size, stride }","parent":{"krate":0,"index":6126},"children":[],"decl_id":null,"docs":" Homogenous list of elements.","sig":null,"attributes":[{"value":"/ Homogenous list of elements.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":22366,"byte_end":22398,"line_start":625,"line_end":625,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":22403,"byte_end":22406,"line_start":626,"line_end":626,"column_start":5,"column_end":8}},{"value":"/ The `base` type must be a [`SIZED`], [`DATA`] type.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":22411,"byte_end":22466,"line_start":627,"line_end":627,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":22471,"byte_end":22474,"line_start":628,"line_end":628,"column_start":5,"column_end":8}},{"value":"/ ## Dynamically sized arrays","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":22479,"byte_end":22510,"line_start":629,"line_end":629,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":22515,"byte_end":22518,"line_start":630,"line_end":630,"column_start":5,"column_end":8}},{"value":"/ An `Array` is [`SIZED`] unless its `size` is [`Dynamic`].","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":22523,"byte_end":22584,"line_start":631,"line_end":631,"column_start":5,"column_end":66}},{"value":"/ Dynamically-sized arrays may only appear in a few situations:","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":22589,"byte_end":22654,"line_start":632,"line_end":632,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":22659,"byte_end":22662,"line_start":633,"line_end":633,"column_start":5,"column_end":8}},{"value":"/ -   They may appear as the last member of a [`Struct`] whose `top_level`","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":22667,"byte_end":22743,"line_start":634,"line_end":634,"column_start":5,"column_end":81}},{"value":"/     flag is set.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":22748,"byte_end":22768,"line_start":635,"line_end":635,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":22773,"byte_end":22776,"line_start":636,"line_end":636,"column_start":5,"column_end":8}},{"value":"/ -   They may appear as the base type of a [`Pointer`]. An","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":22781,"byte_end":22842,"line_start":637,"line_end":637,"column_start":5,"column_end":66}},{"value":"/     [`AccessIndex`] expression referring to a top-level struct's final","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":22847,"byte_end":22921,"line_start":638,"line_end":638,"column_start":5,"column_end":79}},{"value":"/     unsized array member would have such a pointer type. However, such","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":22926,"byte_end":23000,"line_start":639,"line_end":639,"column_start":5,"column_end":79}},{"value":"/     pointer types may only appear as the types of such intermediate","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":23005,"byte_end":23076,"line_start":640,"line_end":640,"column_start":5,"column_end":76}},{"value":"/     expressions. They are not [`DATA`], and cannot be stored in","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":23081,"byte_end":23148,"line_start":641,"line_end":641,"column_start":5,"column_end":72}},{"value":"/     variables, held in arrays or structs, or passed as parameters.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":23153,"byte_end":23223,"line_start":642,"line_end":642,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":23228,"byte_end":23231,"line_start":643,"line_end":643,"column_start":5,"column_end":8}},{"value":"/ [`SIZED`]: crate::valid::TypeFlags::SIZED","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":23236,"byte_end":23281,"line_start":644,"line_end":644,"column_start":5,"column_end":50}},{"value":"/ [`DATA`]: crate::valid::TypeFlags::DATA","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":23286,"byte_end":23329,"line_start":645,"line_end":645,"column_start":5,"column_end":48}},{"value":"/ [`Dynamic`]: ArraySize::Dynamic","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":23334,"byte_end":23369,"line_start":646,"line_end":646,"column_start":5,"column_end":40}},{"value":"/ [`Struct`]: TypeInner::Struct","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":23374,"byte_end":23407,"line_start":647,"line_end":647,"column_start":5,"column_end":38}},{"value":"/ [`Pointer`]: TypeInner::Pointer","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":23412,"byte_end":23447,"line_start":648,"line_end":648,"column_start":5,"column_end":40}},{"value":"/ [`AccessIndex`]: Expression::AccessIndex","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":23452,"byte_end":23496,"line_start":649,"line_end":649,"column_start":5,"column_end":49}}]},{"kind":"StructVariant","id":{"krate":0,"index":6153},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":24385,"byte_end":24391,"line_start":673,"line_end":673,"column_start":5,"column_end":11},"name":"Struct","qualname":"::TypeInner::Struct","value":"TypeInner::Struct { top_level, members, span }","parent":{"krate":0,"index":6126},"children":[],"decl_id":null,"docs":" User-defined structure.","sig":null,"attributes":[{"value":"/ User-defined structure.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":23595,"byte_end":23622,"line_start":656,"line_end":656,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":23627,"byte_end":23630,"line_start":657,"line_end":657,"column_start":5,"column_end":8}},{"value":"/ A `Struct` type is [`DATA`], and the types of its members must be","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":23635,"byte_end":23704,"line_start":658,"line_end":658,"column_start":5,"column_end":74}},{"value":"/ `DATA` as well.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":23709,"byte_end":23728,"line_start":659,"line_end":659,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":23733,"byte_end":23736,"line_start":660,"line_end":660,"column_start":5,"column_end":8}},{"value":"/ Member types must be [`SIZED`], except for the final member of a","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":23741,"byte_end":23809,"line_start":661,"line_end":661,"column_start":5,"column_end":73}},{"value":"/ top-level struct, which may be a dynamically sized [`Array`]. The","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":23814,"byte_end":23883,"line_start":662,"line_end":662,"column_start":5,"column_end":74}},{"value":"/ `Struct` type itself is `SIZED` when all its members are `SIZED`.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":23888,"byte_end":23957,"line_start":663,"line_end":663,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":23962,"byte_end":23965,"line_start":664,"line_end":664,"column_start":5,"column_end":8}},{"value":"/ When `top_level` is true, this `Struct` represents the contents of a","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":23970,"byte_end":24042,"line_start":665,"line_end":665,"column_start":5,"column_end":77}},{"value":"/ buffer resource occupying a single binding slot in a shader's resource","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":24047,"byte_end":24121,"line_start":666,"line_end":666,"column_start":5,"column_end":79}},{"value":"/ interface. Top-level `Struct`s may not be used as members of any other","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":24126,"byte_end":24200,"line_start":667,"line_end":667,"column_start":5,"column_end":79}},{"value":"/ struct, or as array elements.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":24205,"byte_end":24238,"line_start":668,"line_end":668,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":24243,"byte_end":24246,"line_start":669,"line_end":669,"column_start":5,"column_end":8}},{"value":"/ [`DATA`]: crate::valid::TypeFlags::DATA","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":24251,"byte_end":24294,"line_start":670,"line_end":670,"column_start":5,"column_end":48}},{"value":"/ [`SIZED`]: crate::valid::TypeFlags::SIZED","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":24299,"byte_end":24344,"line_start":671,"line_end":671,"column_start":5,"column_end":50}},{"value":"/ [`Array`]: TypeInner::Array","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":24349,"byte_end":24380,"line_start":672,"line_end":672,"column_start":5,"column_end":36}}]},{"kind":"StructVariant","id":{"krate":0,"index":6157},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":24673,"byte_end":24678,"line_start":681,"line_end":681,"column_start":5,"column_end":10},"name":"Image","qualname":"::TypeInner::Image","value":"TypeInner::Image { dim, arrayed, class }","parent":{"krate":0,"index":6126},"children":[],"decl_id":null,"docs":" Possibly multidimensional array of texels.\n","sig":null,"attributes":[{"value":"/ Possibly multidimensional array of texels.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":24622,"byte_end":24668,"line_start":680,"line_end":680,"column_start":5,"column_end":51}}]},{"kind":"StructVariant","id":{"krate":0,"index":6161},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":24878,"byte_end":24885,"line_start":688,"line_end":688,"column_start":5,"column_end":12},"name":"Sampler","qualname":"::TypeInner::Sampler","value":"TypeInner::Sampler { comparison }","parent":{"krate":0,"index":6126},"children":[],"decl_id":null,"docs":" Can be used to sample values from images.\n","sig":null,"attributes":[{"value":"/ Can be used to sample values from images.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":24828,"byte_end":24873,"line_start":687,"line_end":687,"column_start":5,"column_end":50}}]},{"kind":"Enum","id":{"krate":0,"index":6126},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":19861,"byte_end":19870,"line_start":558,"line_end":558,"column_start":10,"column_end":19},"name":"TypeInner","qualname":"::TypeInner","value":"pub enum TypeInner {\n    Scalar {\n        kind: ScalarKind,\n        width: Bytes,\n    },\n    Vector {\n        size: VectorSize,\n        kind: ScalarKind,\n        width: Bytes,\n    },\n    Matrix {\n        columns: VectorSize,\n        rows: VectorSize,\n        width: Bytes,\n    },\n    Atomic {\n        kind: ScalarKind,\n        width: Bytes,\n    },\n    Pointer {\n        base: Handle<Type>,\n        class: StorageClass,\n    },\n    ValuePointer {\n        size: Option<VectorSize>,\n        kind: ScalarKind,\n        width: Bytes,\n        class: StorageClass,\n    },\n    Array {\n        base: Handle<Type>,\n        size: ArraySize,\n        stride: u32,\n    },\n    Struct {\n        top_level: bool,\n        members: Vec<StructMember>,\n        span: u32,\n    },\n    Image {\n        dim: ImageDimension,\n        arrayed: bool,\n        class: ImageClass,\n    },\n    Sampler {\n        comparison: bool,\n    },\n}","parent":null,"children":[{"krate":0,"index":6127},{"krate":0,"index":6130},{"krate":0,"index":6134},{"krate":0,"index":6138},{"krate":0,"index":6141},{"krate":0,"index":6144},{"krate":0,"index":6149},{"krate":0,"index":6153},{"krate":0,"index":6157},{"krate":0,"index":6161}],"decl_id":null,"docs":" Enum with additional information, depending on the kind of type.\n","sig":null,"attributes":[{"value":"/ Enum with additional information, depending on the kind of type.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":19633,"byte_end":19701,"line_start":554,"line_end":554,"column_start":1,"column_end":69}}]},{"kind":"Struct","id":{"krate":0,"index":6175},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":25082,"byte_end":25090,"line_start":695,"line_end":695,"column_start":12,"column_end":20},"name":"Constant","qualname":"::Constant","value":"Constant { name, specialization, inner }","parent":null,"children":[{"krate":0,"index":6176},{"krate":0,"index":6177},{"krate":0,"index":6178}],"decl_id":null,"docs":" Constant value.\n","sig":null,"attributes":[{"value":"/ Constant value.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":24911,"byte_end":24930,"line_start":691,"line_end":691,"column_start":1,"column_end":20}}]},{"kind":"Field","id":{"krate":0,"index":6176},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":25101,"byte_end":25105,"line_start":696,"line_end":696,"column_start":9,"column_end":13},"name":"name","qualname":"::Constant::name","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":6175},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6177},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":25131,"byte_end":25145,"line_start":697,"line_end":697,"column_start":9,"column_end":23},"name":"specialization","qualname":"::Constant::specialization","value":"std::option::Option<u32>","parent":{"krate":0,"index":6175},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6178},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":25168,"byte_end":25173,"line_start":698,"line_end":698,"column_start":9,"column_end":14},"name":"inner","qualname":"::Constant::inner","value":"ConstantInner","parent":{"krate":0,"index":6175},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6186},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":25421,"byte_end":25425,"line_start":706,"line_end":706,"column_start":5,"column_end":9},"name":"Sint","qualname":"::ScalarValue::Sint","value":"ScalarValue::Sint(i64)","parent":{"krate":0,"index":6185},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6189},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":25436,"byte_end":25440,"line_start":707,"line_end":707,"column_start":5,"column_end":9},"name":"Uint","qualname":"::ScalarValue::Uint","value":"ScalarValue::Uint(u64)","parent":{"krate":0,"index":6185},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6192},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":25451,"byte_end":25456,"line_start":708,"line_end":708,"column_start":5,"column_end":10},"name":"Float","qualname":"::ScalarValue::Float","value":"ScalarValue::Float(f64)","parent":{"krate":0,"index":6185},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6195},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":25467,"byte_end":25471,"line_start":709,"line_end":709,"column_start":5,"column_end":9},"name":"Bool","qualname":"::ScalarValue::Bool","value":"ScalarValue::Bool(bool)","parent":{"krate":0,"index":6185},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":6185},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":25403,"byte_end":25414,"line_start":705,"line_end":705,"column_start":10,"column_end":21},"name":"ScalarValue","qualname":"::ScalarValue","value":"pub enum ScalarValue { Sint(i64), Uint(u64), Float(f64), Bool(bool), }","parent":null,"children":[{"krate":0,"index":6186},{"krate":0,"index":6189},{"krate":0,"index":6192},{"krate":0,"index":6195}],"decl_id":null,"docs":" A literal scalar value, used in constants.\n","sig":null,"attributes":[{"value":"/ A literal scalar value, used in constants.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":25193,"byte_end":25239,"line_start":701,"line_end":701,"column_start":1,"column_end":47}}]},{"kind":"StructVariant","id":{"krate":0,"index":6206},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":25721,"byte_end":25727,"line_start":717,"line_end":717,"column_start":5,"column_end":11},"name":"Scalar","qualname":"::ConstantInner::Scalar","value":"ConstantInner::Scalar { width, value }","parent":{"krate":0,"index":6205},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":6209},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":25791,"byte_end":25800,"line_start":721,"line_end":721,"column_start":5,"column_end":14},"name":"Composite","qualname":"::ConstantInner::Composite","value":"ConstantInner::Composite { ty, components }","parent":{"krate":0,"index":6205},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":6205},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":25701,"byte_end":25714,"line_start":716,"line_end":716,"column_start":10,"column_end":23},"name":"ConstantInner","qualname":"::ConstantInner","value":"pub enum ConstantInner {\n    Scalar {\n        width: Bytes,\n        value: ScalarValue,\n    },\n    Composite {\n        ty: Handle<Type>,\n        components: Vec<Handle<Constant>>,\n    },\n}","parent":null,"children":[{"krate":0,"index":6206},{"krate":0,"index":6209}],"decl_id":null,"docs":" Additional information, dependent on the kind of constant.\n","sig":null,"attributes":[{"value":"/ Additional information, dependent on the kind of constant.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":25482,"byte_end":25544,"line_start":712,"line_end":712,"column_start":1,"column_end":63}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6221},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":26155,"byte_end":26162,"line_start":733,"line_end":733,"column_start":5,"column_end":12},"name":"BuiltIn","qualname":"::Binding::BuiltIn","value":"Binding::BuiltIn(BuiltIn)","parent":{"krate":0,"index":6220},"children":[],"decl_id":null,"docs":" Built-in shader variable.\n","sig":null,"attributes":[{"value":"/ Built-in shader variable.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":26121,"byte_end":26150,"line_start":732,"line_end":732,"column_start":5,"column_end":34}}]},{"kind":"StructVariant","id":{"krate":0,"index":6224},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":26951,"byte_end":26959,"line_start":751,"line_end":751,"column_start":5,"column_end":13},"name":"Location","qualname":"::Binding::Location","value":"Binding::Location { location, interpolation, sampling }","parent":{"krate":0,"index":6220},"children":[],"decl_id":null,"docs":" Indexed location.","sig":null,"attributes":[{"value":"/ Indexed location.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":26178,"byte_end":26199,"line_start":735,"line_end":735,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":26204,"byte_end":26207,"line_start":736,"line_end":736,"column_start":5,"column_end":8}},{"value":"/ Values passed from the [`Vertex`] stage to the [`Fragment`] stage must","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":26212,"byte_end":26286,"line_start":737,"line_end":737,"column_start":5,"column_end":79}},{"value":"/ have their `interpolation` defaulted (i.e. not `None`) by the front end","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":26291,"byte_end":26366,"line_start":738,"line_end":738,"column_start":5,"column_end":80}},{"value":"/ as appropriate for that language.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":26371,"byte_end":26408,"line_start":739,"line_end":739,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":26413,"byte_end":26416,"line_start":740,"line_end":740,"column_start":5,"column_end":8}},{"value":"/ For other stages, we permit interpolations even though they're ignored.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":26421,"byte_end":26496,"line_start":741,"line_end":741,"column_start":5,"column_end":80}},{"value":"/ When a front end is parsing a struct type, it usually doesn't know what","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":26501,"byte_end":26576,"line_start":742,"line_end":742,"column_start":5,"column_end":80}},{"value":"/ stages will be using it for IO, so it's easiest if it can apply the","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":26581,"byte_end":26652,"line_start":743,"line_end":743,"column_start":5,"column_end":76}},{"value":"/ defaults to anything with a `Location` binding, just in case.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":26657,"byte_end":26722,"line_start":744,"line_end":744,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":26727,"byte_end":26730,"line_start":745,"line_end":745,"column_start":5,"column_end":8}},{"value":"/ For anything other than floating-point scalars and vectors, the","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":26735,"byte_end":26802,"line_start":746,"line_end":746,"column_start":5,"column_end":72}},{"value":"/ interpolation must be `Flat`.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":26807,"byte_end":26840,"line_start":747,"line_end":747,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":26845,"byte_end":26848,"line_start":748,"line_end":748,"column_start":5,"column_end":8}},{"value":"/ [`Vertex`]: crate::ShaderStage::Vertex","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":26853,"byte_end":26895,"line_start":749,"line_end":749,"column_start":5,"column_end":47}},{"value":"/ [`Fragment`]: crate::ShaderStage::Fragment","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":26900,"byte_end":26946,"line_start":750,"line_end":750,"column_start":5,"column_end":51}}]},{"kind":"Enum","id":{"krate":0,"index":6220},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":26107,"byte_end":26114,"line_start":731,"line_end":731,"column_start":10,"column_end":17},"name":"Binding","qualname":"::Binding","value":"pub enum Binding {\n    BuiltIn(BuiltIn),\n    Location {\n        location: u32,\n        interpolation: Option<Interpolation>,\n        sampling: Option<Sampling>,\n    },\n}","parent":null,"children":[{"krate":0,"index":6221},{"krate":0,"index":6224}],"decl_id":null,"docs":" Describes how an input/output variable is to be bound.\n","sig":null,"attributes":[{"value":"/ Describes how an input/output variable is to be bound.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":25882,"byte_end":25940,"line_start":727,"line_end":727,"column_start":1,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":6242},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":27317,"byte_end":27332,"line_start":762,"line_end":762,"column_start":12,"column_end":27},"name":"ResourceBinding","qualname":"::ResourceBinding","value":"ResourceBinding { group, binding }","parent":null,"children":[{"krate":0,"index":6243},{"krate":0,"index":6244}],"decl_id":null,"docs":" Pipeline binding information for global resources.\n","sig":null,"attributes":[{"value":"/ Pipeline binding information for global resources.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":27077,"byte_end":27131,"line_start":758,"line_end":758,"column_start":1,"column_end":55}}]},{"kind":"Field","id":{"krate":0,"index":6243},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":27373,"byte_end":27378,"line_start":764,"line_end":764,"column_start":9,"column_end":14},"name":"group","qualname":"::ResourceBinding::group","value":"u32","parent":{"krate":0,"index":6242},"children":[],"decl_id":null,"docs":" The bind group index.\n","sig":null,"attributes":[{"value":"/ The bind group index.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":27339,"byte_end":27364,"line_start":763,"line_end":763,"column_start":5,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":6244},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":27434,"byte_end":27441,"line_start":766,"line_end":766,"column_start":9,"column_end":16},"name":"binding","qualname":"::ResourceBinding::binding","value":"u32","parent":{"krate":0,"index":6242},"children":[],"decl_id":null,"docs":" Binding number within the group.\n","sig":null,"attributes":[{"value":"/ Binding number within the group.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":27389,"byte_end":27425,"line_start":765,"line_end":765,"column_start":5,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":6263},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":27647,"byte_end":27661,"line_start":773,"line_end":773,"column_start":12,"column_end":26},"name":"GlobalVariable","qualname":"::GlobalVariable","value":"GlobalVariable { name, class, binding, ty, init }","parent":null,"children":[{"krate":0,"index":6264},{"krate":0,"index":6265},{"krate":0,"index":6266},{"krate":0,"index":6267},{"krate":0,"index":6268}],"decl_id":null,"docs":" Variable defined at module level.\n","sig":null,"attributes":[{"value":"/ Variable defined at module level.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":27451,"byte_end":27488,"line_start":769,"line_end":769,"column_start":1,"column_end":38}}]},{"kind":"Field","id":{"krate":0,"index":6264},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":27710,"byte_end":27714,"line_start":775,"line_end":775,"column_start":9,"column_end":13},"name":"name","qualname":"::GlobalVariable::name","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":6263},"children":[],"decl_id":null,"docs":" Name of the variable, if any.\n","sig":null,"attributes":[{"value":"/ Name of the variable, if any.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":27668,"byte_end":27701,"line_start":774,"line_end":774,"column_start":5,"column_end":38}}]},{"kind":"Field","id":{"krate":0,"index":6265},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":27783,"byte_end":27788,"line_start":777,"line_end":777,"column_start":9,"column_end":14},"name":"class","qualname":"::GlobalVariable::class","value":"StorageClass","parent":{"krate":0,"index":6263},"children":[],"decl_id":null,"docs":" How this variable is to be stored.\n","sig":null,"attributes":[{"value":"/ How this variable is to be stored.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":27736,"byte_end":27774,"line_start":776,"line_end":776,"column_start":5,"column_end":43}}]},{"kind":"Field","id":{"krate":0,"index":6266},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":27862,"byte_end":27869,"line_start":779,"line_end":779,"column_start":9,"column_end":16},"name":"binding","qualname":"::GlobalVariable::binding","value":"std::option::Option<ResourceBinding>","parent":{"krate":0,"index":6263},"children":[],"decl_id":null,"docs":" For resources, defines the binding point.\n","sig":null,"attributes":[{"value":"/ For resources, defines the binding point.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":27808,"byte_end":27853,"line_start":778,"line_end":778,"column_start":5,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":6267},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":27939,"byte_end":27941,"line_start":781,"line_end":781,"column_start":9,"column_end":11},"name":"ty","qualname":"::GlobalVariable::ty","value":"arena::Handle<Type>","parent":{"krate":0,"index":6263},"children":[],"decl_id":null,"docs":" The type of this variable.\n","sig":null,"attributes":[{"value":"/ The type of this variable.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":27900,"byte_end":27930,"line_start":780,"line_end":780,"column_start":5,"column_end":35}}]},{"kind":"Field","id":{"krate":0,"index":6268},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":28006,"byte_end":28010,"line_start":783,"line_end":783,"column_start":9,"column_end":13},"name":"init","qualname":"::GlobalVariable::init","value":"std::option::Option<arena::Handle<Constant>>","parent":{"krate":0,"index":6263},"children":[],"decl_id":null,"docs":" Initial value for this variable.\n","sig":null,"attributes":[{"value":"/ Initial value for this variable.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":27961,"byte_end":27997,"line_start":782,"line_end":782,"column_start":5,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":6277},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":28228,"byte_end":28241,"line_start":790,"line_end":790,"column_start":12,"column_end":25},"name":"LocalVariable","qualname":"::LocalVariable","value":"LocalVariable { name, ty, init }","parent":null,"children":[{"krate":0,"index":6278},{"krate":0,"index":6279},{"krate":0,"index":6280}],"decl_id":null,"docs":" Variable defined at function level.\n","sig":null,"attributes":[{"value":"/ Variable defined at function level.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":28041,"byte_end":28080,"line_start":786,"line_end":786,"column_start":1,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":6278},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":28290,"byte_end":28294,"line_start":792,"line_end":792,"column_start":9,"column_end":13},"name":"name","qualname":"::LocalVariable::name","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":6277},"children":[],"decl_id":null,"docs":" Name of the variable, if any.\n","sig":null,"attributes":[{"value":"/ Name of the variable, if any.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":28248,"byte_end":28281,"line_start":791,"line_end":791,"column_start":5,"column_end":38}}]},{"kind":"Field","id":{"krate":0,"index":6279},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":28355,"byte_end":28357,"line_start":794,"line_end":794,"column_start":9,"column_end":11},"name":"ty","qualname":"::LocalVariable::ty","value":"arena::Handle<Type>","parent":{"krate":0,"index":6277},"children":[],"decl_id":null,"docs":" The type of this variable.\n","sig":null,"attributes":[{"value":"/ The type of this variable.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":28316,"byte_end":28346,"line_start":793,"line_end":793,"column_start":5,"column_end":35}}]},{"kind":"Field","id":{"krate":0,"index":6280},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":28422,"byte_end":28426,"line_start":796,"line_end":796,"column_start":9,"column_end":13},"name":"init","qualname":"::LocalVariable::init","value":"std::option::Option<arena::Handle<Constant>>","parent":{"krate":0,"index":6277},"children":[],"decl_id":null,"docs":" Initial value for this variable.\n","sig":null,"attributes":[{"value":"/ Initial value for this variable.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":28377,"byte_end":28413,"line_start":795,"line_end":795,"column_start":5,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6286},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":28719,"byte_end":28725,"line_start":804,"line_end":804,"column_start":5,"column_end":11},"name":"Negate","qualname":"::UnaryOperator::Negate","value":"UnaryOperator::Negate","parent":{"krate":0,"index":6285},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6288},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":28731,"byte_end":28734,"line_start":805,"line_end":805,"column_start":5,"column_end":8},"name":"Not","qualname":"::UnaryOperator::Not","value":"UnaryOperator::Not","parent":{"krate":0,"index":6285},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":6285},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":28699,"byte_end":28712,"line_start":803,"line_end":803,"column_start":10,"column_end":23},"name":"UnaryOperator","qualname":"::UnaryOperator","value":"pub enum UnaryOperator { Negate, Not, }","parent":null,"children":[{"krate":0,"index":6286},{"krate":0,"index":6288}],"decl_id":null,"docs":" Operation that can be applied on a single value.\n","sig":null,"attributes":[{"value":"/ Operation that can be applied on a single value.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":28457,"byte_end":28509,"line_start":799,"line_end":799,"column_start":1,"column_end":53}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6309},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":28998,"byte_end":29001,"line_start":813,"line_end":813,"column_start":5,"column_end":8},"name":"Add","qualname":"::BinaryOperator::Add","value":"BinaryOperator::Add","parent":{"krate":0,"index":6308},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6311},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":29007,"byte_end":29015,"line_start":814,"line_end":814,"column_start":5,"column_end":13},"name":"Subtract","qualname":"::BinaryOperator::Subtract","value":"BinaryOperator::Subtract","parent":{"krate":0,"index":6308},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6313},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":29021,"byte_end":29029,"line_start":815,"line_end":815,"column_start":5,"column_end":13},"name":"Multiply","qualname":"::BinaryOperator::Multiply","value":"BinaryOperator::Multiply","parent":{"krate":0,"index":6308},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6315},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":29035,"byte_end":29041,"line_start":816,"line_end":816,"column_start":5,"column_end":11},"name":"Divide","qualname":"::BinaryOperator::Divide","value":"BinaryOperator::Divide","parent":{"krate":0,"index":6308},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6317},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":29114,"byte_end":29120,"line_start":818,"line_end":818,"column_start":5,"column_end":11},"name":"Modulo","qualname":"::BinaryOperator::Modulo","value":"BinaryOperator::Modulo","parent":{"krate":0,"index":6308},"children":[],"decl_id":null,"docs":" Equivalent of the WGSL's `%` operator or SPIR-V's `OpFRem`\n","sig":null,"attributes":[{"value":"/ Equivalent of the WGSL's `%` operator or SPIR-V's `OpFRem`","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":29047,"byte_end":29109,"line_start":817,"line_end":817,"column_start":5,"column_end":67}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6319},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":29126,"byte_end":29131,"line_start":819,"line_end":819,"column_start":5,"column_end":10},"name":"Equal","qualname":"::BinaryOperator::Equal","value":"BinaryOperator::Equal","parent":{"krate":0,"index":6308},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6321},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":29137,"byte_end":29145,"line_start":820,"line_end":820,"column_start":5,"column_end":13},"name":"NotEqual","qualname":"::BinaryOperator::NotEqual","value":"BinaryOperator::NotEqual","parent":{"krate":0,"index":6308},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6323},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":29151,"byte_end":29155,"line_start":821,"line_end":821,"column_start":5,"column_end":9},"name":"Less","qualname":"::BinaryOperator::Less","value":"BinaryOperator::Less","parent":{"krate":0,"index":6308},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6325},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":29161,"byte_end":29170,"line_start":822,"line_end":822,"column_start":5,"column_end":14},"name":"LessEqual","qualname":"::BinaryOperator::LessEqual","value":"BinaryOperator::LessEqual","parent":{"krate":0,"index":6308},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6327},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":29176,"byte_end":29183,"line_start":823,"line_end":823,"column_start":5,"column_end":12},"name":"Greater","qualname":"::BinaryOperator::Greater","value":"BinaryOperator::Greater","parent":{"krate":0,"index":6308},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6329},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":29189,"byte_end":29201,"line_start":824,"line_end":824,"column_start":5,"column_end":17},"name":"GreaterEqual","qualname":"::BinaryOperator::GreaterEqual","value":"BinaryOperator::GreaterEqual","parent":{"krate":0,"index":6308},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6331},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":29207,"byte_end":29210,"line_start":825,"line_end":825,"column_start":5,"column_end":8},"name":"And","qualname":"::BinaryOperator::And","value":"BinaryOperator::And","parent":{"krate":0,"index":6308},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6333},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":29216,"byte_end":29227,"line_start":826,"line_end":826,"column_start":5,"column_end":16},"name":"ExclusiveOr","qualname":"::BinaryOperator::ExclusiveOr","value":"BinaryOperator::ExclusiveOr","parent":{"krate":0,"index":6308},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6335},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":29233,"byte_end":29244,"line_start":827,"line_end":827,"column_start":5,"column_end":16},"name":"InclusiveOr","qualname":"::BinaryOperator::InclusiveOr","value":"BinaryOperator::InclusiveOr","parent":{"krate":0,"index":6308},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6337},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":29250,"byte_end":29260,"line_start":828,"line_end":828,"column_start":5,"column_end":15},"name":"LogicalAnd","qualname":"::BinaryOperator::LogicalAnd","value":"BinaryOperator::LogicalAnd","parent":{"krate":0,"index":6308},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6339},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":29266,"byte_end":29275,"line_start":829,"line_end":829,"column_start":5,"column_end":14},"name":"LogicalOr","qualname":"::BinaryOperator::LogicalOr","value":"BinaryOperator::LogicalOr","parent":{"krate":0,"index":6308},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6341},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":29281,"byte_end":29290,"line_start":830,"line_end":830,"column_start":5,"column_end":14},"name":"ShiftLeft","qualname":"::BinaryOperator::ShiftLeft","value":"BinaryOperator::ShiftLeft","parent":{"krate":0,"index":6308},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6343},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":29358,"byte_end":29368,"line_start":832,"line_end":832,"column_start":5,"column_end":15},"name":"ShiftRight","qualname":"::BinaryOperator::ShiftRight","value":"BinaryOperator::ShiftRight","parent":{"krate":0,"index":6308},"children":[],"decl_id":null,"docs":" Right shift carries the sign of signed integers only.\n","sig":null,"attributes":[{"value":"/ Right shift carries the sign of signed integers only.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":29296,"byte_end":29353,"line_start":831,"line_end":831,"column_start":5,"column_end":62}}]},{"kind":"Enum","id":{"krate":0,"index":6308},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":28977,"byte_end":28991,"line_start":812,"line_end":812,"column_start":10,"column_end":24},"name":"BinaryOperator","qualname":"::BinaryOperator","value":"pub enum BinaryOperator {\n    Add,\n    Subtract,\n    Multiply,\n    Divide,\n    Modulo,\n    Equal,\n    NotEqual,\n    Less,\n    LessEqual,\n    Greater,\n    GreaterEqual,\n    And,\n    ExclusiveOr,\n    InclusiveOr,\n    LogicalAnd,\n    LogicalOr,\n    ShiftLeft,\n    ShiftRight,\n}","parent":null,"children":[{"krate":0,"index":6309},{"krate":0,"index":6311},{"krate":0,"index":6313},{"krate":0,"index":6315},{"krate":0,"index":6317},{"krate":0,"index":6319},{"krate":0,"index":6321},{"krate":0,"index":6323},{"krate":0,"index":6325},{"krate":0,"index":6327},{"krate":0,"index":6329},{"krate":0,"index":6331},{"krate":0,"index":6333},{"krate":0,"index":6335},{"krate":0,"index":6337},{"krate":0,"index":6339},{"krate":0,"index":6341},{"krate":0,"index":6343}],"decl_id":null,"docs":" Operation that can be applied on two values.\n","sig":null,"attributes":[{"value":"/ Operation that can be applied on two values.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":28739,"byte_end":28787,"line_start":808,"line_end":808,"column_start":1,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6364},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":29737,"byte_end":29740,"line_start":843,"line_end":843,"column_start":5,"column_end":8},"name":"Add","qualname":"::AtomicFunction::Add","value":"AtomicFunction::Add","parent":{"krate":0,"index":6363},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6366},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":29746,"byte_end":29754,"line_start":844,"line_end":844,"column_start":5,"column_end":13},"name":"Subtract","qualname":"::AtomicFunction::Subtract","value":"AtomicFunction::Subtract","parent":{"krate":0,"index":6363},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6368},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":29760,"byte_end":29763,"line_start":845,"line_end":845,"column_start":5,"column_end":8},"name":"And","qualname":"::AtomicFunction::And","value":"AtomicFunction::And","parent":{"krate":0,"index":6363},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6370},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":29769,"byte_end":29780,"line_start":846,"line_end":846,"column_start":5,"column_end":16},"name":"ExclusiveOr","qualname":"::AtomicFunction::ExclusiveOr","value":"AtomicFunction::ExclusiveOr","parent":{"krate":0,"index":6363},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6372},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":29786,"byte_end":29797,"line_start":847,"line_end":847,"column_start":5,"column_end":16},"name":"InclusiveOr","qualname":"::AtomicFunction::InclusiveOr","value":"AtomicFunction::InclusiveOr","parent":{"krate":0,"index":6363},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6374},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":29803,"byte_end":29806,"line_start":848,"line_end":848,"column_start":5,"column_end":8},"name":"Min","qualname":"::AtomicFunction::Min","value":"AtomicFunction::Min","parent":{"krate":0,"index":6363},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6376},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":29812,"byte_end":29815,"line_start":849,"line_end":849,"column_start":5,"column_end":8},"name":"Max","qualname":"::AtomicFunction::Max","value":"AtomicFunction::Max","parent":{"krate":0,"index":6363},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":6378},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":29821,"byte_end":29829,"line_start":850,"line_end":850,"column_start":5,"column_end":13},"name":"Exchange","qualname":"::AtomicFunction::Exchange","value":"AtomicFunction::Exchange { compare }","parent":{"krate":0,"index":6363},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":6363},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":29716,"byte_end":29730,"line_start":842,"line_end":842,"column_start":10,"column_end":24},"name":"AtomicFunction","qualname":"::AtomicFunction","value":"pub enum AtomicFunction {\n    Add,\n    Subtract,\n    And,\n    ExclusiveOr,\n    InclusiveOr,\n    Min,\n    Max,\n    Exchange {\n        compare: Option<Handle<Expression>>,\n    },\n}","parent":null,"children":[{"krate":0,"index":6364},{"krate":0,"index":6366},{"krate":0,"index":6368},{"krate":0,"index":6370},{"krate":0,"index":6372},{"krate":0,"index":6374},{"krate":0,"index":6376},{"krate":0,"index":6378}],"decl_id":null,"docs":" Function on an atomic value.","sig":null,"attributes":[{"value":"/ Function on an atomic value.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":29373,"byte_end":29405,"line_start":835,"line_end":835,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":29406,"byte_end":29409,"line_start":836,"line_end":836,"column_start":1,"column_end":4}},{"value":"/ Note: these do not include load/store, which use the existing","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":29410,"byte_end":29475,"line_start":837,"line_end":837,"column_start":1,"column_end":66}},{"value":"/ [`Expression::Load`] and [`Statement::Store`].","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":29476,"byte_end":29526,"line_start":838,"line_end":838,"column_start":1,"column_end":51}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6400},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":30127,"byte_end":30128,"line_start":858,"line_end":858,"column_start":5,"column_end":6},"name":"X","qualname":"::DerivativeAxis::X","value":"DerivativeAxis::X","parent":{"krate":0,"index":6399},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6402},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":30134,"byte_end":30135,"line_start":859,"line_end":859,"column_start":5,"column_end":6},"name":"Y","qualname":"::DerivativeAxis::Y","value":"DerivativeAxis::Y","parent":{"krate":0,"index":6399},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6404},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":30141,"byte_end":30146,"line_start":860,"line_end":860,"column_start":5,"column_end":10},"name":"Width","qualname":"::DerivativeAxis::Width","value":"DerivativeAxis::Width","parent":{"krate":0,"index":6399},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":6399},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":30106,"byte_end":30120,"line_start":857,"line_end":857,"column_start":10,"column_end":24},"name":"DerivativeAxis","qualname":"::DerivativeAxis","value":"pub enum DerivativeAxis { X, Y, Width, }","parent":null,"children":[{"krate":0,"index":6400},{"krate":0,"index":6402},{"krate":0,"index":6404}],"decl_id":null,"docs":" Axis on which to compute a derivative.\n","sig":null,"attributes":[{"value":"/ Axis on which to compute a derivative.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":29874,"byte_end":29916,"line_start":853,"line_end":853,"column_start":1,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6425},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":30431,"byte_end":30434,"line_start":868,"line_end":868,"column_start":5,"column_end":8},"name":"All","qualname":"::RelationalFunction::All","value":"RelationalFunction::All","parent":{"krate":0,"index":6424},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6427},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":30440,"byte_end":30443,"line_start":869,"line_end":869,"column_start":5,"column_end":8},"name":"Any","qualname":"::RelationalFunction::Any","value":"RelationalFunction::Any","parent":{"krate":0,"index":6424},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6429},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":30449,"byte_end":30454,"line_start":870,"line_end":870,"column_start":5,"column_end":10},"name":"IsNan","qualname":"::RelationalFunction::IsNan","value":"RelationalFunction::IsNan","parent":{"krate":0,"index":6424},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6431},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":30460,"byte_end":30465,"line_start":871,"line_end":871,"column_start":5,"column_end":10},"name":"IsInf","qualname":"::RelationalFunction::IsInf","value":"RelationalFunction::IsInf","parent":{"krate":0,"index":6424},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6433},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":30471,"byte_end":30479,"line_start":872,"line_end":872,"column_start":5,"column_end":13},"name":"IsFinite","qualname":"::RelationalFunction::IsFinite","value":"RelationalFunction::IsFinite","parent":{"krate":0,"index":6424},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6435},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":30485,"byte_end":30493,"line_start":873,"line_end":873,"column_start":5,"column_end":13},"name":"IsNormal","qualname":"::RelationalFunction::IsNormal","value":"RelationalFunction::IsNormal","parent":{"krate":0,"index":6424},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":6424},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":30406,"byte_end":30424,"line_start":867,"line_end":867,"column_start":10,"column_end":28},"name":"RelationalFunction","qualname":"::RelationalFunction","value":"pub enum RelationalFunction { All, Any, IsNan, IsInf, IsFinite, IsNormal, }","parent":null,"children":[{"krate":0,"index":6425},{"krate":0,"index":6427},{"krate":0,"index":6429},{"krate":0,"index":6431},{"krate":0,"index":6433},{"krate":0,"index":6435}],"decl_id":null,"docs":" Built-in shader function for testing relation between values.\n","sig":null,"attributes":[{"value":"/ Built-in shader function for testing relation between values.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":30151,"byte_end":30216,"line_start":863,"line_end":863,"column_start":1,"column_end":66}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6456},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":30763,"byte_end":30766,"line_start":882,"line_end":882,"column_start":5,"column_end":8},"name":"Abs","qualname":"::MathFunction::Abs","value":"MathFunction::Abs","parent":{"krate":0,"index":6455},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6458},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":30772,"byte_end":30775,"line_start":883,"line_end":883,"column_start":5,"column_end":8},"name":"Min","qualname":"::MathFunction::Min","value":"MathFunction::Min","parent":{"krate":0,"index":6455},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6460},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":30781,"byte_end":30784,"line_start":884,"line_end":884,"column_start":5,"column_end":8},"name":"Max","qualname":"::MathFunction::Max","value":"MathFunction::Max","parent":{"krate":0,"index":6455},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6462},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":30790,"byte_end":30795,"line_start":885,"line_end":885,"column_start":5,"column_end":10},"name":"Clamp","qualname":"::MathFunction::Clamp","value":"MathFunction::Clamp","parent":{"krate":0,"index":6455},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6464},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":30821,"byte_end":30824,"line_start":887,"line_end":887,"column_start":5,"column_end":8},"name":"Cos","qualname":"::MathFunction::Cos","value":"MathFunction::Cos","parent":{"krate":0,"index":6455},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6466},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":30830,"byte_end":30834,"line_start":888,"line_end":888,"column_start":5,"column_end":9},"name":"Cosh","qualname":"::MathFunction::Cosh","value":"MathFunction::Cosh","parent":{"krate":0,"index":6455},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6468},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":30840,"byte_end":30843,"line_start":889,"line_end":889,"column_start":5,"column_end":8},"name":"Sin","qualname":"::MathFunction::Sin","value":"MathFunction::Sin","parent":{"krate":0,"index":6455},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6470},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":30849,"byte_end":30853,"line_start":890,"line_end":890,"column_start":5,"column_end":9},"name":"Sinh","qualname":"::MathFunction::Sinh","value":"MathFunction::Sinh","parent":{"krate":0,"index":6455},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6472},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":30859,"byte_end":30862,"line_start":891,"line_end":891,"column_start":5,"column_end":8},"name":"Tan","qualname":"::MathFunction::Tan","value":"MathFunction::Tan","parent":{"krate":0,"index":6455},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6474},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":30868,"byte_end":30872,"line_start":892,"line_end":892,"column_start":5,"column_end":9},"name":"Tanh","qualname":"::MathFunction::Tanh","value":"MathFunction::Tanh","parent":{"krate":0,"index":6455},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6476},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":30878,"byte_end":30882,"line_start":893,"line_end":893,"column_start":5,"column_end":9},"name":"Acos","qualname":"::MathFunction::Acos","value":"MathFunction::Acos","parent":{"krate":0,"index":6455},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6478},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":30888,"byte_end":30892,"line_start":894,"line_end":894,"column_start":5,"column_end":9},"name":"Asin","qualname":"::MathFunction::Asin","value":"MathFunction::Asin","parent":{"krate":0,"index":6455},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6480},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":30898,"byte_end":30902,"line_start":895,"line_end":895,"column_start":5,"column_end":9},"name":"Atan","qualname":"::MathFunction::Atan","value":"MathFunction::Atan","parent":{"krate":0,"index":6455},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6482},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":30908,"byte_end":30913,"line_start":896,"line_end":896,"column_start":5,"column_end":10},"name":"Atan2","qualname":"::MathFunction::Atan2","value":"MathFunction::Atan2","parent":{"krate":0,"index":6455},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6484},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":30919,"byte_end":30924,"line_start":897,"line_end":897,"column_start":5,"column_end":10},"name":"Asinh","qualname":"::MathFunction::Asinh","value":"MathFunction::Asinh","parent":{"krate":0,"index":6455},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6486},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":30930,"byte_end":30935,"line_start":898,"line_end":898,"column_start":5,"column_end":10},"name":"Acosh","qualname":"::MathFunction::Acosh","value":"MathFunction::Acosh","parent":{"krate":0,"index":6455},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6488},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":30941,"byte_end":30946,"line_start":899,"line_end":899,"column_start":5,"column_end":10},"name":"Atanh","qualname":"::MathFunction::Atanh","value":"MathFunction::Atanh","parent":{"krate":0,"index":6455},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6490},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":30973,"byte_end":30977,"line_start":901,"line_end":901,"column_start":5,"column_end":9},"name":"Ceil","qualname":"::MathFunction::Ceil","value":"MathFunction::Ceil","parent":{"krate":0,"index":6455},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6492},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":30983,"byte_end":30988,"line_start":902,"line_end":902,"column_start":5,"column_end":10},"name":"Floor","qualname":"::MathFunction::Floor","value":"MathFunction::Floor","parent":{"krate":0,"index":6455},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6494},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":30994,"byte_end":30999,"line_start":903,"line_end":903,"column_start":5,"column_end":10},"name":"Round","qualname":"::MathFunction::Round","value":"MathFunction::Round","parent":{"krate":0,"index":6455},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6496},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":31005,"byte_end":31010,"line_start":904,"line_end":904,"column_start":5,"column_end":10},"name":"Fract","qualname":"::MathFunction::Fract","value":"MathFunction::Fract","parent":{"krate":0,"index":6455},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6498},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":31016,"byte_end":31021,"line_start":905,"line_end":905,"column_start":5,"column_end":10},"name":"Trunc","qualname":"::MathFunction::Trunc","value":"MathFunction::Trunc","parent":{"krate":0,"index":6455},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6500},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":31027,"byte_end":31031,"line_start":906,"line_end":906,"column_start":5,"column_end":9},"name":"Modf","qualname":"::MathFunction::Modf","value":"MathFunction::Modf","parent":{"krate":0,"index":6455},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6502},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":31037,"byte_end":31042,"line_start":907,"line_end":907,"column_start":5,"column_end":10},"name":"Frexp","qualname":"::MathFunction::Frexp","value":"MathFunction::Frexp","parent":{"krate":0,"index":6455},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6504},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":31048,"byte_end":31053,"line_start":908,"line_end":908,"column_start":5,"column_end":10},"name":"Ldexp","qualname":"::MathFunction::Ldexp","value":"MathFunction::Ldexp","parent":{"krate":0,"index":6455},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6506},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":31075,"byte_end":31078,"line_start":910,"line_end":910,"column_start":5,"column_end":8},"name":"Exp","qualname":"::MathFunction::Exp","value":"MathFunction::Exp","parent":{"krate":0,"index":6455},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6508},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":31084,"byte_end":31088,"line_start":911,"line_end":911,"column_start":5,"column_end":9},"name":"Exp2","qualname":"::MathFunction::Exp2","value":"MathFunction::Exp2","parent":{"krate":0,"index":6455},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6510},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":31094,"byte_end":31097,"line_start":912,"line_end":912,"column_start":5,"column_end":8},"name":"Log","qualname":"::MathFunction::Log","value":"MathFunction::Log","parent":{"krate":0,"index":6455},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6512},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":31103,"byte_end":31107,"line_start":913,"line_end":913,"column_start":5,"column_end":9},"name":"Log2","qualname":"::MathFunction::Log2","value":"MathFunction::Log2","parent":{"krate":0,"index":6455},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6514},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":31113,"byte_end":31116,"line_start":914,"line_end":914,"column_start":5,"column_end":8},"name":"Pow","qualname":"::MathFunction::Pow","value":"MathFunction::Pow","parent":{"krate":0,"index":6455},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6516},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":31138,"byte_end":31141,"line_start":916,"line_end":916,"column_start":5,"column_end":8},"name":"Dot","qualname":"::MathFunction::Dot","value":"MathFunction::Dot","parent":{"krate":0,"index":6455},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6518},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":31147,"byte_end":31152,"line_start":917,"line_end":917,"column_start":5,"column_end":10},"name":"Outer","qualname":"::MathFunction::Outer","value":"MathFunction::Outer","parent":{"krate":0,"index":6455},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6520},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":31158,"byte_end":31163,"line_start":918,"line_end":918,"column_start":5,"column_end":10},"name":"Cross","qualname":"::MathFunction::Cross","value":"MathFunction::Cross","parent":{"krate":0,"index":6455},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6522},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":31169,"byte_end":31177,"line_start":919,"line_end":919,"column_start":5,"column_end":13},"name":"Distance","qualname":"::MathFunction::Distance","value":"MathFunction::Distance","parent":{"krate":0,"index":6455},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6524},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":31183,"byte_end":31189,"line_start":920,"line_end":920,"column_start":5,"column_end":11},"name":"Length","qualname":"::MathFunction::Length","value":"MathFunction::Length","parent":{"krate":0,"index":6455},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6526},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":31195,"byte_end":31204,"line_start":921,"line_end":921,"column_start":5,"column_end":14},"name":"Normalize","qualname":"::MathFunction::Normalize","value":"MathFunction::Normalize","parent":{"krate":0,"index":6455},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6528},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":31210,"byte_end":31221,"line_start":922,"line_end":922,"column_start":5,"column_end":16},"name":"FaceForward","qualname":"::MathFunction::FaceForward","value":"MathFunction::FaceForward","parent":{"krate":0,"index":6455},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6530},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":31227,"byte_end":31234,"line_start":923,"line_end":923,"column_start":5,"column_end":12},"name":"Reflect","qualname":"::MathFunction::Reflect","value":"MathFunction::Reflect","parent":{"krate":0,"index":6455},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6532},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":31240,"byte_end":31247,"line_start":924,"line_end":924,"column_start":5,"column_end":12},"name":"Refract","qualname":"::MathFunction::Refract","value":"MathFunction::Refract","parent":{"krate":0,"index":6455},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6534},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":31274,"byte_end":31278,"line_start":926,"line_end":926,"column_start":5,"column_end":9},"name":"Sign","qualname":"::MathFunction::Sign","value":"MathFunction::Sign","parent":{"krate":0,"index":6455},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6536},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":31284,"byte_end":31287,"line_start":927,"line_end":927,"column_start":5,"column_end":8},"name":"Fma","qualname":"::MathFunction::Fma","value":"MathFunction::Fma","parent":{"krate":0,"index":6455},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6538},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":31293,"byte_end":31296,"line_start":928,"line_end":928,"column_start":5,"column_end":8},"name":"Mix","qualname":"::MathFunction::Mix","value":"MathFunction::Mix","parent":{"krate":0,"index":6455},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6540},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":31302,"byte_end":31306,"line_start":929,"line_end":929,"column_start":5,"column_end":9},"name":"Step","qualname":"::MathFunction::Step","value":"MathFunction::Step","parent":{"krate":0,"index":6455},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6542},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":31312,"byte_end":31322,"line_start":930,"line_end":930,"column_start":5,"column_end":15},"name":"SmoothStep","qualname":"::MathFunction::SmoothStep","value":"MathFunction::SmoothStep","parent":{"krate":0,"index":6455},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6544},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":31328,"byte_end":31332,"line_start":931,"line_end":931,"column_start":5,"column_end":9},"name":"Sqrt","qualname":"::MathFunction::Sqrt","value":"MathFunction::Sqrt","parent":{"krate":0,"index":6455},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6546},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":31338,"byte_end":31349,"line_start":932,"line_end":932,"column_start":5,"column_end":16},"name":"InverseSqrt","qualname":"::MathFunction::InverseSqrt","value":"MathFunction::InverseSqrt","parent":{"krate":0,"index":6455},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6548},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":31355,"byte_end":31362,"line_start":933,"line_end":933,"column_start":5,"column_end":12},"name":"Inverse","qualname":"::MathFunction::Inverse","value":"MathFunction::Inverse","parent":{"krate":0,"index":6455},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6550},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":31368,"byte_end":31377,"line_start":934,"line_end":934,"column_start":5,"column_end":14},"name":"Transpose","qualname":"::MathFunction::Transpose","value":"MathFunction::Transpose","parent":{"krate":0,"index":6455},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6552},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":31383,"byte_end":31394,"line_start":935,"line_end":935,"column_start":5,"column_end":16},"name":"Determinant","qualname":"::MathFunction::Determinant","value":"MathFunction::Determinant","parent":{"krate":0,"index":6455},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6554},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":31412,"byte_end":31424,"line_start":937,"line_end":937,"column_start":5,"column_end":17},"name":"CountOneBits","qualname":"::MathFunction::CountOneBits","value":"MathFunction::CountOneBits","parent":{"krate":0,"index":6455},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6556},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":31430,"byte_end":31441,"line_start":938,"line_end":938,"column_start":5,"column_end":16},"name":"ReverseBits","qualname":"::MathFunction::ReverseBits","value":"MathFunction::ReverseBits","parent":{"krate":0,"index":6455},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6558},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":31447,"byte_end":31458,"line_start":939,"line_end":939,"column_start":5,"column_end":16},"name":"ExtractBits","qualname":"::MathFunction::ExtractBits","value":"MathFunction::ExtractBits","parent":{"krate":0,"index":6455},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6560},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":31464,"byte_end":31474,"line_start":940,"line_end":940,"column_start":5,"column_end":15},"name":"InsertBits","qualname":"::MathFunction::InsertBits","value":"MathFunction::InsertBits","parent":{"krate":0,"index":6455},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6562},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":31500,"byte_end":31512,"line_start":942,"line_end":942,"column_start":5,"column_end":17},"name":"Pack4x8snorm","qualname":"::MathFunction::Pack4x8snorm","value":"MathFunction::Pack4x8snorm","parent":{"krate":0,"index":6455},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6564},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":31518,"byte_end":31530,"line_start":943,"line_end":943,"column_start":5,"column_end":17},"name":"Pack4x8unorm","qualname":"::MathFunction::Pack4x8unorm","value":"MathFunction::Pack4x8unorm","parent":{"krate":0,"index":6455},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6566},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":31536,"byte_end":31549,"line_start":944,"line_end":944,"column_start":5,"column_end":18},"name":"Pack2x16snorm","qualname":"::MathFunction::Pack2x16snorm","value":"MathFunction::Pack2x16snorm","parent":{"krate":0,"index":6455},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6568},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":31555,"byte_end":31568,"line_start":945,"line_end":945,"column_start":5,"column_end":18},"name":"Pack2x16unorm","qualname":"::MathFunction::Pack2x16unorm","value":"MathFunction::Pack2x16unorm","parent":{"krate":0,"index":6455},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6570},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":31574,"byte_end":31587,"line_start":946,"line_end":946,"column_start":5,"column_end":18},"name":"Pack2x16float","qualname":"::MathFunction::Pack2x16float","value":"MathFunction::Pack2x16float","parent":{"krate":0,"index":6455},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6572},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":31615,"byte_end":31629,"line_start":948,"line_end":948,"column_start":5,"column_end":19},"name":"Unpack4x8snorm","qualname":"::MathFunction::Unpack4x8snorm","value":"MathFunction::Unpack4x8snorm","parent":{"krate":0,"index":6455},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6574},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":31635,"byte_end":31649,"line_start":949,"line_end":949,"column_start":5,"column_end":19},"name":"Unpack4x8unorm","qualname":"::MathFunction::Unpack4x8unorm","value":"MathFunction::Unpack4x8unorm","parent":{"krate":0,"index":6455},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6576},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":31655,"byte_end":31670,"line_start":950,"line_end":950,"column_start":5,"column_end":20},"name":"Unpack2x16snorm","qualname":"::MathFunction::Unpack2x16snorm","value":"MathFunction::Unpack2x16snorm","parent":{"krate":0,"index":6455},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6578},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":31676,"byte_end":31691,"line_start":951,"line_end":951,"column_start":5,"column_end":20},"name":"Unpack2x16unorm","qualname":"::MathFunction::Unpack2x16unorm","value":"MathFunction::Unpack2x16unorm","parent":{"krate":0,"index":6455},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6580},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":31697,"byte_end":31712,"line_start":952,"line_end":952,"column_start":5,"column_end":20},"name":"Unpack2x16float","qualname":"::MathFunction::Unpack2x16float","value":"MathFunction::Unpack2x16float","parent":{"krate":0,"index":6455},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":6455},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":30726,"byte_end":30738,"line_start":880,"line_end":880,"column_start":10,"column_end":22},"name":"MathFunction","qualname":"::MathFunction","value":"pub enum MathFunction {\n    Abs,\n    Min,\n    Max,\n    Clamp,\n    Cos,\n    Cosh,\n    Sin,\n    Sinh,\n    Tan,\n    Tanh,\n    Acos,\n    Asin,\n    Atan,\n    Atan2,\n    Asinh,\n    Acosh,\n    Atanh,\n    Ceil,\n    Floor,\n    Round,\n    Fract,\n    Trunc,\n    Modf,\n    Frexp,\n    Ldexp,\n    Exp,\n    Exp2,\n    Log,\n    Log2,\n    Pow,\n    Dot,\n    Outer,\n    Cross,\n    Distance,\n    Length,\n    Normalize,\n    FaceForward,\n    Reflect,\n    Refract,\n    Sign,\n    Fma,\n    Mix,\n    Step,\n    SmoothStep,\n    Sqrt,\n    InverseSqrt,\n    Inverse,\n    Transpose,\n    Determinant,\n    CountOneBits,\n    ReverseBits,\n    ExtractBits,\n    InsertBits,\n    Pack4x8snorm,\n    Pack4x8unorm,\n    Pack2x16snorm,\n    Pack2x16unorm,\n    Pack2x16float,\n    Unpack4x8snorm,\n    Unpack4x8unorm,\n    Unpack2x16snorm,\n    Unpack2x16unorm,\n    Unpack2x16float,\n}","parent":null,"children":[{"krate":0,"index":6456},{"krate":0,"index":6458},{"krate":0,"index":6460},{"krate":0,"index":6462},{"krate":0,"index":6464},{"krate":0,"index":6466},{"krate":0,"index":6468},{"krate":0,"index":6470},{"krate":0,"index":6472},{"krate":0,"index":6474},{"krate":0,"index":6476},{"krate":0,"index":6478},{"krate":0,"index":6480},{"krate":0,"index":6482},{"krate":0,"index":6484},{"krate":0,"index":6486},{"krate":0,"index":6488},{"krate":0,"index":6490},{"krate":0,"index":6492},{"krate":0,"index":6494},{"krate":0,"index":6496},{"krate":0,"index":6498},{"krate":0,"index":6500},{"krate":0,"index":6502},{"krate":0,"index":6504},{"krate":0,"index":6506},{"krate":0,"index":6508},{"krate":0,"index":6510},{"krate":0,"index":6512},{"krate":0,"index":6514},{"krate":0,"index":6516},{"krate":0,"index":6518},{"krate":0,"index":6520},{"krate":0,"index":6522},{"krate":0,"index":6524},{"krate":0,"index":6526},{"krate":0,"index":6528},{"krate":0,"index":6530},{"krate":0,"index":6532},{"krate":0,"index":6534},{"krate":0,"index":6536},{"krate":0,"index":6538},{"krate":0,"index":6540},{"krate":0,"index":6542},{"krate":0,"index":6544},{"krate":0,"index":6546},{"krate":0,"index":6548},{"krate":0,"index":6550},{"krate":0,"index":6552},{"krate":0,"index":6554},{"krate":0,"index":6556},{"krate":0,"index":6558},{"krate":0,"index":6560},{"krate":0,"index":6562},{"krate":0,"index":6564},{"krate":0,"index":6566},{"krate":0,"index":6568},{"krate":0,"index":6570},{"krate":0,"index":6572},{"krate":0,"index":6574},{"krate":0,"index":6576},{"krate":0,"index":6578},{"krate":0,"index":6580}],"decl_id":null,"docs":" Built-in shader function for math.\n","sig":null,"attributes":[{"value":"/ Built-in shader function for math.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":30498,"byte_end":30536,"line_start":876,"line_end":876,"column_start":1,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6601},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":31951,"byte_end":31955,"line_start":960,"line_end":960,"column_start":5,"column_end":9},"name":"Auto","qualname":"::SampleLevel::Auto","value":"SampleLevel::Auto","parent":{"krate":0,"index":6600},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6603},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":31961,"byte_end":31965,"line_start":961,"line_end":961,"column_start":5,"column_end":9},"name":"Zero","qualname":"::SampleLevel::Zero","value":"SampleLevel::Zero","parent":{"krate":0,"index":6600},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6605},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":31971,"byte_end":31976,"line_start":962,"line_end":962,"column_start":5,"column_end":10},"name":"Exact","qualname":"::SampleLevel::Exact","value":"SampleLevel::Exact(Handle<Expression>)","parent":{"krate":0,"index":6600},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6608},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":32002,"byte_end":32006,"line_start":963,"line_end":963,"column_start":5,"column_end":9},"name":"Bias","qualname":"::SampleLevel::Bias","value":"SampleLevel::Bias(Handle<Expression>)","parent":{"krate":0,"index":6600},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":6611},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":32032,"byte_end":32040,"line_start":964,"line_end":964,"column_start":5,"column_end":13},"name":"Gradient","qualname":"::SampleLevel::Gradient","value":"SampleLevel::Gradient { x, y }","parent":{"krate":0,"index":6600},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":6600},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":31933,"byte_end":31944,"line_start":959,"line_end":959,"column_start":10,"column_end":21},"name":"SampleLevel","qualname":"::SampleLevel","value":"pub enum SampleLevel {\n    Auto,\n    Zero,\n    Exact(Handle<Expression>),\n    Bias(Handle<Expression>),\n    Gradient {\n        x: Handle<Expression>,\n        y: Handle<Expression>,\n    },\n}","parent":null,"children":[{"krate":0,"index":6601},{"krate":0,"index":6603},{"krate":0,"index":6605},{"krate":0,"index":6608},{"krate":0,"index":6611}],"decl_id":null,"docs":" Sampling modifier to control the level of detail.\n","sig":null,"attributes":[{"value":"/ Sampling modifier to control the level of detail.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":31717,"byte_end":31770,"line_start":955,"line_end":955,"column_start":1,"column_end":54}}]},{"kind":"StructVariant","id":{"krate":0,"index":6624},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":32367,"byte_end":32371,"line_start":976,"line_end":976,"column_start":5,"column_end":9},"name":"Size","qualname":"::ImageQuery::Size","value":"ImageQuery::Size { level }","parent":{"krate":0,"index":6623},"children":[],"decl_id":null,"docs":" Get the size at the specified level.\n","sig":null,"attributes":[{"value":"/ Get the size at the specified level.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":32322,"byte_end":32362,"line_start":975,"line_end":975,"column_start":5,"column_end":45}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6626},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":32522,"byte_end":32531,"line_start":981,"line_end":981,"column_start":5,"column_end":14},"name":"NumLevels","qualname":"::ImageQuery::NumLevels","value":"ImageQuery::NumLevels","parent":{"krate":0,"index":6623},"children":[],"decl_id":null,"docs":" Get the number of mipmap levels.\n","sig":null,"attributes":[{"value":"/ Get the number of mipmap levels.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":32481,"byte_end":32517,"line_start":980,"line_end":980,"column_start":5,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6628},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":32577,"byte_end":32586,"line_start":983,"line_end":983,"column_start":5,"column_end":14},"name":"NumLayers","qualname":"::ImageQuery::NumLayers","value":"ImageQuery::NumLayers","parent":{"krate":0,"index":6623},"children":[],"decl_id":null,"docs":" Get the number of array layers.\n","sig":null,"attributes":[{"value":"/ Get the number of array layers.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":32537,"byte_end":32572,"line_start":982,"line_end":982,"column_start":5,"column_end":40}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6630},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":32627,"byte_end":32637,"line_start":985,"line_end":985,"column_start":5,"column_end":15},"name":"NumSamples","qualname":"::ImageQuery::NumSamples","value":"ImageQuery::NumSamples","parent":{"krate":0,"index":6623},"children":[],"decl_id":null,"docs":" Get the number of samples.\n","sig":null,"attributes":[{"value":"/ Get the number of samples.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":32592,"byte_end":32622,"line_start":984,"line_end":984,"column_start":5,"column_end":35}}]},{"kind":"Enum","id":{"krate":0,"index":6623},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":32305,"byte_end":32315,"line_start":974,"line_end":974,"column_start":10,"column_end":20},"name":"ImageQuery","qualname":"::ImageQuery","value":"pub enum ImageQuery {\n    Size {\n        level: Option<Handle<Expression>>,\n    },\n    NumLevels,\n    NumLayers,\n    NumSamples,\n}","parent":null,"children":[{"krate":0,"index":6624},{"krate":0,"index":6626},{"krate":0,"index":6628},{"krate":0,"index":6630}],"decl_id":null,"docs":" Type of an image query.\n","sig":null,"attributes":[{"value":"/ Type of an image query.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":32115,"byte_end":32142,"line_start":970,"line_end":970,"column_start":1,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6642},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":32893,"byte_end":32894,"line_start":995,"line_end":995,"column_start":5,"column_end":6},"name":"X","qualname":"::SwizzleComponent::X","value":"SwizzleComponent::X","parent":{"krate":0,"index":6641},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":32885,"byte_end":32888,"line_start":994,"line_end":994,"column_start":5,"column_end":8}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6645},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":32912,"byte_end":32913,"line_start":997,"line_end":997,"column_start":5,"column_end":6},"name":"Y","qualname":"::SwizzleComponent::Y","value":"SwizzleComponent::Y","parent":{"krate":0,"index":6641},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":32904,"byte_end":32907,"line_start":996,"line_end":996,"column_start":5,"column_end":8}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6648},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":32931,"byte_end":32932,"line_start":999,"line_end":999,"column_start":5,"column_end":6},"name":"Z","qualname":"::SwizzleComponent::Z","value":"SwizzleComponent::Z","parent":{"krate":0,"index":6641},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":32923,"byte_end":32926,"line_start":998,"line_end":998,"column_start":5,"column_end":8}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6651},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":32950,"byte_end":32951,"line_start":1001,"line_end":1001,"column_start":5,"column_end":6},"name":"W","qualname":"::SwizzleComponent::W","value":"SwizzleComponent::W","parent":{"krate":0,"index":6641},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":32942,"byte_end":32945,"line_start":1000,"line_end":1000,"column_start":5,"column_end":8}}]},{"kind":"Enum","id":{"krate":0,"index":6641},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":32862,"byte_end":32878,"line_start":993,"line_end":993,"column_start":10,"column_end":26},"name":"SwizzleComponent","qualname":"::SwizzleComponent","value":"pub enum SwizzleComponent { X = , Y = , Z = , W = , }","parent":null,"children":[{"krate":0,"index":6642},{"krate":0,"index":6645},{"krate":0,"index":6648},{"krate":0,"index":6651}],"decl_id":null,"docs":" Component selection for a vector swizzle.\n","sig":null,"attributes":[{"value":"/ Component selection for a vector swizzle.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":32642,"byte_end":32687,"line_start":988,"line_end":988,"column_start":1,"column_end":46}},{"value":"repr(u8)","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":32688,"byte_end":32699,"line_start":989,"line_end":989,"column_start":1,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":6664},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":33170,"byte_end":33177,"line_start":1009,"line_end":1009,"column_start":16,"column_end":23},"name":"Barrier","qualname":"::Barrier","value":"Barrier {  }","parent":null,"children":[{"krate":0,"index":6665}],"decl_id":null,"docs":" Memory barrier flags.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6698},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":33265,"byte_end":33272,"line_start":1011,"line_end":1011,"column_start":15,"column_end":22},"name":"STORAGE","qualname":"::Barrier::STORAGE","value":"Self","parent":{"krate":0,"index":6697},"children":[],"decl_id":null,"docs":" Barrier affects all `StorageClass::Storage` accesses.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6699},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":33362,"byte_end":33372,"line_start":1013,"line_end":1013,"column_start":15,"column_end":25},"name":"WORK_GROUP","qualname":"::Barrier::WORK_GROUP","value":"Self","parent":{"krate":0,"index":6697},"children":[],"decl_id":null,"docs":" Barrier affects all `StorageClass::WorkGroup` accesses.\n","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":6757},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":35970,"byte_end":35976,"line_start":1071,"line_end":1071,"column_start":5,"column_end":11},"name":"Access","qualname":"::Expression::Access","value":"Expression::Access { base, index }","parent":{"krate":0,"index":6756},"children":[],"decl_id":null,"docs":" Array access with a computed index.","sig":null,"attributes":[{"value":"/ Array access with a computed index.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":33722,"byte_end":33761,"line_start":1025,"line_end":1025,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":33766,"byte_end":33769,"line_start":1026,"line_end":1026,"column_start":5,"column_end":8}},{"value":"/ ## Typing rules","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":33774,"byte_end":33793,"line_start":1027,"line_end":1027,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":33798,"byte_end":33801,"line_start":1028,"line_end":1028,"column_start":5,"column_end":8}},{"value":"/ The `base` operand must be some composite type: [`Vector`], [`Matrix`],","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":33806,"byte_end":33881,"line_start":1029,"line_end":1029,"column_start":5,"column_end":80}},{"value":"/ [`Array`], a [`Pointer`] to one of those, or a [`ValuePointer`] with a","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":33886,"byte_end":33960,"line_start":1030,"line_end":1030,"column_start":5,"column_end":79}},{"value":"/ `size`.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":33965,"byte_end":33976,"line_start":1031,"line_end":1031,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":33981,"byte_end":33984,"line_start":1032,"line_end":1032,"column_start":5,"column_end":8}},{"value":"/ The `index` operand must be an integer, signed or unsigned.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":33989,"byte_end":34052,"line_start":1033,"line_end":1033,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":34057,"byte_end":34060,"line_start":1034,"line_end":1034,"column_start":5,"column_end":8}},{"value":"/ Indexing a [`Vector`] or [`Array`] produces a value of its element type.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":34065,"byte_end":34141,"line_start":1035,"line_end":1035,"column_start":5,"column_end":81}},{"value":"/ Indexing a [`Matrix`] produces a [`Vector`].","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":34146,"byte_end":34194,"line_start":1036,"line_end":1036,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":34199,"byte_end":34202,"line_start":1037,"line_end":1037,"column_start":5,"column_end":8}},{"value":"/ Indexing a [`Pointer`] to any of the above produces a pointer to the","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":34207,"byte_end":34279,"line_start":1038,"line_end":1038,"column_start":5,"column_end":77}},{"value":"/ element/component type, in the same [`class`]. In the case of [`Array`],","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":34284,"byte_end":34360,"line_start":1039,"line_end":1039,"column_start":5,"column_end":81}},{"value":"/ the result is an actual [`Pointer`], but for vectors and matrices, there","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":34365,"byte_end":34441,"line_start":1040,"line_end":1040,"column_start":5,"column_end":81}},{"value":"/ may not be any type in the arena representing the component's type, so","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":34446,"byte_end":34520,"line_start":1041,"line_end":1041,"column_start":5,"column_end":79}},{"value":"/ those produce [`ValuePointer`] types equivalent to the appropriate","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":34525,"byte_end":34595,"line_start":1042,"line_end":1042,"column_start":5,"column_end":75}},{"value":"/ [`Pointer`].","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":34600,"byte_end":34616,"line_start":1043,"line_end":1043,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":34621,"byte_end":34624,"line_start":1044,"line_end":1044,"column_start":5,"column_end":8}},{"value":"/ ## Dynamic indexing restrictions","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":34629,"byte_end":34665,"line_start":1045,"line_end":1045,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":34670,"byte_end":34673,"line_start":1046,"line_end":1046,"column_start":5,"column_end":8}},{"value":"/ To accommodate restrictions in some of the shader languages that Naga","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":34678,"byte_end":34751,"line_start":1047,"line_end":1047,"column_start":5,"column_end":78}},{"value":"/ targets, it is not permitted to subscript a matrix or array with a","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":34756,"byte_end":34826,"line_start":1048,"line_end":1048,"column_start":5,"column_end":75}},{"value":"/ dynamically computed index unless that matrix or array appears behind a","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":34831,"byte_end":34906,"line_start":1049,"line_end":1049,"column_start":5,"column_end":80}},{"value":"/ pointer. In other words, if the inner type of `base` is [`Array`] or","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":34911,"byte_end":34983,"line_start":1050,"line_end":1050,"column_start":5,"column_end":77}},{"value":"/ [`Matrix`], then `index` must be a constant. But if the type of `base`","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":34988,"byte_end":35062,"line_start":1051,"line_end":1051,"column_start":5,"column_end":79}},{"value":"/ is a [`Pointer`] to an array or matrix or a [`ValuePointer`] with a","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":35067,"byte_end":35138,"line_start":1052,"line_end":1052,"column_start":5,"column_end":76}},{"value":"/ `size`, then the index may be any expression of integer type.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":35143,"byte_end":35208,"line_start":1053,"line_end":1053,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":35213,"byte_end":35216,"line_start":1054,"line_end":1054,"column_start":5,"column_end":8}},{"value":"/ You can use the [`Expression::is_dynamic_index`] method to determine","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":35221,"byte_end":35293,"line_start":1055,"line_end":1055,"column_start":5,"column_end":77}},{"value":"/ whether a given index expression requires matrix or array base operands","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":35298,"byte_end":35373,"line_start":1056,"line_end":1056,"column_start":5,"column_end":80}},{"value":"/ to be behind a pointer.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":35378,"byte_end":35405,"line_start":1057,"line_end":1057,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":35410,"byte_end":35413,"line_start":1058,"line_end":1058,"column_start":5,"column_end":8}},{"value":"/ (It would be simpler to always require the use of `AccessIndex` when","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":35418,"byte_end":35490,"line_start":1059,"line_end":1059,"column_start":5,"column_end":77}},{"value":"/ subscripting arrays and matrices that are not behind pointers, but to","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":35495,"byte_end":35568,"line_start":1060,"line_end":1060,"column_start":5,"column_end":78}},{"value":"/ accommodate existing front ends, Naga also permits `Access`, with a","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":35573,"byte_end":35644,"line_start":1061,"line_end":1061,"column_start":5,"column_end":76}},{"value":"/ restricted `index`.)","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":35649,"byte_end":35673,"line_start":1062,"line_end":1062,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":35678,"byte_end":35681,"line_start":1063,"line_end":1063,"column_start":5,"column_end":8}},{"value":"/ [`Vector`]: TypeInner::Vector","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":35686,"byte_end":35719,"line_start":1064,"line_end":1064,"column_start":5,"column_end":38}},{"value":"/ [`Matrix`]: TypeInner::Matrix","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":35724,"byte_end":35757,"line_start":1065,"line_end":1065,"column_start":5,"column_end":38}},{"value":"/ [`Array`]: TypeInner::Array","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":35762,"byte_end":35793,"line_start":1066,"line_end":1066,"column_start":5,"column_end":36}},{"value":"/ [`Pointer`]: TypeInner::Pointer","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":35798,"byte_end":35833,"line_start":1067,"line_end":1067,"column_start":5,"column_end":40}},{"value":"/ [`class`]: TypeInner::Pointer::class","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":35838,"byte_end":35878,"line_start":1068,"line_end":1068,"column_start":5,"column_end":45}},{"value":"/ [`ValuePointer`]: TypeInner::ValuePointer","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":35883,"byte_end":35928,"line_start":1069,"line_end":1069,"column_start":5,"column_end":50}},{"value":"/ [`Float`]: ScalarKind::Float","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":35933,"byte_end":35965,"line_start":1070,"line_end":1070,"column_start":5,"column_end":37}}]},{"kind":"StructVariant","id":{"krate":0,"index":6760},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":36100,"byte_end":36111,"line_start":1076,"line_end":1076,"column_start":5,"column_end":16},"name":"AccessIndex","qualname":"::Expression::AccessIndex","value":"Expression::AccessIndex { base, index }","parent":{"krate":0,"index":6756},"children":[],"decl_id":null,"docs":" Array access with a known index.\n","sig":null,"attributes":[{"value":"/ Array access with a known index.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":36059,"byte_end":36095,"line_start":1075,"line_end":1075,"column_start":5,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6763},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":36247,"byte_end":36255,"line_start":1083,"line_end":1083,"column_start":5,"column_end":13},"name":"Constant","qualname":"::Expression::Constant","value":"Expression::Constant(Handle<Constant>)","parent":{"krate":0,"index":6756},"children":[],"decl_id":null,"docs":" Constant value.","sig":null,"attributes":[{"value":"/ Constant value.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":36179,"byte_end":36198,"line_start":1080,"line_end":1080,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":36203,"byte_end":36206,"line_start":1081,"line_end":1081,"column_start":5,"column_end":8}},{"value":"/ Every `Constant` expression","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":36211,"byte_end":36242,"line_start":1082,"line_end":1082,"column_start":5,"column_end":36}}]},{"kind":"StructVariant","id":{"krate":0,"index":6766},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":36315,"byte_end":36320,"line_start":1085,"line_end":1085,"column_start":5,"column_end":10},"name":"Splat","qualname":"::Expression::Splat","value":"Expression::Splat { size, value }","parent":{"krate":0,"index":6756},"children":[],"decl_id":null,"docs":" Splat scalar into a vector.\n","sig":null,"attributes":[{"value":"/ Splat scalar into a vector.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":36279,"byte_end":36310,"line_start":1084,"line_end":1084,"column_start":5,"column_end":36}}]},{"kind":"StructVariant","id":{"krate":0,"index":6769},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":36419,"byte_end":36426,"line_start":1090,"line_end":1090,"column_start":5,"column_end":12},"name":"Swizzle","qualname":"::Expression::Swizzle","value":"Expression::Swizzle { size, vector, pattern }","parent":{"krate":0,"index":6756},"children":[],"decl_id":null,"docs":" Vector swizzle.\n","sig":null,"attributes":[{"value":"/ Vector swizzle.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":36395,"byte_end":36414,"line_start":1089,"line_end":1089,"column_start":5,"column_end":24}}]},{"kind":"StructVariant","id":{"krate":0,"index":6774},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":36572,"byte_end":36579,"line_start":1096,"line_end":1096,"column_start":5,"column_end":12},"name":"Compose","qualname":"::Expression::Compose","value":"Expression::Compose { ty, components }","parent":{"krate":0,"index":6756},"children":[],"decl_id":null,"docs":" Composite expression.\n","sig":null,"attributes":[{"value":"/ Composite expression.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":36542,"byte_end":36567,"line_start":1095,"line_end":1095,"column_start":5,"column_end":30}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6777},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":37019,"byte_end":37035,"line_start":1109,"line_end":1109,"column_start":5,"column_end":21},"name":"FunctionArgument","qualname":"::Expression::FunctionArgument","value":"Expression::FunctionArgument(u32)","parent":{"krate":0,"index":6756},"children":[],"decl_id":null,"docs":" Reference a function parameter, by its index.","sig":null,"attributes":[{"value":"/ Reference a function parameter, by its index.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":36665,"byte_end":36714,"line_start":1101,"line_end":1101,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":36719,"byte_end":36722,"line_start":1102,"line_end":1102,"column_start":5,"column_end":8}},{"value":"/ A `FunctionArgument` expression evaluates to a pointer to the argument's","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":36727,"byte_end":36803,"line_start":1103,"line_end":1103,"column_start":5,"column_end":81}},{"value":"/ value. You must use a [`Load`] expression to retrieve its value, or a","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":36808,"byte_end":36881,"line_start":1104,"line_end":1104,"column_start":5,"column_end":78}},{"value":"/ [`Store`] statement to assign it a new value.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":36886,"byte_end":36935,"line_start":1105,"line_end":1105,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":36940,"byte_end":36943,"line_start":1106,"line_end":1106,"column_start":5,"column_end":8}},{"value":"/ [`Load`]: Expression::Load","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":36948,"byte_end":36978,"line_start":1107,"line_end":1107,"column_start":5,"column_end":35}},{"value":"/ [`Store`]: Statement::Store","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":36983,"byte_end":37014,"line_start":1108,"line_end":1108,"column_start":5,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6780},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":37719,"byte_end":37733,"line_start":1125,"line_end":1125,"column_start":5,"column_end":19},"name":"GlobalVariable","qualname":"::Expression::GlobalVariable","value":"Expression::GlobalVariable(Handle<GlobalVariable>)","parent":{"krate":0,"index":6756},"children":[],"decl_id":null,"docs":" Reference a global variable.","sig":null,"attributes":[{"value":"/ Reference a global variable.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":37047,"byte_end":37079,"line_start":1111,"line_end":1111,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":37084,"byte_end":37087,"line_start":1112,"line_end":1112,"column_start":5,"column_end":8}},{"value":"/ If the given `GlobalVariable`'s [`class`] is [`StorageClass::Handle`],","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":37092,"byte_end":37166,"line_start":1113,"line_end":1113,"column_start":5,"column_end":79}},{"value":"/ then the variable stores some opaque type like a sampler or an image,","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":37171,"byte_end":37244,"line_start":1114,"line_end":1114,"column_start":5,"column_end":78}},{"value":"/ and a `GlobalVariable` expression referring to it produces the","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":37249,"byte_end":37315,"line_start":1115,"line_end":1115,"column_start":5,"column_end":71}},{"value":"/ variable's value directly.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":37320,"byte_end":37350,"line_start":1116,"line_end":1116,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":37355,"byte_end":37358,"line_start":1117,"line_end":1117,"column_start":5,"column_end":8}},{"value":"/ For any other storage class, a `GlobalVariable` expression produces a","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":37363,"byte_end":37436,"line_start":1118,"line_end":1118,"column_start":5,"column_end":78}},{"value":"/ pointer to the variable's value. You must use a [`Load`] expression to","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":37441,"byte_end":37515,"line_start":1119,"line_end":1119,"column_start":5,"column_end":79}},{"value":"/ retrieve its value, or a [`Store`] statement to assign it a new value.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":37520,"byte_end":37594,"line_start":1120,"line_end":1120,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":37599,"byte_end":37602,"line_start":1121,"line_end":1121,"column_start":5,"column_end":8}},{"value":"/ [`class`]: GlobalVariable::class","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":37607,"byte_end":37643,"line_start":1122,"line_end":1122,"column_start":5,"column_end":41}},{"value":"/ [`Load`]: Expression::Load","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":37648,"byte_end":37678,"line_start":1123,"line_end":1123,"column_start":5,"column_end":35}},{"value":"/ [`Store`]: Statement::Store","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":37683,"byte_end":37714,"line_start":1124,"line_end":1124,"column_start":5,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6783},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":38054,"byte_end":38067,"line_start":1132,"line_end":1132,"column_start":5,"column_end":18},"name":"LocalVariable","qualname":"::Expression::LocalVariable","value":"Expression::LocalVariable(Handle<LocalVariable>)","parent":{"krate":0,"index":6756},"children":[],"decl_id":null,"docs":" Reference a local variable.","sig":null,"attributes":[{"value":"/ Reference a local variable.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":37764,"byte_end":37795,"line_start":1127,"line_end":1127,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":37800,"byte_end":37803,"line_start":1128,"line_end":1128,"column_start":5,"column_end":8}},{"value":"/ A `LocalVariable` expression evaluates to a pointer to the variable's value.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":37808,"byte_end":37888,"line_start":1129,"line_end":1129,"column_start":5,"column_end":85}},{"value":"/ You must use a [`Load`](Expression::Load) expression to retrieve its value,","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":37893,"byte_end":37972,"line_start":1130,"line_end":1130,"column_start":5,"column_end":84}},{"value":"/ or a [`Store`](Statement::Store) statement to assign it a new value.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":37977,"byte_end":38049,"line_start":1131,"line_end":1131,"column_start":5,"column_end":77}}]},{"kind":"StructVariant","id":{"krate":0,"index":6786},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":38274,"byte_end":38278,"line_start":1138,"line_end":1138,"column_start":5,"column_end":9},"name":"Load","qualname":"::Expression::Load","value":"Expression::Load { pointer }","parent":{"krate":0,"index":6756},"children":[],"decl_id":null,"docs":" Load a value indirectly.","sig":null,"attributes":[{"value":"/ Load a value indirectly.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":38097,"byte_end":38125,"line_start":1134,"line_end":1134,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":38130,"byte_end":38133,"line_start":1135,"line_end":1135,"column_start":5,"column_end":8}},{"value":"/ For [`TypeInner::Atomic`] the result is a corresponding scalar.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":38138,"byte_end":38205,"line_start":1136,"line_end":1136,"column_start":5,"column_end":72}},{"value":"/ For other types behind the pointer<T>, the result is T.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":38210,"byte_end":38269,"line_start":1137,"line_end":1137,"column_start":5,"column_end":64}}]},{"kind":"StructVariant","id":{"krate":0,"index":6788},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":38372,"byte_end":38383,"line_start":1140,"line_end":1140,"column_start":5,"column_end":16},"name":"ImageSample","qualname":"::Expression::ImageSample","value":"Expression::ImageSample { image, sampler, coordinate, array_index, offset, level, depth_ref }","parent":{"krate":0,"index":6756},"children":[],"decl_id":null,"docs":" Sample a point from a sampled or a depth image.\n","sig":null,"attributes":[{"value":"/ Sample a point from a sampled or a depth image.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":38316,"byte_end":38367,"line_start":1139,"line_end":1139,"column_start":5,"column_end":56}}]},{"kind":"StructVariant","id":{"krate":0,"index":6796},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":39343,"byte_end":39352,"line_start":1165,"line_end":1165,"column_start":5,"column_end":14},"name":"ImageLoad","qualname":"::Expression::ImageLoad","value":"Expression::ImageLoad { image, coordinate, array_index, index }","parent":{"krate":0,"index":6756},"children":[],"decl_id":null,"docs":" Load a texel from an image.","sig":null,"attributes":[{"value":"/ Load a texel from an image.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":38676,"byte_end":38707,"line_start":1150,"line_end":1150,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":38712,"byte_end":38715,"line_start":1151,"line_end":1151,"column_start":5,"column_end":8}},{"value":"/ For most images, this returns a four-element vector of the same","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":38720,"byte_end":38787,"line_start":1152,"line_end":1152,"column_start":5,"column_end":72}},{"value":"/ [`ScalarKind`] as the image. If the format of the image does not have","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":38792,"byte_end":38865,"line_start":1153,"line_end":1153,"column_start":5,"column_end":78}},{"value":"/ four components, default values are provided: the first three components","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":38870,"byte_end":38946,"line_start":1154,"line_end":1154,"column_start":5,"column_end":81}},{"value":"/ (typically R, G, and B) default to zero, and the final component","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":38951,"byte_end":39019,"line_start":1155,"line_end":1155,"column_start":5,"column_end":73}},{"value":"/ (typically alpha) defaults to one.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":39024,"byte_end":39062,"line_start":1156,"line_end":1156,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":39067,"byte_end":39070,"line_start":1157,"line_end":1157,"column_start":5,"column_end":8}},{"value":"/ However, if the image's [`class`] is [`Depth`], then this returns a","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":39075,"byte_end":39146,"line_start":1158,"line_end":1158,"column_start":5,"column_end":76}},{"value":"/ [`Float`] scalar value.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":39151,"byte_end":39178,"line_start":1159,"line_end":1159,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":39183,"byte_end":39186,"line_start":1160,"line_end":1160,"column_start":5,"column_end":8}},{"value":"/ [`ScalarKind`]: ScalarKind","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":39191,"byte_end":39221,"line_start":1161,"line_end":1161,"column_start":5,"column_end":35}},{"value":"/ [`class`]: TypeInner::Image::class","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":39226,"byte_end":39264,"line_start":1162,"line_end":1162,"column_start":5,"column_end":43}},{"value":"/ [`Depth`]: ImageClass::Depth","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":39269,"byte_end":39301,"line_start":1163,"line_end":1163,"column_start":5,"column_end":37}},{"value":"/ [`Float`]: ScalarKind::Float","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":39306,"byte_end":39338,"line_start":1164,"line_end":1164,"column_start":5,"column_end":37}}]},{"kind":"StructVariant","id":{"krate":0,"index":6801},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":42402,"byte_end":42412,"line_start":1232,"line_end":1232,"column_start":5,"column_end":15},"name":"ImageQuery","qualname":"::Expression::ImageQuery","value":"Expression::ImageQuery { image, query }","parent":{"krate":0,"index":6756},"children":[],"decl_id":null,"docs":" Query information from an image.\n","sig":null,"attributes":[{"value":"/ Query information from an image.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":42361,"byte_end":42397,"line_start":1231,"line_end":1231,"column_start":5,"column_end":41}}]},{"kind":"StructVariant","id":{"krate":0,"index":6804},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":42521,"byte_end":42526,"line_start":1237,"line_end":1237,"column_start":5,"column_end":10},"name":"Unary","qualname":"::Expression::Unary","value":"Expression::Unary { op, expr }","parent":{"krate":0,"index":6756},"children":[],"decl_id":null,"docs":" Apply an unary operator.\n","sig":null,"attributes":[{"value":"/ Apply an unary operator.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":42488,"byte_end":42516,"line_start":1236,"line_end":1236,"column_start":5,"column_end":33}}]},{"kind":"StructVariant","id":{"krate":0,"index":6807},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":42634,"byte_end":42640,"line_start":1242,"line_end":1242,"column_start":5,"column_end":11},"name":"Binary","qualname":"::Expression::Binary","value":"Expression::Binary { op, left, right }","parent":{"krate":0,"index":6756},"children":[],"decl_id":null,"docs":" Apply a binary operator.\n","sig":null,"attributes":[{"value":"/ Apply a binary operator.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":42601,"byte_end":42629,"line_start":1241,"line_end":1241,"column_start":5,"column_end":33}}]},{"kind":"StructVariant","id":{"krate":0,"index":6811},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":42949,"byte_end":42955,"line_start":1251,"line_end":1251,"column_start":5,"column_end":11},"name":"Select","qualname":"::Expression::Select","value":"Expression::Select { condition, accept, reject }","parent":{"krate":0,"index":6756},"children":[],"decl_id":null,"docs":" Select between two values based on a condition.","sig":null,"attributes":[{"value":"/ Select between two values based on a condition.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":42751,"byte_end":42802,"line_start":1247,"line_end":1247,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":42807,"byte_end":42810,"line_start":1248,"line_end":1248,"column_start":5,"column_end":8}},{"value":"/ Note that, because expressions have no side effects, it is unobservable","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":42815,"byte_end":42890,"line_start":1249,"line_end":1249,"column_start":5,"column_end":80}},{"value":"/ whether the non-selected branch is evaluated.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":42895,"byte_end":42944,"line_start":1250,"line_end":1250,"column_start":5,"column_end":54}}]},{"kind":"StructVariant","id":{"krate":0,"index":6815},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":43154,"byte_end":43164,"line_start":1258,"line_end":1258,"column_start":5,"column_end":15},"name":"Derivative","qualname":"::Expression::Derivative","value":"Expression::Derivative { axis, expr }","parent":{"krate":0,"index":6756},"children":[],"decl_id":null,"docs":" Compute the derivative on an axis.\n","sig":null,"attributes":[{"value":"/ Compute the derivative on an axis.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":43111,"byte_end":43149,"line_start":1257,"line_end":1257,"column_start":5,"column_end":43}}]},{"kind":"StructVariant","id":{"krate":0,"index":6818},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":43298,"byte_end":43308,"line_start":1264,"line_end":1264,"column_start":5,"column_end":15},"name":"Relational","qualname":"::Expression::Relational","value":"Expression::Relational { fun, argument }","parent":{"krate":0,"index":6756},"children":[],"decl_id":null,"docs":" Call a relational function.\n","sig":null,"attributes":[{"value":"/ Call a relational function.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":43262,"byte_end":43293,"line_start":1263,"line_end":1263,"column_start":5,"column_end":36}}]},{"kind":"StructVariant","id":{"krate":0,"index":6821},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":43422,"byte_end":43426,"line_start":1269,"line_end":1269,"column_start":5,"column_end":9},"name":"Math","qualname":"::Expression::Math","value":"Expression::Math { fun, arg, arg1, arg2, arg3 }","parent":{"krate":0,"index":6756},"children":[],"decl_id":null,"docs":" Call a math function\n","sig":null,"attributes":[{"value":"/ Call a math function","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":43393,"byte_end":43417,"line_start":1268,"line_end":1268,"column_start":5,"column_end":29}}]},{"kind":"StructVariant","id":{"krate":0,"index":6827},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":43670,"byte_end":43672,"line_start":1277,"line_end":1277,"column_start":5,"column_end":7},"name":"As","qualname":"::Expression::As","value":"Expression::As { expr, kind, convert }","parent":{"krate":0,"index":6756},"children":[],"decl_id":null,"docs":" Cast a simple type to another kind.\n","sig":null,"attributes":[{"value":"/ Cast a simple type to another kind.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":43626,"byte_end":43665,"line_start":1276,"line_end":1276,"column_start":5,"column_end":44}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6831},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":44020,"byte_end":44030,"line_start":1287,"line_end":1287,"column_start":5,"column_end":15},"name":"CallResult","qualname":"::Expression::CallResult","value":"Expression::CallResult(Handle<Function>)","parent":{"krate":0,"index":6756},"children":[],"decl_id":null,"docs":" Result of calling another function.\n","sig":null,"attributes":[{"value":"/ Result of calling another function.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":43976,"byte_end":44015,"line_start":1286,"line_end":1286,"column_start":5,"column_end":44}}]},{"kind":"StructVariant","id":{"krate":0,"index":6834},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":44093,"byte_end":44105,"line_start":1289,"line_end":1289,"column_start":5,"column_end":17},"name":"AtomicResult","qualname":"::Expression::AtomicResult","value":"Expression::AtomicResult { kind, width, comparison }","parent":{"krate":0,"index":6756},"children":[],"decl_id":null,"docs":" Result of an atomic operation.\n","sig":null,"attributes":[{"value":"/ Result of an atomic operation.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":44054,"byte_end":44088,"line_start":1288,"line_end":1288,"column_start":5,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6838},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":44489,"byte_end":44500,"line_start":1299,"line_end":1299,"column_start":5,"column_end":16},"name":"ArrayLength","qualname":"::Expression::ArrayLength","value":"Expression::ArrayLength(Handle<Expression>)","parent":{"krate":0,"index":6756},"children":[],"decl_id":null,"docs":" Get the length of an array.\n The expression must resolve to a pointer to an array with a dynamic size.","sig":null,"attributes":[{"value":"/ Get the length of an array.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":44193,"byte_end":44224,"line_start":1294,"line_end":1294,"column_start":5,"column_end":36}},{"value":"/ The expression must resolve to a pointer to an array with a dynamic size.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":44229,"byte_end":44306,"line_start":1295,"line_end":1295,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":44311,"byte_end":44314,"line_start":1296,"line_end":1296,"column_start":5,"column_end":8}},{"value":"/ This doesn't match the semantics of spirv's `OpArrayLength`, which must be passed","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":44319,"byte_end":44404,"line_start":1297,"line_end":1297,"column_start":5,"column_end":90}},{"value":"/ a pointer to a structure containing a runtime array in its' last field.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":44409,"byte_end":44484,"line_start":1298,"line_end":1298,"column_start":5,"column_end":80}}]},{"kind":"Enum","id":{"krate":0,"index":6756},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":33705,"byte_end":33715,"line_start":1024,"line_end":1024,"column_start":10,"column_end":20},"name":"Expression","qualname":"::Expression","value":"pub enum Expression {\n    Access {\n        base: Handle<Expression>,\n        index: Handle<Expression>,\n    },\n    AccessIndex {\n        base: Handle<Expression>,\n        index: u32,\n    },\n    Constant(Handle<Constant>),\n    Splat {\n        size: VectorSize,\n        value: Handle<Expression>,\n    },\n    Swizzle {\n        size: VectorSize,\n        vector: Handle<Expression>,\n        pattern: [SwizzleComponent; ],\n    },\n    Compose {\n        ty: Handle<Type>,\n        components: Vec<Handle<Expression>>,\n    },\n    FunctionArgument(u32),\n    GlobalVariable(Handle<GlobalVariable>),\n    LocalVariable(Handle<LocalVariable>),\n    Load {\n        pointer: Handle<Expression>,\n    },\n    ImageSample {\n        image: Handle<Expression>,\n        sampler: Handle<Expression>,\n        coordinate: Handle<Expression>,\n        array_index: Option<Handle<Expression>>,\n        offset: Option<Handle<Constant>>,\n        level: SampleLevel,\n        depth_ref: Option<Handle<Expression>>,\n    },\n    ImageLoad {\n        image: Handle<Expression>,\n        coordinate: Handle<Expression>,\n        array_index: Option<Handle<Expression>>,\n        index: Option<Handle<Expression>>,\n    },\n    ImageQuery {\n        image: Handle<Expression>,\n        query: ImageQuery,\n    },\n    Unary {\n        op: UnaryOperator,\n        expr: Handle<Expression>,\n    },\n    Binary {\n        op: BinaryOperator,\n        left: Handle<Expression>,\n        right: Handle<Expression>,\n    },\n    Select {\n        condition: Handle<Expression>,\n        accept: Handle<Expression>,\n        reject: Handle<Expression>,\n    },\n    Derivative {\n        axis: DerivativeAxis,\n        expr: Handle<Expression>,\n    },\n    Relational {\n        fun: RelationalFunction,\n        argument: Handle<Expression>,\n    },\n    Math {\n        fun: MathFunction,\n        arg: Handle<Expression>,\n        arg1: Option<Handle<Expression>>,\n        arg2: Option<Handle<Expression>>,\n        arg3: Option<Handle<Expression>>,\n    },\n    As {\n        expr: Handle<Expression>,\n        kind: ScalarKind,\n        convert: Option<Bytes>,\n    },\n    CallResult(Handle<Function>),\n    AtomicResult {\n        kind: ScalarKind,\n        width: Bytes,\n        comparison: bool,\n    },\n    ArrayLength(Handle<Expression>),\n}","parent":null,"children":[{"krate":0,"index":6757},{"krate":0,"index":6760},{"krate":0,"index":6763},{"krate":0,"index":6766},{"krate":0,"index":6769},{"krate":0,"index":6774},{"krate":0,"index":6777},{"krate":0,"index":6780},{"krate":0,"index":6783},{"krate":0,"index":6786},{"krate":0,"index":6788},{"krate":0,"index":6796},{"krate":0,"index":6801},{"krate":0,"index":6804},{"krate":0,"index":6807},{"krate":0,"index":6811},{"krate":0,"index":6815},{"krate":0,"index":6818},{"krate":0,"index":6821},{"krate":0,"index":6827},{"krate":0,"index":6831},{"krate":0,"index":6834},{"krate":0,"index":6838}],"decl_id":null,"docs":" An expression that can be evaluated to obtain a value.","sig":null,"attributes":[{"value":"/ An expression that can be evaluated to obtain a value.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":33389,"byte_end":33447,"line_start":1017,"line_end":1017,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":33448,"byte_end":33451,"line_start":1018,"line_end":1018,"column_start":1,"column_end":4}},{"value":"/ This is a Single Static Assignment (SSA) scheme similar to SPIR-V.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":33452,"byte_end":33522,"line_start":1019,"line_end":1019,"column_start":1,"column_end":71}}]},{"kind":"Struct","id":{"krate":0,"index":6845},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":44806,"byte_end":44816,"line_start":1309,"line_end":1309,"column_start":12,"column_end":22},"name":"SwitchCase","qualname":"::SwitchCase","value":"SwitchCase { value, body, fall_through }","parent":null,"children":[{"krate":0,"index":6846},{"krate":0,"index":6847},{"krate":0,"index":6848}],"decl_id":null,"docs":" A case for a switch statement.\n","sig":null,"attributes":[{"value":"/ A case for a switch statement.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":44548,"byte_end":44582,"line_start":1304,"line_end":1304,"column_start":1,"column_end":35}}]},{"kind":"Field","id":{"krate":0,"index":6846},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":44882,"byte_end":44887,"line_start":1311,"line_end":1311,"column_start":9,"column_end":14},"name":"value","qualname":"::SwitchCase::value","value":"i32","parent":{"krate":0,"index":6845},"children":[],"decl_id":null,"docs":" Value, upon which the case is considered true.\n","sig":null,"attributes":[{"value":"/ Value, upon which the case is considered true.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":44823,"byte_end":44873,"line_start":1310,"line_end":1310,"column_start":5,"column_end":55}}]},{"kind":"Field","id":{"krate":0,"index":6847},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":44928,"byte_end":44932,"line_start":1313,"line_end":1313,"column_start":9,"column_end":13},"name":"body","qualname":"::SwitchCase::body","value":"block::Block","parent":{"krate":0,"index":6845},"children":[],"decl_id":null,"docs":" Body of the case.\n","sig":null,"attributes":[{"value":"/ Body of the case.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":44898,"byte_end":44919,"line_start":1312,"line_end":1312,"column_start":5,"column_end":26}}]},{"kind":"Field","id":{"krate":0,"index":6848},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":45043,"byte_end":45055,"line_start":1316,"line_end":1316,"column_start":9,"column_end":21},"name":"fall_through","qualname":"::SwitchCase::fall_through","value":"bool","parent":{"krate":0,"index":6845},"children":[],"decl_id":null,"docs":" If true, the control flow continues to the next case in the list,\n or default.\n","sig":null,"attributes":[{"value":"/ If true, the control flow continues to the next case in the list,","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":44945,"byte_end":45014,"line_start":1314,"line_end":1314,"column_start":5,"column_end":74}},{"value":"/ or default.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":45019,"byte_end":45034,"line_start":1315,"line_end":1315,"column_start":5,"column_end":20}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6854},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":45664,"byte_end":45668,"line_start":1331,"line_end":1331,"column_start":5,"column_end":9},"name":"Emit","qualname":"::Statement::Emit","value":"Statement::Emit(Range<Expression>)","parent":{"krate":0,"index":6853},"children":[],"decl_id":null,"docs":" Emit a range of expressions, visible to all statements that follow in this block.","sig":null,"attributes":[{"value":"/ Emit a range of expressions, visible to all statements that follow in this block.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":45440,"byte_end":45525,"line_start":1326,"line_end":1326,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":45530,"byte_end":45533,"line_start":1327,"line_end":1327,"column_start":5,"column_end":8}},{"value":"/ See the [module-level documentation][emit] for details.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":45538,"byte_end":45597,"line_start":1328,"line_end":1328,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":45602,"byte_end":45605,"line_start":1329,"line_end":1329,"column_start":5,"column_end":8}},{"value":"/ [emit]: index.html#expression-evaluation-time","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":45610,"byte_end":45659,"line_start":1330,"line_end":1330,"column_start":5,"column_end":54}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6857},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":45766,"byte_end":45771,"line_start":1333,"line_end":1333,"column_start":5,"column_end":10},"name":"Block","qualname":"::Statement::Block","value":"Statement::Block(Block)","parent":{"krate":0,"index":6853},"children":[],"decl_id":null,"docs":" A block containing more statements, to be executed sequentially.\n","sig":null,"attributes":[{"value":"/ A block containing more statements, to be executed sequentially.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":45693,"byte_end":45761,"line_start":1332,"line_end":1332,"column_start":5,"column_end":73}}]},{"kind":"StructVariant","id":{"krate":0,"index":6860},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":45871,"byte_end":45873,"line_start":1335,"line_end":1335,"column_start":5,"column_end":7},"name":"If","qualname":"::Statement::If","value":"Statement::If { condition, accept, reject }","parent":{"krate":0,"index":6853},"children":[],"decl_id":null,"docs":" Conditionally executes one of two blocks, based on the value of the condition.\n","sig":null,"attributes":[{"value":"/ Conditionally executes one of two blocks, based on the value of the condition.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":45784,"byte_end":45866,"line_start":1334,"line_end":1334,"column_start":5,"column_end":87}}]},{"kind":"StructVariant","id":{"krate":0,"index":6864},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":46070,"byte_end":46076,"line_start":1341,"line_end":1341,"column_start":5,"column_end":11},"name":"Switch","qualname":"::Statement::Switch","value":"Statement::Switch { selector, cases, default }","parent":{"krate":0,"index":6853},"children":[],"decl_id":null,"docs":" Conditionally executes one of multiple blocks, based on the value of the selector.\n","sig":null,"attributes":[{"value":"/ Conditionally executes one of multiple blocks, based on the value of the selector.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":45979,"byte_end":46065,"line_start":1340,"line_end":1340,"column_start":5,"column_end":91}}]},{"kind":"StructVariant","id":{"krate":0,"index":6868},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":47183,"byte_end":47187,"line_start":1368,"line_end":1368,"column_start":5,"column_end":9},"name":"Loop","qualname":"::Statement::Loop","value":"Statement::Loop { body, continuing }","parent":{"krate":0,"index":6853},"children":[],"decl_id":null,"docs":" Executes a block repeatedly.","sig":null,"attributes":[{"value":"/ Executes a block repeatedly.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":46191,"byte_end":46223,"line_start":1347,"line_end":1347,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":46228,"byte_end":46231,"line_start":1348,"line_end":1348,"column_start":5,"column_end":8}},{"value":"/ Each iteration of the loop executes the `body` block, followed by the","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":46236,"byte_end":46309,"line_start":1349,"line_end":1349,"column_start":5,"column_end":78}},{"value":"/ `continuing` block.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":46314,"byte_end":46337,"line_start":1350,"line_end":1350,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":46342,"byte_end":46345,"line_start":1351,"line_end":1351,"column_start":5,"column_end":8}},{"value":"/ Executing a [`Break`], [`Return`] or [`Kill`] statement exits the loop.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":46350,"byte_end":46425,"line_start":1352,"line_end":1352,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":46430,"byte_end":46433,"line_start":1353,"line_end":1353,"column_start":5,"column_end":8}},{"value":"/ A [`Continue`] statement in `body` jumps to the `continuing` block. The","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":46438,"byte_end":46513,"line_start":1354,"line_end":1354,"column_start":5,"column_end":80}},{"value":"/ `continuing` block is meant to be used to represent structures like the","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":46518,"byte_end":46593,"line_start":1355,"line_end":1355,"column_start":5,"column_end":80}},{"value":"/ third expression of a C-style `for` loop head, to which `continue`","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":46598,"byte_end":46668,"line_start":1356,"line_end":1356,"column_start":5,"column_end":75}},{"value":"/ statements in the loop's body jump.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":46673,"byte_end":46712,"line_start":1357,"line_end":1357,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":46717,"byte_end":46720,"line_start":1358,"line_end":1358,"column_start":5,"column_end":8}},{"value":"/ The `continuing` block and its substatements must not contain `Return`","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":46725,"byte_end":46799,"line_start":1359,"line_end":1359,"column_start":5,"column_end":79}},{"value":"/ or `Kill` statements, or any `Break` or `Continue` statements targeting","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":46804,"byte_end":46879,"line_start":1360,"line_end":1360,"column_start":5,"column_end":80}},{"value":"/ this loop. (It may have `Break` and `Continue` statements targeting","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":46884,"byte_end":46955,"line_start":1361,"line_end":1361,"column_start":5,"column_end":76}},{"value":"/ loops or switches nested within the `continuing` block.)","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":46960,"byte_end":47020,"line_start":1362,"line_end":1362,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":47025,"byte_end":47028,"line_start":1363,"line_end":1363,"column_start":5,"column_end":8}},{"value":"/ [`Break`]: Statement::Break","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":47033,"byte_end":47064,"line_start":1364,"line_end":1364,"column_start":5,"column_end":36}},{"value":"/ [`Continue`]: Statement::Continue","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":47069,"byte_end":47106,"line_start":1365,"line_end":1365,"column_start":5,"column_end":42}},{"value":"/ [`Kill`]: Statement::Kill","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":47111,"byte_end":47140,"line_start":1366,"line_end":1366,"column_start":5,"column_end":34}},{"value":"/ [`Return`]: Statement::Return","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":47145,"byte_end":47178,"line_start":1367,"line_end":1367,"column_start":5,"column_end":38}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6871},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":47560,"byte_end":47565,"line_start":1378,"line_end":1378,"column_start":5,"column_end":10},"name":"Break","qualname":"::Statement::Break","value":"Statement::Break","parent":{"krate":0,"index":6853},"children":[],"decl_id":null,"docs":" Exits the innermost enclosing [`Loop`] or [`Switch`].","sig":null,"attributes":[{"value":"/ Exits the innermost enclosing [`Loop`] or [`Switch`].","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":47229,"byte_end":47286,"line_start":1370,"line_end":1370,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":47291,"byte_end":47294,"line_start":1371,"line_end":1371,"column_start":5,"column_end":8}},{"value":"/ A `Break` statement may only appear within a [`Loop`] or [`Switch`]","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":47299,"byte_end":47370,"line_start":1372,"line_end":1372,"column_start":5,"column_end":76}},{"value":"/ statement. It may not break out of a [`Loop`] from within the loop's","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":47375,"byte_end":47447,"line_start":1373,"line_end":1373,"column_start":5,"column_end":77}},{"value":"/ `continuing` block.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":47452,"byte_end":47475,"line_start":1374,"line_end":1374,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":47480,"byte_end":47483,"line_start":1375,"line_end":1375,"column_start":5,"column_end":8}},{"value":"/ [`Loop`]: Statement::Loop","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":47488,"byte_end":47517,"line_start":1376,"line_end":1376,"column_start":5,"column_end":34}},{"value":"/ [`Switch`]: Statement::Switch","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":47522,"byte_end":47555,"line_start":1377,"line_end":1377,"column_start":5,"column_end":38}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6873},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":47891,"byte_end":47899,"line_start":1387,"line_end":1387,"column_start":5,"column_end":13},"name":"Continue","qualname":"::Statement::Continue","value":"Statement::Continue","parent":{"krate":0,"index":6853},"children":[],"decl_id":null,"docs":" Skips to the `continuing` block of the innermost enclosing [`Loop`].","sig":null,"attributes":[{"value":"/ Skips to the `continuing` block of the innermost enclosing [`Loop`].","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":47572,"byte_end":47644,"line_start":1380,"line_end":1380,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":47649,"byte_end":47652,"line_start":1381,"line_end":1381,"column_start":5,"column_end":8}},{"value":"/ A `Continue` statement may only appear within the `body` block of the","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":47657,"byte_end":47730,"line_start":1382,"line_end":1382,"column_start":5,"column_end":78}},{"value":"/ innermost enclosing [`Loop`] statement. It must not appear within that","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":47735,"byte_end":47809,"line_start":1383,"line_end":1383,"column_start":5,"column_end":79}},{"value":"/ loop's `continuing` block.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":47814,"byte_end":47844,"line_start":1384,"line_end":1384,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":47849,"byte_end":47852,"line_start":1385,"line_end":1385,"column_start":5,"column_end":8}},{"value":"/ [`Loop`]: Statement::Loop","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":47857,"byte_end":47886,"line_start":1386,"line_end":1386,"column_start":5,"column_end":34}}]},{"kind":"StructVariant","id":{"krate":0,"index":6875},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":48120,"byte_end":48126,"line_start":1395,"line_end":1395,"column_start":5,"column_end":11},"name":"Return","qualname":"::Statement::Return","value":"Statement::Return { value }","parent":{"krate":0,"index":6853},"children":[],"decl_id":null,"docs":" Returns from the function (possibly with a value).","sig":null,"attributes":[{"value":"/ Returns from the function (possibly with a value).","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":47906,"byte_end":47960,"line_start":1389,"line_end":1389,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":47965,"byte_end":47968,"line_start":1390,"line_end":1390,"column_start":5,"column_end":8}},{"value":"/ `Return` statements are forbidden within the `continuing` block of a","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":47973,"byte_end":48045,"line_start":1391,"line_end":1391,"column_start":5,"column_end":77}},{"value":"/ [`Loop`] statement.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":48050,"byte_end":48073,"line_start":1392,"line_end":1392,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":48078,"byte_end":48081,"line_start":1393,"line_end":1393,"column_start":5,"column_end":8}},{"value":"/ [`Loop`]: Statement::Loop","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":48086,"byte_end":48115,"line_start":1394,"line_end":1394,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6877},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":48369,"byte_end":48373,"line_start":1403,"line_end":1403,"column_start":5,"column_end":9},"name":"Kill","qualname":"::Statement::Kill","value":"Statement::Kill","parent":{"krate":0,"index":6853},"children":[],"decl_id":null,"docs":" Aborts the current shader execution.","sig":null,"attributes":[{"value":"/ Aborts the current shader execution.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":48171,"byte_end":48211,"line_start":1397,"line_end":1397,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":48216,"byte_end":48219,"line_start":1398,"line_end":1398,"column_start":5,"column_end":8}},{"value":"/ `Kill` statements are forbidden within the `continuing` block of a","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":48224,"byte_end":48294,"line_start":1399,"line_end":1399,"column_start":5,"column_end":75}},{"value":"/ [`Loop`] statement.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":48299,"byte_end":48322,"line_start":1400,"line_end":1400,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":48327,"byte_end":48330,"line_start":1401,"line_end":1401,"column_start":5,"column_end":8}},{"value":"/ [`Loop`]: Statement::Loop","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":48335,"byte_end":48364,"line_start":1402,"line_end":1402,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6879},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":48577,"byte_end":48584,"line_start":1408,"line_end":1408,"column_start":5,"column_end":12},"name":"Barrier","qualname":"::Statement::Barrier","value":"Statement::Barrier(Barrier)","parent":{"krate":0,"index":6853},"children":[],"decl_id":null,"docs":" Synchronize invocations within the work group.\n The `Barrier` flags control which memory accesses should be synchronized.\n If empty, this becomes purely an execution barrier.\n","sig":null,"attributes":[{"value":"/ Synchronize invocations within the work group.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":48380,"byte_end":48430,"line_start":1405,"line_end":1405,"column_start":5,"column_end":55}},{"value":"/ The `Barrier` flags control which memory accesses should be synchronized.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":48435,"byte_end":48512,"line_start":1406,"line_end":1406,"column_start":5,"column_end":82}},{"value":"/ If empty, this becomes purely an execution barrier.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":48517,"byte_end":48572,"line_start":1407,"line_end":1407,"column_start":5,"column_end":60}}]},{"kind":"StructVariant","id":{"krate":0,"index":6882},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":49045,"byte_end":49050,"line_start":1419,"line_end":1419,"column_start":5,"column_end":10},"name":"Store","qualname":"::Statement::Store","value":"Statement::Store { pointer, value }","parent":{"krate":0,"index":6853},"children":[],"decl_id":null,"docs":" Stores a value at an address.","sig":null,"attributes":[{"value":"/ Stores a value at an address.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":48599,"byte_end":48632,"line_start":1409,"line_end":1409,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":48637,"byte_end":48640,"line_start":1410,"line_end":1410,"column_start":5,"column_end":8}},{"value":"/ For [`TypeInner::Atomic`] type behind the pointer, the value","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":48645,"byte_end":48709,"line_start":1411,"line_end":1411,"column_start":5,"column_end":69}},{"value":"/ has to be a corresponding scalar.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":48714,"byte_end":48751,"line_start":1412,"line_end":1412,"column_start":5,"column_end":42}},{"value":"/ For other types behind the pointer<T>, the value is T.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":48756,"byte_end":48814,"line_start":1413,"line_end":1413,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":48819,"byte_end":48822,"line_start":1414,"line_end":1414,"column_start":5,"column_end":8}},{"value":"/ This statement is a barrier for any operations on the","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":48827,"byte_end":48884,"line_start":1415,"line_end":1415,"column_start":5,"column_end":62}},{"value":"/ `Expression::LocalVariable` or `Expression::GlobalVariable`","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":48889,"byte_end":48952,"line_start":1416,"line_end":1416,"column_start":5,"column_end":68}},{"value":"/ that is the destination of an access chain, started","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":48957,"byte_end":49012,"line_start":1417,"line_end":1417,"column_start":5,"column_end":60}},{"value":"/ from the `pointer`.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":49017,"byte_end":49040,"line_start":1418,"line_end":1418,"column_start":5,"column_end":28}}]},{"kind":"StructVariant","id":{"krate":0,"index":6885},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":49688,"byte_end":49698,"line_start":1434,"line_end":1434,"column_start":5,"column_end":15},"name":"ImageStore","qualname":"::Statement::ImageStore","value":"Statement::ImageStore { image, coordinate, array_index, value }","parent":{"krate":0,"index":6853},"children":[],"decl_id":null,"docs":" Stores a texel value to an image.","sig":null,"attributes":[{"value":"/ Stores a texel value to an image.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":49136,"byte_end":49173,"line_start":1423,"line_end":1423,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":49178,"byte_end":49181,"line_start":1424,"line_end":1424,"column_start":5,"column_end":8}},{"value":"/ The `image`, `coordinate`, and `array_index` fields have the same","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":49186,"byte_end":49255,"line_start":1425,"line_end":1425,"column_start":5,"column_end":74}},{"value":"/ meanings as the corresponding operands of an [`ImageLoad`] expression;","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":49260,"byte_end":49334,"line_start":1426,"line_end":1426,"column_start":5,"column_end":79}},{"value":"/ see that documentation for details. Storing into multisampled images or","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":49339,"byte_end":49414,"line_start":1427,"line_end":1427,"column_start":5,"column_end":80}},{"value":"/ images with mipmaps is not supported, so there is no `index`operand.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":49419,"byte_end":49491,"line_start":1428,"line_end":1428,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":49496,"byte_end":49499,"line_start":1429,"line_end":1429,"column_start":5,"column_end":8}},{"value":"/ This statement is a barrier for any operations on the corresponding","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":49504,"byte_end":49575,"line_start":1430,"line_end":1430,"column_start":5,"column_end":76}},{"value":"/ [`Expression::GlobalVariable`] for this image.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":49580,"byte_end":49630,"line_start":1431,"line_end":1431,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":49635,"byte_end":49638,"line_start":1432,"line_end":1432,"column_start":5,"column_end":8}},{"value":"/ [`ImageLoad`]: Expression::ImageLoad","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":49643,"byte_end":49683,"line_start":1433,"line_end":1433,"column_start":5,"column_end":45}}]},{"kind":"StructVariant","id":{"krate":0,"index":6890},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":49896,"byte_end":49902,"line_start":1441,"line_end":1441,"column_start":5,"column_end":11},"name":"Atomic","qualname":"::Statement::Atomic","value":"Statement::Atomic { pointer, fun, value, result }","parent":{"krate":0,"index":6853},"children":[],"decl_id":null,"docs":" Atomic function.\n","sig":null,"attributes":[{"value":"/ Atomic function.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":49871,"byte_end":49891,"line_start":1440,"line_end":1440,"column_start":5,"column_end":25}}]},{"kind":"StructVariant","id":{"krate":0,"index":6895},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":50557,"byte_end":50561,"line_start":1458,"line_end":1458,"column_start":5,"column_end":9},"name":"Call","qualname":"::Statement::Call","value":"Statement::Call { function, arguments, result }","parent":{"krate":0,"index":6853},"children":[],"decl_id":null,"docs":" Calls a function.","sig":null,"attributes":[{"value":"/ Calls a function.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":50329,"byte_end":50350,"line_start":1453,"line_end":1453,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":50355,"byte_end":50358,"line_start":1454,"line_end":1454,"column_start":5,"column_end":8}},{"value":"/ If the `result` is `Some`, the corresponding expression has to be","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":50363,"byte_end":50432,"line_start":1455,"line_end":1455,"column_start":5,"column_end":74}},{"value":"/ `Expression::CallResult`, and this statement serves as a barrier for any","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":50437,"byte_end":50513,"line_start":1456,"line_end":1456,"column_start":5,"column_end":81}},{"value":"/ operations on that expression.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":50518,"byte_end":50552,"line_start":1457,"line_end":1457,"column_start":5,"column_end":39}}]},{"kind":"Enum","id":{"krate":0,"index":6853},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":45424,"byte_end":45433,"line_start":1325,"line_end":1325,"column_start":10,"column_end":19},"name":"Statement","qualname":"::Statement","value":"pub enum Statement {\n    Emit(Range<Expression>),\n    Block(Block),\n    If {\n        condition: Handle<Expression>,\n        accept: Block,\n        reject: Block,\n    },\n    Switch {\n        selector: Handle<Expression>,\n        cases: Vec<SwitchCase>,\n        default: Block,\n    },\n    Loop {\n        body: Block,\n        continuing: Block,\n    },\n    Break,\n    Continue,\n    Return {\n        value: Option<Handle<Expression>>,\n    },\n    Kill,\n    Barrier(Barrier),\n    Store {\n        pointer: Handle<Expression>,\n        value: Handle<Expression>,\n    },\n    ImageStore {\n        image: Handle<Expression>,\n        coordinate: Handle<Expression>,\n        array_index: Option<Handle<Expression>>,\n        value: Handle<Expression>,\n    },\n    Atomic {\n        pointer: Handle<Expression>,\n        fun: AtomicFunction,\n        value: Handle<Expression>,\n        result: Handle<Expression>,\n    },\n    Call {\n        function: Handle<Function>,\n        arguments: Vec<Handle<Expression>>,\n        result: Option<Handle<Expression>>,\n    },\n}","parent":null,"children":[{"krate":0,"index":6854},{"krate":0,"index":6857},{"krate":0,"index":6860},{"krate":0,"index":6864},{"krate":0,"index":6868},{"krate":0,"index":6871},{"krate":0,"index":6873},{"krate":0,"index":6875},{"krate":0,"index":6877},{"krate":0,"index":6879},{"krate":0,"index":6882},{"krate":0,"index":6885},{"krate":0,"index":6890},{"krate":0,"index":6895}],"decl_id":null,"docs":" Instructions which make up an executable block.\n","sig":null,"attributes":[{"value":"/ Instructions which make up an executable block.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":45151,"byte_end":45202,"line_start":1320,"line_end":1320,"column_start":1,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":6903},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":50870,"byte_end":50886,"line_start":1469,"line_end":1469,"column_start":12,"column_end":28},"name":"FunctionArgument","qualname":"::FunctionArgument","value":"FunctionArgument { name, ty, binding }","parent":null,"children":[{"krate":0,"index":6904},{"krate":0,"index":6905},{"krate":0,"index":6906}],"decl_id":null,"docs":" A function argument.\n","sig":null,"attributes":[{"value":"/ A function argument.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":50698,"byte_end":50722,"line_start":1465,"line_end":1465,"column_start":1,"column_end":25}}]},{"kind":"Field","id":{"krate":0,"index":6904},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":50935,"byte_end":50939,"line_start":1471,"line_end":1471,"column_start":9,"column_end":13},"name":"name","qualname":"::FunctionArgument::name","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":6903},"children":[],"decl_id":null,"docs":" Name of the argument, if any.\n","sig":null,"attributes":[{"value":"/ Name of the argument, if any.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":50893,"byte_end":50926,"line_start":1470,"line_end":1470,"column_start":5,"column_end":38}}]},{"kind":"Field","id":{"krate":0,"index":6905},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":50995,"byte_end":50997,"line_start":1473,"line_end":1473,"column_start":9,"column_end":11},"name":"ty","qualname":"::FunctionArgument::ty","value":"arena::Handle<Type>","parent":{"krate":0,"index":6903},"children":[],"decl_id":null,"docs":" Type of the argument.\n","sig":null,"attributes":[{"value":"/ Type of the argument.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":50961,"byte_end":50986,"line_start":1472,"line_end":1472,"column_start":5,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":6906},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":51114,"byte_end":51121,"line_start":1476,"line_end":1476,"column_start":9,"column_end":16},"name":"binding","qualname":"::FunctionArgument::binding","value":"std::option::Option<Binding>","parent":{"krate":0,"index":6903},"children":[],"decl_id":null,"docs":" For entry points, an argument has to have a binding\n unless it's a structure.\n","sig":null,"attributes":[{"value":"/ For entry points, an argument has to have a binding","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":51017,"byte_end":51072,"line_start":1474,"line_end":1474,"column_start":5,"column_end":60}},{"value":"/ unless it's a structure.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":51077,"byte_end":51105,"line_start":1475,"line_end":1475,"column_start":5,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":6911},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":51290,"byte_end":51304,"line_start":1482,"line_end":1482,"column_start":12,"column_end":26},"name":"FunctionResult","qualname":"::FunctionResult","value":"FunctionResult { ty, binding }","parent":null,"children":[{"krate":0,"index":6912},{"krate":0,"index":6913}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6912},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":51343,"byte_end":51345,"line_start":1484,"line_end":1484,"column_start":9,"column_end":11},"name":"ty","qualname":"::FunctionResult::ty","value":"arena::Handle<Type>","parent":{"krate":0,"index":6911},"children":[],"decl_id":null,"docs":" Type of the result.\n","sig":null,"attributes":[{"value":"/ Type of the result.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":51311,"byte_end":51334,"line_start":1483,"line_end":1483,"column_start":5,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":6913},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":51461,"byte_end":51468,"line_start":1487,"line_end":1487,"column_start":9,"column_end":16},"name":"binding","qualname":"::FunctionResult::binding","value":"std::option::Option<Binding>","parent":{"krate":0,"index":6911},"children":[],"decl_id":null,"docs":" For entry points, the result has to have a binding\n unless it's a structure.\n","sig":null,"attributes":[{"value":"/ For entry points, the result has to have a binding","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":51365,"byte_end":51419,"line_start":1485,"line_end":1485,"column_start":5,"column_end":59}},{"value":"/ unless it's a structure.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":51424,"byte_end":51452,"line_start":1486,"line_end":1486,"column_start":5,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":6918},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":51677,"byte_end":51685,"line_start":1494,"line_end":1494,"column_start":12,"column_end":20},"name":"Function","qualname":"::Function","value":"Function { name, arguments, result, local_variables, expressions, named_expressions, body }","parent":null,"children":[{"krate":0,"index":6919},{"krate":0,"index":6920},{"krate":0,"index":6921},{"krate":0,"index":6922},{"krate":0,"index":6923},{"krate":0,"index":6924},{"krate":0,"index":6925}],"decl_id":null,"docs":" A function defined in the module.\n","sig":null,"attributes":[{"value":"/ A function defined in the module.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":51490,"byte_end":51527,"line_start":1490,"line_end":1490,"column_start":1,"column_end":38}}]},{"kind":"Field","id":{"krate":0,"index":6919},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":51734,"byte_end":51738,"line_start":1496,"line_end":1496,"column_start":9,"column_end":13},"name":"name","qualname":"::Function::name","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":6918},"children":[],"decl_id":null,"docs":" Name of the function, if any.\n","sig":null,"attributes":[{"value":"/ Name of the function, if any.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":51692,"byte_end":51725,"line_start":1495,"line_end":1495,"column_start":5,"column_end":38}}]},{"kind":"Field","id":{"krate":0,"index":6920},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":51809,"byte_end":51818,"line_start":1498,"line_end":1498,"column_start":9,"column_end":18},"name":"arguments","qualname":"::Function::arguments","value":"std::vec::Vec<FunctionArgument>","parent":{"krate":0,"index":6918},"children":[],"decl_id":null,"docs":" Information about function argument.\n","sig":null,"attributes":[{"value":"/ Information about function argument.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":51760,"byte_end":51800,"line_start":1497,"line_end":1497,"column_start":5,"column_end":45}}]},{"kind":"Field","id":{"krate":0,"index":6921},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":51896,"byte_end":51902,"line_start":1500,"line_end":1500,"column_start":9,"column_end":15},"name":"result","qualname":"::Function::result","value":"std::option::Option<FunctionResult>","parent":{"krate":0,"index":6918},"children":[],"decl_id":null,"docs":" The result of this function, if any.\n","sig":null,"attributes":[{"value":"/ The result of this function, if any.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":51847,"byte_end":51887,"line_start":1499,"line_end":1499,"column_start":5,"column_end":45}}]},{"kind":"Field","id":{"krate":0,"index":6922},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":51994,"byte_end":52009,"line_start":1502,"line_end":1502,"column_start":9,"column_end":24},"name":"local_variables","qualname":"::Function::local_variables","value":"arena::Arena<LocalVariable>","parent":{"krate":0,"index":6918},"children":[],"decl_id":null,"docs":" Local variables defined and used in the function.\n","sig":null,"attributes":[{"value":"/ Local variables defined and used in the function.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":51932,"byte_end":51985,"line_start":1501,"line_end":1501,"column_start":5,"column_end":58}}]},{"kind":"Field","id":{"krate":0,"index":6923},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":52190,"byte_end":52201,"line_start":1507,"line_end":1507,"column_start":9,"column_end":20},"name":"expressions","qualname":"::Function::expressions","value":"arena::Arena<Expression>","parent":{"krate":0,"index":6918},"children":[],"decl_id":null,"docs":" Expressions used inside this function.","sig":null,"attributes":[{"value":"/ Expressions used inside this function.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":52037,"byte_end":52079,"line_start":1503,"line_end":1503,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":52084,"byte_end":52087,"line_start":1504,"line_end":1504,"column_start":5,"column_end":8}},{"value":"/ An `Expression` must occur before all other `Expression`s that use its","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":52092,"byte_end":52166,"line_start":1505,"line_end":1505,"column_start":5,"column_end":79}},{"value":"/ value.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":52171,"byte_end":52181,"line_start":1506,"line_end":1506,"column_start":5,"column_end":15}}]},{"kind":"Field","id":{"krate":0,"index":6924},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":52293,"byte_end":52310,"line_start":1509,"line_end":1509,"column_start":9,"column_end":26},"name":"named_expressions","qualname":"::Function::named_expressions","value":"std::collections::HashMap<arena::Handle<Expression>, std::string::String, std::hash::BuildHasherDefault<fxhash::FxHasher>>","parent":{"krate":0,"index":6918},"children":[],"decl_id":null,"docs":" Map of expressions that have associated variable names\n","sig":null,"attributes":[{"value":"/ Map of expressions that have associated variable names","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":52226,"byte_end":52284,"line_start":1508,"line_end":1508,"column_start":5,"column_end":63}}]},{"kind":"Field","id":{"krate":0,"index":6925},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":52405,"byte_end":52409,"line_start":1511,"line_end":1511,"column_start":9,"column_end":13},"name":"body","qualname":"::Function::body","value":"block::Block","parent":{"krate":0,"index":6918},"children":[],"decl_id":null,"docs":" Block of instructions comprising the body of the function.\n","sig":null,"attributes":[{"value":"/ Block of instructions comprising the body of the function.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":52334,"byte_end":52396,"line_start":1510,"line_end":1510,"column_start":5,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":6930},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":54734,"byte_end":54744,"line_start":1557,"line_end":1557,"column_start":12,"column_end":22},"name":"EntryPoint","qualname":"::EntryPoint","value":"EntryPoint { name, stage, early_depth_test, workgroup_size, function }","parent":null,"children":[{"krate":0,"index":6931},{"krate":0,"index":6932},{"krate":0,"index":6933},{"krate":0,"index":6934},{"krate":0,"index":6936}],"decl_id":null,"docs":" The main function for a pipeline stage.","sig":null,"attributes":[{"value":"/ The main function for a pipeline stage.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":52421,"byte_end":52464,"line_start":1514,"line_end":1514,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":52465,"byte_end":52468,"line_start":1515,"line_end":1515,"column_start":1,"column_end":4}},{"value":"/ An [`EntryPoint`] is a [`Function`] that serves as the main function for a","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":52469,"byte_end":52547,"line_start":1516,"line_end":1516,"column_start":1,"column_end":79}},{"value":"/ graphics or compute pipeline stage. For example, an `EntryPoint` whose","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":52548,"byte_end":52622,"line_start":1517,"line_end":1517,"column_start":1,"column_end":75}},{"value":"/ [`stage`] is [`ShaderStage::Vertex`] can serve as a graphics pipeline's","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":52623,"byte_end":52698,"line_start":1518,"line_end":1518,"column_start":1,"column_end":76}},{"value":"/ vertex shader.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":52699,"byte_end":52717,"line_start":1519,"line_end":1519,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":52718,"byte_end":52721,"line_start":1520,"line_end":1520,"column_start":1,"column_end":4}},{"value":"/ Since an entry point is called directly by the graphics or compute pipeline,","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":52722,"byte_end":52802,"line_start":1521,"line_end":1521,"column_start":1,"column_end":81}},{"value":"/ not by other WGSL functions, you must specify what the pipeline should pass","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":52803,"byte_end":52882,"line_start":1522,"line_end":1522,"column_start":1,"column_end":80}},{"value":"/ as the entry point's arguments, and what values it will return. For example,","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":52883,"byte_end":52963,"line_start":1523,"line_end":1523,"column_start":1,"column_end":81}},{"value":"/ a vertex shader needs a vertex's attributes as its arguments, but if it's","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":52964,"byte_end":53041,"line_start":1524,"line_end":1524,"column_start":1,"column_end":78}},{"value":"/ used for instanced draw calls, it will also want to know the instance id.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":53042,"byte_end":53119,"line_start":1525,"line_end":1525,"column_start":1,"column_end":78}},{"value":"/ The vertex shader's return value will usually include an output vertex","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":53120,"byte_end":53194,"line_start":1526,"line_end":1526,"column_start":1,"column_end":75}},{"value":"/ position, and possibly other attributes to be interpolated and passed along","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":53195,"byte_end":53274,"line_start":1527,"line_end":1527,"column_start":1,"column_end":80}},{"value":"/ to a fragment shader.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":53275,"byte_end":53300,"line_start":1528,"line_end":1528,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":53301,"byte_end":53304,"line_start":1529,"line_end":1529,"column_start":1,"column_end":4}},{"value":"/ To specify this, the arguments and result of an `EntryPoint`'s [`function`]","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":53305,"byte_end":53384,"line_start":1530,"line_end":1530,"column_start":1,"column_end":80}},{"value":"/ must each have a [`Binding`], or be structs whose members all have","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":53385,"byte_end":53455,"line_start":1531,"line_end":1531,"column_start":1,"column_end":71}},{"value":"/ `Binding`s. This associates every value passed to or returned from the entry","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":53456,"byte_end":53536,"line_start":1532,"line_end":1532,"column_start":1,"column_end":81}},{"value":"/ point with either a [`BuiltIn`] or a [`Location`]:","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":53537,"byte_end":53591,"line_start":1533,"line_end":1533,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":53592,"byte_end":53595,"line_start":1534,"line_end":1534,"column_start":1,"column_end":4}},{"value":"/ -   A [`BuiltIn`] has special semantics, usually specific to its pipeline","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":53596,"byte_end":53673,"line_start":1535,"line_end":1535,"column_start":1,"column_end":78}},{"value":"/     stage. For example, the result of a vertex shader can include a","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":53674,"byte_end":53745,"line_start":1536,"line_end":1536,"column_start":1,"column_end":72}},{"value":"/     [`BuiltIn::Position`] value, which determines the position of a vertex","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":53746,"byte_end":53824,"line_start":1537,"line_end":1537,"column_start":1,"column_end":79}},{"value":"/     of a rendered primitive. Or, a compute shader might take an argument","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":53825,"byte_end":53901,"line_start":1538,"line_end":1538,"column_start":1,"column_end":77}},{"value":"/     whose binding is [`BuiltIn::WorkGroupSize`], through which the compute","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":53902,"byte_end":53980,"line_start":1539,"line_end":1539,"column_start":1,"column_end":79}},{"value":"/     pipeline would pass the number of invocations in your workgroup.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":53981,"byte_end":54053,"line_start":1540,"line_end":1540,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":54054,"byte_end":54057,"line_start":1541,"line_end":1541,"column_start":1,"column_end":4}},{"value":"/ -   A [`Location`] indicates user-defined IO to be passed from one pipeline","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":54058,"byte_end":54137,"line_start":1542,"line_end":1542,"column_start":1,"column_end":80}},{"value":"/     stage to the next. For example, a vertex shader might also produce a","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":54138,"byte_end":54214,"line_start":1543,"line_end":1543,"column_start":1,"column_end":77}},{"value":"/     `uv` texture location as a user-defined IO value.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":54215,"byte_end":54272,"line_start":1544,"line_end":1544,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":54273,"byte_end":54276,"line_start":1545,"line_end":1545,"column_start":1,"column_end":4}},{"value":"/ In other words, the pipeline stage's input and output interface are","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":54277,"byte_end":54348,"line_start":1546,"line_end":1546,"column_start":1,"column_end":72}},{"value":"/ determined by the bindings of the arguments and result of the `EntryPoint`'s","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":54349,"byte_end":54429,"line_start":1547,"line_end":1547,"column_start":1,"column_end":81}},{"value":"/ [`function`].","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":54430,"byte_end":54447,"line_start":1548,"line_end":1548,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":54448,"byte_end":54451,"line_start":1549,"line_end":1549,"column_start":1,"column_end":4}},{"value":"/ [`Function`]: crate::Function","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":54452,"byte_end":54485,"line_start":1550,"line_end":1550,"column_start":1,"column_end":34}},{"value":"/ [`Location`]: Binding::Location","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":54486,"byte_end":54521,"line_start":1551,"line_end":1551,"column_start":1,"column_end":36}},{"value":"/ [`function`]: EntryPoint::function","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":54522,"byte_end":54560,"line_start":1552,"line_end":1552,"column_start":1,"column_end":39}},{"value":"/ [`stage`]: EntryPoint::stage","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":54561,"byte_end":54593,"line_start":1553,"line_end":1553,"column_start":1,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":6931},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":54897,"byte_end":54901,"line_start":1561,"line_end":1561,"column_start":9,"column_end":13},"name":"name","qualname":"::EntryPoint::name","value":"std::string::String","parent":{"krate":0,"index":6930},"children":[],"decl_id":null,"docs":" Name of this entry point, visible externally.","sig":null,"attributes":[{"value":"/ Name of this entry point, visible externally.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":54751,"byte_end":54800,"line_start":1558,"line_end":1558,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":54805,"byte_end":54808,"line_start":1559,"line_end":1559,"column_start":5,"column_end":8}},{"value":"/ Entry point names for a given `stage` must be distinct within a module.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":54813,"byte_end":54888,"line_start":1560,"line_end":1560,"column_start":5,"column_end":80}}]},{"kind":"Field","id":{"krate":0,"index":6932},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":54941,"byte_end":54946,"line_start":1563,"line_end":1563,"column_start":9,"column_end":14},"name":"stage","qualname":"::EntryPoint::stage","value":"ShaderStage","parent":{"krate":0,"index":6930},"children":[],"decl_id":null,"docs":" Shader stage.\n","sig":null,"attributes":[{"value":"/ Shader stage.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":54915,"byte_end":54932,"line_start":1562,"line_end":1562,"column_start":5,"column_end":22}}]},{"kind":"Field","id":{"krate":0,"index":6933},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":55015,"byte_end":55031,"line_start":1565,"line_end":1565,"column_start":9,"column_end":25},"name":"early_depth_test","qualname":"::EntryPoint::early_depth_test","value":"std::option::Option<EarlyDepthTest>","parent":{"krate":0,"index":6930},"children":[],"decl_id":null,"docs":" Early depth test for fragment stages.\n","sig":null,"attributes":[{"value":"/ Early depth test for fragment stages.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":54965,"byte_end":55006,"line_start":1564,"line_end":1564,"column_start":5,"column_end":46}}]},{"kind":"Field","id":{"krate":0,"index":6934},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":55107,"byte_end":55121,"line_start":1567,"line_end":1567,"column_start":9,"column_end":23},"name":"workgroup_size","qualname":"::EntryPoint::workgroup_size","value":"[u32; 3]","parent":{"krate":0,"index":6930},"children":[],"decl_id":null,"docs":" Workgroup size for compute stages\n","sig":null,"attributes":[{"value":"/ Workgroup size for compute stages","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":55061,"byte_end":55098,"line_start":1566,"line_end":1566,"column_start":5,"column_end":42}}]},{"kind":"Field","id":{"krate":0,"index":6936},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":55172,"byte_end":55180,"line_start":1569,"line_end":1569,"column_start":9,"column_end":17},"name":"function","qualname":"::EntryPoint::function","value":"Function","parent":{"krate":0,"index":6930},"children":[],"decl_id":null,"docs":" The entrance function.\n","sig":null,"attributes":[{"value":"/ The entrance function.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":55137,"byte_end":55163,"line_start":1568,"line_end":1568,"column_start":5,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":6939},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":55830,"byte_end":55836,"line_start":1586,"line_end":1586,"column_start":12,"column_end":18},"name":"Module","qualname":"::Module","value":"Module { types, constants, global_variables, functions, entry_points }","parent":null,"children":[{"krate":0,"index":6940},{"krate":0,"index":6941},{"krate":0,"index":6942},{"krate":0,"index":6943},{"krate":0,"index":6944}],"decl_id":null,"docs":" Shader module.","sig":null,"attributes":[{"value":"/ Shader module.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":55195,"byte_end":55213,"line_start":1572,"line_end":1572,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":55214,"byte_end":55217,"line_start":1573,"line_end":1573,"column_start":1,"column_end":4}},{"value":"/ A module is a set of constants, global variables and functions, as well as","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":55218,"byte_end":55296,"line_start":1574,"line_end":1574,"column_start":1,"column_end":79}},{"value":"/ the types required to define them.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":55297,"byte_end":55335,"line_start":1575,"line_end":1575,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":55336,"byte_end":55339,"line_start":1576,"line_end":1576,"column_start":1,"column_end":4}},{"value":"/ Some functions are marked as entry points, to be used in a certain shader stage.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":55340,"byte_end":55424,"line_start":1577,"line_end":1577,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":55425,"byte_end":55428,"line_start":1578,"line_end":1578,"column_start":1,"column_end":4}},{"value":"/ To create a new module, use the `Default` implementation.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":55429,"byte_end":55490,"line_start":1579,"line_end":1579,"column_start":1,"column_end":62}},{"value":"/ Alternatively, you can load an existing shader using one of the [available front ends][front].","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":55491,"byte_end":55589,"line_start":1580,"line_end":1580,"column_start":1,"column_end":99}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":55590,"byte_end":55593,"line_start":1581,"line_end":1581,"column_start":1,"column_end":4}},{"value":"/ When finished, you can export modules using one of the [available backends][back].","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":55594,"byte_end":55680,"line_start":1582,"line_end":1582,"column_start":1,"column_end":87}}]},{"kind":"Field","id":{"krate":0,"index":6940},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":55901,"byte_end":55906,"line_start":1588,"line_end":1588,"column_start":9,"column_end":14},"name":"types","qualname":"::Module::types","value":"arena::UniqueArena<Type>","parent":{"krate":0,"index":6939},"children":[],"decl_id":null,"docs":" Storage for the types defined in this module.\n","sig":null,"attributes":[{"value":"/ Storage for the types defined in this module.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":55843,"byte_end":55892,"line_start":1587,"line_end":1587,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":6941},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":55993,"byte_end":56002,"line_start":1590,"line_end":1590,"column_start":9,"column_end":18},"name":"constants","qualname":"::Module::constants","value":"arena::Arena<Constant>","parent":{"krate":0,"index":6939},"children":[],"decl_id":null,"docs":" Storage for the constants defined in this module.\n","sig":null,"attributes":[{"value":"/ Storage for the constants defined in this module.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":55931,"byte_end":55984,"line_start":1589,"line_end":1589,"column_start":5,"column_end":58}}]},{"kind":"Field","id":{"krate":0,"index":6942},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":56094,"byte_end":56110,"line_start":1592,"line_end":1592,"column_start":9,"column_end":25},"name":"global_variables","qualname":"::Module::global_variables","value":"arena::Arena<GlobalVariable>","parent":{"krate":0,"index":6939},"children":[],"decl_id":null,"docs":" Storage for the global variables defined in this module.\n","sig":null,"attributes":[{"value":"/ Storage for the global variables defined in this module.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":56025,"byte_end":56085,"line_start":1591,"line_end":1591,"column_start":5,"column_end":65}}]},{"kind":"Field","id":{"krate":0,"index":6943},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":56326,"byte_end":56335,"line_start":1597,"line_end":1597,"column_start":9,"column_end":18},"name":"functions","qualname":"::Module::functions","value":"arena::Arena<Function>","parent":{"krate":0,"index":6939},"children":[],"decl_id":null,"docs":" Storage for the functions defined in this module.","sig":null,"attributes":[{"value":"/ Storage for the functions defined in this module.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":56139,"byte_end":56192,"line_start":1593,"line_end":1593,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":56197,"byte_end":56200,"line_start":1594,"line_end":1594,"column_start":5,"column_end":8}},{"value":"/ Each function must appear in this arena strictly before all its callers.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":56205,"byte_end":56281,"line_start":1595,"line_end":1595,"column_start":5,"column_end":81}},{"value":"/ Recursion is not supported.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":56286,"byte_end":56317,"line_start":1596,"line_end":1596,"column_start":5,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":6944},"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":56384,"byte_end":56396,"line_start":1599,"line_end":1599,"column_start":9,"column_end":21},"name":"entry_points","qualname":"::Module::entry_points","value":"std::vec::Vec<EntryPoint>","parent":{"krate":0,"index":6939},"children":[],"decl_id":null,"docs":" Entry points.\n","sig":null,"attributes":[{"value":"/ Entry points.","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":56358,"byte_end":56375,"line_start":1598,"line_end":1598,"column_start":5,"column_end":22}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\arena.rs","byte_start":57282,"byte_end":57288,"line_start":26,"line_end":26,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":36}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\arena.rs","byte_start":57440,"byte_end":57446,"line_start":34,"line_end":34,"column_start":18,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\arena.rs","byte_start":57475,"byte_end":57481,"line_start":35,"line_end":35,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":41}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\arena.rs","byte_start":57585,"byte_end":57591,"line_start":40,"line_end":40,"column_start":16,"column_end":22},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\arena.rs","byte_start":57621,"byte_end":57627,"line_start":41,"line_end":41,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":46}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\arena.rs","byte_start":57764,"byte_end":57770,"line_start":46,"line_end":46,"column_start":17,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":49}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\arena.rs","byte_start":57890,"byte_end":57896,"line_start":51,"line_end":51,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":52}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\arena.rs","byte_start":58046,"byte_end":58052,"line_start":56,"line_end":56,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":55}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\arena.rs","byte_start":58161,"byte_end":58167,"line_start":62,"line_end":62,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":59},{"krate":0,"index":60},{"krate":0,"index":61},{"krate":0,"index":65}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\arena.rs","byte_start":59608,"byte_end":59613,"line_start":112,"line_end":112,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":72}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\arena.rs","byte_start":59778,"byte_end":59783,"line_start":120,"line_end":120,"column_start":24,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":75}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\arena.rs","byte_start":59961,"byte_end":59966,"line_start":125,"line_end":125,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":78},{"krate":0,"index":79}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\arena.rs","byte_start":60967,"byte_end":60972,"line_start":157,"line_end":157,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":85}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\arena.rs","byte_start":61068,"byte_end":61073,"line_start":162,"line_end":162,"column_start":36,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":88}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\arena.rs","byte_start":61207,"byte_end":61212,"line_start":168,"line_end":168,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":91},{"krate":0,"index":92},{"krate":0,"index":93},{"krate":0,"index":94},{"krate":0,"index":95},{"krate":0,"index":98},{"krate":0,"index":101},{"krate":0,"index":102},{"krate":0,"index":105},{"krate":0,"index":108},{"krate":0,"index":109},{"krate":0,"index":110},{"krate":0,"index":111},{"krate":0,"index":112},{"krate":0,"index":113}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\arena.rs","byte_start":65578,"byte_end":65583,"line_start":316,"line_end":316,"column_start":35,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":116},{"krate":0,"index":117}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\arena.rs","byte_start":65738,"byte_end":65743,"line_start":323,"line_end":323,"column_start":38,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":120}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\arena.rs","byte_start":65889,"byte_end":65894,"line_start":329,"line_end":329,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":123},{"krate":0,"index":124}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\arena.rs","byte_start":68378,"byte_end":68389,"line_start":404,"line_end":404,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":130},{"krate":0,"index":131},{"krate":0,"index":132},{"krate":0,"index":133},{"krate":0,"index":134}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\arena.rs","byte_start":69774,"byte_end":69785,"line_start":454,"line_end":454,"column_start":26,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":137},{"krate":0,"index":140},{"krate":0,"index":141},{"krate":0,"index":143}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\arena.rs","byte_start":71898,"byte_end":71909,"line_start":514,"line_end":514,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":146}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\arena.rs","byte_start":72024,"byte_end":72035,"line_start":520,"line_end":520,"column_start":54,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":149}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\arena.rs","byte_start":72195,"byte_end":72206,"line_start":526,"line_end":526,"column_start":35,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":152},{"krate":0,"index":153}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\hlsl\\conv.rs","byte_start":91546,"byte_end":91556,"line_start":3,"line_end":3,"column_start":13,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":161},{"krate":0,"index":162}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\hlsl\\conv.rs","byte_start":92443,"byte_end":92452,"line_start":31,"line_end":31,"column_start":13,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":164}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\hlsl\\conv.rs","byte_start":92618,"byte_end":92631,"line_start":40,"line_end":40,"column_start":13,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":166}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\hlsl\\conv.rs","byte_start":93793,"byte_end":93800,"line_start":76,"line_end":76,"column_start":13,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":168}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\hlsl\\conv.rs","byte_start":95527,"byte_end":95540,"line_start":113,"line_end":113,"column_start":13,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":170}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\hlsl\\conv.rs","byte_start":95880,"byte_end":95888,"line_start":124,"line_end":124,"column_start":13,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":172}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\hlsl\\conv.rs","byte_start":96205,"byte_end":96219,"line_start":135,"line_end":135,"column_start":13,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":174}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\hlsl\\help.rs","byte_start":99326,"byte_end":99336,"line_start":89,"line_end":89,"column_start":34,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":197}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\hlsl\\help.rs","byte_start":99911,"byte_end":99917,"line_start":109,"line_end":109,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":204},{"krate":0,"index":205},{"krate":0,"index":206},{"krate":0,"index":212},{"krate":0,"index":213},{"krate":0,"index":228},{"krate":0,"index":229},{"krate":0,"index":235},{"krate":0,"index":236}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\hlsl\\storage.rs","byte_start":119547,"byte_end":119553,"line_start":38,"line_end":38,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":283},{"krate":0,"index":284},{"krate":0,"index":286},{"krate":0,"index":290},{"krate":0,"index":291},{"krate":0,"index":292}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\hlsl\\writer.rs","byte_start":137622,"byte_end":137634,"line_start":59,"line_end":59,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":386}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\hlsl\\writer.rs","byte_start":138028,"byte_end":138034,"line_start":75,"line_end":75,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":390},{"krate":0,"index":391},{"krate":0,"index":392},{"krate":0,"index":397},{"krate":0,"index":398},{"krate":0,"index":401},{"krate":0,"index":402},{"krate":0,"index":403},{"krate":0,"index":404},{"krate":0,"index":405},{"krate":0,"index":406},{"krate":0,"index":407},{"krate":0,"index":408},{"krate":0,"index":409},{"krate":0,"index":410},{"krate":0,"index":411},{"krate":0,"index":412},{"krate":0,"index":416},{"krate":0,"index":440},{"krate":0,"index":441},{"krate":0,"index":442},{"krate":0,"index":446},{"krate":0,"index":447}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\hlsl\\mod.rs","byte_start":87246,"byte_end":87257,"line_start":53,"line_end":53,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":459}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\hlsl\\mod.rs","byte_start":87453,"byte_end":87464,"line_start":63,"line_end":63,"column_start":13,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":461}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\hlsl\\mod.rs","byte_start":87671,"byte_end":87685,"line_start":73,"line_end":73,"column_start":13,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":463}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\hlsl\\mod.rs","byte_start":89047,"byte_end":89054,"line_start":111,"line_end":111,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":466}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\hlsl\\mod.rs","byte_start":89305,"byte_end":89312,"line_start":122,"line_end":122,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":468}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\hlsl\\mod.rs","byte_start":90882,"byte_end":90889,"line_start":168,"line_end":168,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":470}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\spv\\block.rs","byte_start":244194,"byte_end":244200,"line_start":22,"line_end":22,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":543},{"krate":0,"index":544},{"krate":0,"index":545}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\spv\\block.rs","byte_start":248340,"byte_end":248352,"line_start":146,"line_end":146,"column_start":10,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":548},{"krate":0,"index":549},{"krate":0,"index":587},{"krate":0,"index":588}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\spv\\helpers.rs","byte_start":317048,"byte_end":317060,"line_start":52,"line_end":52,"column_start":13,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":609}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\spv\\image.rs","byte_start":321523,"byte_end":321527,"line_start":104,"line_end":104,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":660}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\spv\\image.rs","byte_start":322884,"byte_end":322888,"line_start":143,"line_end":143,"column_start":17,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":662},{"krate":0,"index":663},{"krate":0,"index":664},{"krate":0,"index":665}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\spv\\image.rs","byte_start":324523,"byte_end":324528,"line_start":203,"line_end":203,"column_start":17,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":670},{"krate":0,"index":671},{"krate":0,"index":672},{"krate":0,"index":673}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\spv\\image.rs","byte_start":325189,"byte_end":325201,"line_start":229,"line_end":229,"column_start":10,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":676},{"krate":0,"index":683},{"krate":0,"index":684},{"krate":0,"index":686},{"krate":0,"index":687},{"krate":0,"index":688},{"krate":0,"index":691},{"krate":0,"index":693},{"krate":0,"index":695},{"krate":0,"index":700},{"krate":0,"index":711}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\spv\\index.rs","byte_start":361061,"byte_end":361073,"line_start":49,"line_end":49,"column_start":10,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":768},{"krate":0,"index":769},{"krate":0,"index":770},{"krate":0,"index":771},{"krate":0,"index":772},{"krate":0,"index":773},{"krate":0,"index":775},{"krate":0,"index":776}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\spv\\instructions.rs","byte_start":378320,"byte_end":378331,"line_start":19,"line_end":19,"column_start":13,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":805},{"krate":0,"index":806},{"krate":0,"index":807},{"krate":0,"index":808},{"krate":0,"index":809},{"krate":0,"index":810},{"krate":0,"index":811},{"krate":0,"index":812},{"krate":0,"index":813},{"krate":0,"index":814},{"krate":0,"index":815},{"krate":0,"index":816},{"krate":0,"index":817},{"krate":0,"index":818},{"krate":0,"index":819},{"krate":0,"index":820},{"krate":0,"index":821},{"krate":0,"index":822},{"krate":0,"index":823},{"krate":0,"index":824},{"krate":0,"index":825},{"krate":0,"index":826},{"krate":0,"index":827},{"krate":0,"index":828},{"krate":0,"index":829},{"krate":0,"index":830},{"krate":0,"index":831},{"krate":0,"index":832},{"krate":0,"index":833},{"krate":0,"index":834},{"krate":0,"index":835},{"krate":0,"index":836},{"krate":0,"index":837},{"krate":0,"index":838},{"krate":0,"index":839},{"krate":0,"index":840},{"krate":0,"index":841},{"krate":0,"index":842},{"krate":0,"index":843},{"krate":0,"index":844},{"krate":0,"index":845},{"krate":0,"index":846},{"krate":0,"index":847},{"krate":0,"index":848},{"krate":0,"index":849},{"krate":0,"index":850},{"krate":0,"index":851},{"krate":0,"index":852},{"krate":0,"index":853},{"krate":0,"index":854},{"krate":0,"index":855},{"krate":0,"index":856},{"krate":0,"index":857},{"krate":0,"index":858},{"krate":0,"index":859},{"krate":0,"index":860},{"krate":0,"index":861},{"krate":0,"index":862},{"krate":0,"index":863},{"krate":0,"index":864},{"krate":0,"index":865},{"krate":0,"index":866},{"krate":0,"index":867},{"krate":0,"index":868},{"krate":0,"index":869},{"krate":0,"index":870},{"krate":0,"index":871},{"krate":0,"index":872},{"krate":0,"index":873},{"krate":0,"index":874}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\spv\\instructions.rs","byte_start":404268,"byte_end":404279,"line_start":919,"line_end":919,"column_start":44,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":876}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\spv\\instructions.rs","byte_start":405817,"byte_end":405820,"line_start":959,"line_end":959,"column_start":45,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":881}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\spv\\layout.rs","byte_start":406299,"byte_end":406313,"line_start":8,"line_end":8,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":911},{"krate":0,"index":912}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\spv\\layout.rs","byte_start":406927,"byte_end":406941,"line_start":28,"line_end":28,"column_start":40,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":915}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\spv\\layout.rs","byte_start":407222,"byte_end":407235,"line_start":40,"line_end":40,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":917}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\spv\\layout.rs","byte_start":407983,"byte_end":407996,"line_start":56,"line_end":56,"column_start":40,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":920}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\spv\\layout.rs","byte_start":408704,"byte_end":408715,"line_start":74,"line_end":74,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":922},{"krate":0,"index":923},{"krate":0,"index":924},{"krate":0,"index":925},{"krate":0,"index":926},{"krate":0,"index":927}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\spv\\layout.rs","byte_start":409950,"byte_end":409961,"line_start":118,"line_end":118,"column_start":6,"column_end":17},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\spv\\recyclable.rs","byte_start":414497,"byte_end":414500,"line_start":32,"line_end":32,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":935}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\spv\\recyclable.rs","byte_start":414639,"byte_end":414646,"line_start":39,"line_end":39,"column_start":55,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":940}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\spv\\recyclable.rs","byte_start":414788,"byte_end":414795,"line_start":46,"line_end":46,"column_start":52,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":944}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\spv\\selection.rs","byte_start":418309,"byte_end":418318,"line_start":85,"line_end":85,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":969},{"krate":0,"index":970},{"krate":0,"index":971},{"krate":0,"index":972},{"krate":0,"index":973}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\spv\\selection.rs","byte_start":424325,"byte_end":424329,"line_start":232,"line_end":232,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":977}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\spv\\writer.rs","byte_start":425702,"byte_end":425710,"line_start":21,"line_end":21,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1090}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\spv\\writer.rs","byte_start":426369,"byte_end":426375,"line_start":41,"line_end":41,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1093},{"krate":0,"index":1094},{"krate":0,"index":1101},{"krate":0,"index":1103},{"krate":0,"index":1104},{"krate":0,"index":1105},{"krate":0,"index":1106},{"krate":0,"index":1107},{"krate":0,"index":1108},{"krate":0,"index":1109},{"krate":0,"index":1110},{"krate":0,"index":1111},{"krate":0,"index":1113},{"krate":0,"index":1114},{"krate":0,"index":1115},{"krate":0,"index":1119},{"krate":0,"index":1120},{"krate":0,"index":1121},{"krate":0,"index":1125},{"krate":0,"index":1129},{"krate":0,"index":1130},{"krate":0,"index":1131},{"krate":0,"index":1132},{"krate":0,"index":1133},{"krate":0,"index":1134},{"krate":0,"index":1145},{"krate":0,"index":1150},{"krate":0,"index":1151},{"krate":0,"index":1152},{"krate":0,"index":1158},{"krate":0,"index":1160}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\spv\\mod.rs","byte_start":225266,"byte_end":225277,"line_start":75,"line_end":75,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1191}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\spv\\mod.rs","byte_start":226093,"byte_end":226098,"line_start":104,"line_end":104,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1199}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\spv\\mod.rs","byte_start":226768,"byte_end":226776,"line_start":138,"line_end":138,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1211},{"krate":0,"index":1212}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\spv\\mod.rs","byte_start":228268,"byte_end":228282,"line_start":184,"line_end":184,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1214}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\spv\\mod.rs","byte_start":233805,"byte_end":233815,"line_start":318,"line_end":318,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1217}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\spv\\mod.rs","byte_start":236030,"byte_end":236047,"line_start":399,"line_end":399,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1220}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\spv\\mod.rs","byte_start":236208,"byte_end":236225,"line_start":405,"line_end":405,"column_start":48,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":1222},{"krate":0,"index":1223}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\spv\\mod.rs","byte_start":236516,"byte_end":236533,"line_start":415,"line_end":415,"column_start":51,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":1225}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\spv\\mod.rs","byte_start":236802,"byte_end":236819,"line_start":424,"line_end":424,"column_start":33,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1227}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\spv\\mod.rs","byte_start":237279,"byte_end":237293,"line_start":441,"line_end":441,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1232},{"krate":0,"index":1233},{"krate":0,"index":1234}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\spv\\mod.rs","byte_start":238587,"byte_end":238599,"line_start":490,"line_end":490,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1248},{"krate":0,"index":1249},{"krate":0,"index":1250},{"krate":0,"index":1251},{"krate":0,"index":1252}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\spv\\mod.rs","byte_start":242158,"byte_end":242165,"line_start":595,"line_end":595,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1274}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\mod.rs","byte_start":73767,"byte_end":73772,"line_start":28,"line_end":28,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1280}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\mod.rs","byte_start":73886,"byte_end":73891,"line_start":35,"line_end":35,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1282}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\mod.rs","byte_start":74993,"byte_end":75004,"line_start":66,"line_end":66,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1299},{"krate":0,"index":1300},{"krate":0,"index":1301}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\mod.rs","byte_start":82599,"byte_end":82616,"line_start":231,"line_end":231,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1303}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\mod.rs","byte_start":82704,"byte_end":82714,"line_start":237,"line_end":237,"column_start":13,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1305}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\mod.rs","byte_start":85249,"byte_end":85258,"line_start":305,"line_end":305,"column_start":13,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1312}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\block.rs","byte_start":484129,"byte_end":484134,"line_start":15,"line_end":15,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1332},{"krate":0,"index":1333},{"krate":0,"index":1334},{"krate":0,"index":1335},{"krate":0,"index":1336},{"krate":0,"index":1337},{"krate":0,"index":1338},{"krate":0,"index":1339},{"krate":0,"index":1341},{"krate":0,"index":1343},{"krate":0,"index":1346},{"krate":0,"index":1347}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\block.rs","byte_start":486488,"byte_end":486493,"line_start":100,"line_end":100,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1349},{"krate":0,"index":1350}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\block.rs","byte_start":486611,"byte_end":486616,"line_start":107,"line_end":107,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1352}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\block.rs","byte_start":487208,"byte_end":487213,"line_start":132,"line_end":132,"column_start":31,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1359}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\interpolator.rs","byte_start":491619,"byte_end":491626,"line_start":3,"line_end":3,"column_start":13,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1363}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\wgsl\\lexer.rs","byte_start":680987,"byte_end":681003,"line_start":48,"line_end":48,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1432},{"krate":0,"index":1433}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\wgsl\\lexer.rs","byte_start":693055,"byte_end":693060,"line_start":397,"line_end":397,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1444},{"krate":0,"index":1445},{"krate":0,"index":1446},{"krate":0,"index":1450},{"krate":0,"index":1451},{"krate":0,"index":1452},{"krate":0,"index":1453},{"krate":0,"index":1454},{"krate":0,"index":1455},{"krate":0,"index":1456},{"krate":0,"index":1457},{"krate":0,"index":1458},{"krate":0,"index":1459},{"krate":0,"index":1460},{"krate":0,"index":1461},{"krate":0,"index":1462},{"krate":0,"index":1463},{"krate":0,"index":1465},{"krate":0,"index":1466},{"krate":0,"index":1467},{"krate":0,"index":1468},{"krate":0,"index":1469}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\wgsl\\mod.rs","byte_start":498644,"byte_end":498649,"line_start":175,"line_end":175,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1665}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\wgsl\\mod.rs","byte_start":513730,"byte_end":513743,"line_start":443,"line_end":443,"column_start":13,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1667}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\wgsl\\mod.rs","byte_start":515193,"byte_end":515202,"line_start":483,"line_end":483,"column_start":13,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1672}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\wgsl\\mod.rs","byte_start":522346,"byte_end":522356,"line_start":682,"line_end":682,"column_start":13,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1678}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\wgsl\\mod.rs","byte_start":522977,"byte_end":522988,"line_start":701,"line_end":701,"column_start":36,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1685},{"krate":0,"index":1686}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\wgsl\\mod.rs","byte_start":523822,"byte_end":523838,"line_start":721,"line_end":721,"column_start":17,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1704},{"krate":0,"index":1705}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\wgsl\\mod.rs","byte_start":525691,"byte_end":525708,"line_start":780,"line_end":780,"column_start":10,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1727},{"krate":0,"index":1728},{"krate":0,"index":1729},{"krate":0,"index":1730},{"krate":0,"index":1733},{"krate":0,"index":1736},{"krate":0,"index":1737}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\wgsl\\mod.rs","byte_start":532648,"byte_end":532663,"line_start":958,"line_end":958,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1739}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\wgsl\\mod.rs","byte_start":532945,"byte_end":532956,"line_start":972,"line_end":972,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1750},{"krate":0,"index":1754},{"krate":0,"index":1756}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\wgsl\\mod.rs","byte_start":535105,"byte_end":535118,"line_start":1048,"line_end":1048,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1761},{"krate":0,"index":1763}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\wgsl\\mod.rs","byte_start":537763,"byte_end":537773,"line_start":1122,"line_end":1122,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1773},{"krate":0,"index":1776},{"krate":0,"index":1777},{"krate":0,"index":1778}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\wgsl\\mod.rs","byte_start":539816,"byte_end":539826,"line_start":1177,"line_end":1177,"column_start":28,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1780}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\wgsl\\mod.rs","byte_start":539976,"byte_end":539986,"line_start":1183,"line_end":1183,"column_start":28,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1782}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\wgsl\\mod.rs","byte_start":540224,"byte_end":540230,"line_start":1195,"line_end":1195,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1788},{"krate":0,"index":1789},{"krate":0,"index":1790},{"krate":0,"index":1791},{"krate":0,"index":1792},{"krate":0,"index":1797},{"krate":0,"index":1800},{"krate":0,"index":1803},{"krate":0,"index":1806},{"krate":0,"index":1809},{"krate":0,"index":1813},{"krate":0,"index":1816},{"krate":0,"index":1818},{"krate":0,"index":1820},{"krate":0,"index":1822},{"krate":0,"index":1827},{"krate":0,"index":1831},{"krate":0,"index":1833},{"krate":0,"index":1845},{"krate":0,"index":1847},{"krate":0,"index":1859},{"krate":0,"index":1861},{"krate":0,"index":1863},{"krate":0,"index":1867},{"krate":0,"index":1869},{"krate":0,"index":1871},{"krate":0,"index":1874},{"krate":0,"index":1877},{"krate":0,"index":1880},{"krate":0,"index":1883},{"krate":0,"index":1897},{"krate":0,"index":1899},{"krate":0,"index":1901},{"krate":0,"index":1903},{"krate":0,"index":1906}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\wgsl\\mod.rs","byte_start":670789,"byte_end":670806,"line_start":4160,"line_end":4160,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1911},{"krate":0,"index":1912}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\wgsl\\mod.rs","byte_start":670986,"byte_end":671003,"line_start":4170,"line_end":4170,"column_start":16,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1914},{"krate":0,"index":1915}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\wgsl\\mod.rs","byte_start":671212,"byte_end":671229,"line_start":4181,"line_end":4181,"column_start":21,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1917},{"krate":0,"index":1918},{"krate":0,"index":1919}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\mod.rs","byte_start":487775,"byte_end":487782,"line_start":26,"line_end":26,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1945},{"krate":0,"index":1946}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\mod.rs","byte_start":488675,"byte_end":488688,"line_start":55,"line_end":55,"column_start":13,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1948}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\mod.rs","byte_start":489019,"byte_end":489027,"line_start":70,"line_end":70,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1950},{"krate":0,"index":1951},{"krate":0,"index":1952},{"krate":0,"index":1954},{"krate":0,"index":1956}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\mod.rs","byte_start":490867,"byte_end":490875,"line_start":126,"line_end":126,"column_start":48,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1959},{"krate":0,"index":1960}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\index.rs","byte_start":723552,"byte_end":723561,"line_start":5,"line_end":5,"column_start":13,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1968}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\index.rs","byte_start":725871,"byte_end":725880,"line_start":60,"line_end":60,"column_start":13,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1982}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Direct","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\layouter.rs","byte_start":727429,"byte_end":727437,"line_start":25,"line_end":25,"column_start":42,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":2006},{"krate":0,"index":2007}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\layouter.rs","byte_start":727746,"byte_end":727754,"line_start":36,"line_end":36,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2009},{"krate":0,"index":2010},{"krate":0,"index":2011},{"krate":0,"index":2012}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\namer.rs","byte_start":732649,"byte_end":732654,"line_start":31,"line_end":31,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":2033},{"krate":0,"index":2038},{"krate":0,"index":2042},{"krate":0,"index":2043},{"krate":0,"index":2045}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\typifier.rs","byte_start":747543,"byte_end":747557,"line_start":99,"line_end":99,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":2072},{"krate":0,"index":2073}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Direct","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\typifier.rs","byte_start":748067,"byte_end":748081,"line_start":116,"line_end":116,"column_start":16,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2076}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\typifier.rs","byte_start":749191,"byte_end":749204,"line_start":151,"line_end":151,"column_start":13,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2081}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\typifier.rs","byte_start":751102,"byte_end":751116,"line_start":207,"line_end":207,"column_start":10,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2092}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Direct","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\mod.rs","byte_start":710082,"byte_end":710092,"line_start":25,"line_end":25,"column_start":44,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":2144}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\mod.rs","byte_start":711509,"byte_end":711520,"line_start":65,"line_end":65,"column_start":13,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2153}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\mod.rs","byte_start":711881,"byte_end":711890,"line_start":78,"line_end":78,"column_start":13,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2156},{"krate":0,"index":2157},{"krate":0,"index":2158},{"krate":0,"index":2159},{"krate":0,"index":2163}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\mod.rs","byte_start":715810,"byte_end":715822,"line_start":187,"line_end":187,"column_start":13,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2165}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\mod.rs","byte_start":716351,"byte_end":716363,"line_start":202,"line_end":202,"column_start":13,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2170}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\mod.rs","byte_start":718705,"byte_end":718715,"line_start":281,"line_end":281,"column_start":13,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2172},{"krate":0,"index":2173}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\mod.rs","byte_start":720018,"byte_end":720029,"line_start":316,"line_end":316,"column_start":13,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2175}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\mod.rs","byte_start":720256,"byte_end":720264,"line_start":325,"line_end":325,"column_start":13,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":2177}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\mod.rs","byte_start":721701,"byte_end":721708,"line_start":356,"line_end":356,"column_start":13,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":2182}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Direct","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\mod.rs","byte_start":721983,"byte_end":721994,"line_start":366,"line_end":366,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2184}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Direct","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\mod.rs","byte_start":722369,"byte_end":722380,"line_start":377,"line_end":377,"column_start":20,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Direct","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\mod.rs","byte_start":722416,"byte_end":722427,"line_start":378,"line_end":378,"column_start":33,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2187}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\mod.rs","byte_start":722733,"byte_end":722749,"line_start":389,"line_end":389,"column_start":13,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2190},{"krate":0,"index":2192},{"krate":0,"index":2193}],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\span.rs","byte_start":779064,"byte_end":779068,"line_start":10,"line_end":10,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":2199},{"krate":0,"index":2200},{"krate":0,"index":2201},{"krate":0,"index":2203},{"krate":0,"index":2204}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Direct","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\span.rs","byte_start":780670,"byte_end":780674,"line_start":61,"line_end":61,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2206}],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\analyzer.rs","byte_start":793869,"byte_end":793879,"line_start":51,"line_end":51,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":2248}],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Direct","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\analyzer.rs","byte_start":794678,"byte_end":794696,"line_start":79,"line_end":79,"column_start":21,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2253},{"krate":0,"index":2254}],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\analyzer.rs","byte_start":795159,"byte_end":795177,"line_start":95,"line_end":95,"column_start":6,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2256},{"krate":0,"index":2257}],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\analyzer.rs","byte_start":796823,"byte_end":796837,"line_start":147,"line_end":147,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":2259}],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\analyzer.rs","byte_start":797515,"byte_end":797525,"line_start":170,"line_end":170,"column_start":13,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2261}],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\analyzer.rs","byte_start":799171,"byte_end":799183,"line_start":215,"line_end":215,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":2263},{"krate":0,"index":2264},{"krate":0,"index":2265}],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Direct","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\analyzer.rs","byte_start":799740,"byte_end":799752,"line_start":234,"line_end":234,"column_start":52,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":2267},{"krate":0,"index":2268}],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Direct","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\analyzer.rs","byte_start":799957,"byte_end":799969,"line_start":241,"line_end":241,"column_start":48,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":2270},{"krate":0,"index":2271}],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\analyzer.rs","byte_start":800629,"byte_end":800641,"line_start":260,"line_end":260,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":2273},{"krate":0,"index":2274},{"krate":0,"index":2275},{"krate":0,"index":2276},{"krate":0,"index":2279},{"krate":0,"index":2298}],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\analyzer.rs","byte_start":823891,"byte_end":823901,"line_start":806,"line_end":806,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":2304},{"krate":0,"index":2305}],"docs":"","sig":null,"attributes":[]},{"id":175,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\expression.rs","byte_start":844410,"byte_end":844432,"line_start":126,"line_end":126,"column_start":10,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2361}],"docs":"","sig":null,"attributes":[]},{"id":176,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\expression.rs","byte_start":844799,"byte_end":844808,"line_start":140,"line_end":140,"column_start":13,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2363}],"docs":"","sig":null,"attributes":[]},{"id":186,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\function.rs","byte_start":907771,"byte_end":907783,"line_start":168,"line_end":168,"column_start":10,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2438},{"krate":0,"index":2440},{"krate":0,"index":2441},{"krate":0,"index":2442},{"krate":0,"index":2443},{"krate":0,"index":2445}],"docs":"","sig":null,"attributes":[]},{"id":187,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\function.rs","byte_start":909916,"byte_end":909925,"line_start":238,"line_end":238,"column_start":13,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2447},{"krate":0,"index":2449},{"krate":0,"index":2450},{"krate":0,"index":2460},{"krate":0,"index":2461},{"krate":0,"index":2462}],"docs":"","sig":null,"attributes":[]},{"id":195,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\interface.rs","byte_start":936946,"byte_end":936960,"line_start":103,"line_end":103,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":2507},{"krate":0,"index":2524}],"docs":"","sig":null,"attributes":[]},{"id":196,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\interface.rs","byte_start":945873,"byte_end":945882,"line_start":320,"line_end":320,"column_start":13,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2526},{"krate":0,"index":2530}],"docs":"","sig":null,"attributes":[]},{"id":201,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\type.rs","byte_start":959037,"byte_end":959045,"line_start":151,"line_end":151,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2558},{"krate":0,"index":2559}],"docs":"","sig":null,"attributes":[]},{"id":202,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\type.rs","byte_start":959477,"byte_end":959486,"line_start":170,"line_end":170,"column_start":13,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2561},{"krate":0,"index":2562},{"krate":0,"index":2563}],"docs":"","sig":null,"attributes":[]},{"id":203,"kind":"Direct","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\mod.rs","byte_start":782412,"byte_end":782427,"line_start":52,"line_end":52,"column_start":18,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2647}],"docs":"","sig":null,"attributes":[]},{"id":204,"kind":"Direct","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\mod.rs","byte_start":783600,"byte_end":783610,"line_start":93,"line_end":93,"column_start":46,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":2649},{"krate":0,"index":2650}],"docs":"","sig":null,"attributes":[]},{"id":211,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\mod.rs","byte_start":785719,"byte_end":785728,"line_start":169,"line_end":169,"column_start":13,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2652},{"krate":0,"index":2653}],"docs":"","sig":null,"attributes":[]},{"id":212,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\mod.rs","byte_start":787067,"byte_end":787076,"line_start":211,"line_end":211,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2655},{"krate":0,"index":2656},{"krate":0,"index":2659}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":9438,"byte_end":9442,"line_start":209,"line_end":209,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":154}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\mod.rs","byte_start":73372,"byte_end":73376,"line_start":8,"line_end":8,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":155}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\mod.rs","byte_start":73455,"byte_end":73458,"line_start":12,"line_end":12,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":482}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":9463,"byte_end":9468,"line_start":211,"line_end":211,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":1360}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\mod.rs","byte_start":487480,"byte_end":487484,"line_start":10,"line_end":10,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":1364}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":9478,"byte_end":9482,"line_start":212,"line_end":212,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":1962}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\lib.rs","byte_start":9502,"byte_end":9507,"line_start":214,"line_end":214,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":2207}}],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\arena.rs","byte_start":57282,"byte_end":57288,"line_start":26,"line_end":26,"column_start":19,"column_end":25},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":30},"to":{"krate":2,"index":2637}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\arena.rs","byte_start":57440,"byte_end":57446,"line_start":34,"line_end":34,"column_start":18,"column_end":24},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":30},"to":{"krate":2,"index":3026}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\arena.rs","byte_start":57475,"byte_end":57481,"line_start":35,"line_end":35,"column_start":23,"column_end":29},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":30},"to":{"krate":2,"index":2667}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\arena.rs","byte_start":57585,"byte_end":57591,"line_start":40,"line_end":40,"column_start":16,"column_end":22},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":30},"to":{"krate":2,"index":2672}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\arena.rs","byte_start":57621,"byte_end":57627,"line_start":41,"line_end":41,"column_start":24,"column_end":30},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":30},"to":{"krate":2,"index":2714}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\arena.rs","byte_start":57764,"byte_end":57770,"line_start":46,"line_end":46,"column_start":17,"column_end":23},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":30},"to":{"krate":2,"index":2703}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\arena.rs","byte_start":57890,"byte_end":57896,"line_start":51,"line_end":51,"column_start":24,"column_end":30},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":30},"to":{"krate":2,"index":9401}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\arena.rs","byte_start":58046,"byte_end":58052,"line_start":56,"line_end":56,"column_start":24,"column_end":30},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":30},"to":{"krate":2,"index":9608}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\arena.rs","byte_start":58161,"byte_end":58167,"line_start":62,"line_end":62,"column_start":9,"column_end":15},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":30},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\arena.rs","byte_start":59608,"byte_end":59613,"line_start":112,"line_end":112,"column_start":19,"column_end":24},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":66},"to":{"krate":2,"index":2637}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\arena.rs","byte_start":59778,"byte_end":59783,"line_start":120,"line_end":120,"column_start":24,"column_end":29},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":66},"to":{"krate":2,"index":9401}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\arena.rs","byte_start":59961,"byte_end":59966,"line_start":125,"line_end":125,"column_start":22,"column_end":27},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":66},"to":{"krate":2,"index":7653}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\arena.rs","byte_start":60967,"byte_end":60972,"line_start":157,"line_end":157,"column_start":21,"column_end":26},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":80},"to":{"krate":2,"index":2994}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\arena.rs","byte_start":61068,"byte_end":61073,"line_start":162,"line_end":162,"column_start":36,"column_end":41},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":80},"to":{"krate":2,"index":9401}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\arena.rs","byte_start":61207,"byte_end":61212,"line_start":168,"line_end":168,"column_start":9,"column_end":14},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":80},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\arena.rs","byte_start":65578,"byte_end":65583,"line_start":316,"line_end":316,"column_start":35,"column_end":40},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":80},"to":{"krate":2,"index":3312}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\arena.rs","byte_start":65738,"byte_end":65743,"line_start":323,"line_end":323,"column_start":38,"column_end":43},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":80},"to":{"krate":2,"index":3316}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\arena.rs","byte_start":65889,"byte_end":65894,"line_start":329,"line_end":329,"column_start":34,"column_end":39},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":80},"to":{"krate":2,"index":3312}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\arena.rs","byte_start":68378,"byte_end":68389,"line_start":404,"line_end":404,"column_start":9,"column_end":20},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":125},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\arena.rs","byte_start":69774,"byte_end":69785,"line_start":454,"line_end":454,"column_start":26,"column_end":37},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":125},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\arena.rs","byte_start":71898,"byte_end":71909,"line_start":514,"line_end":514,"column_start":21,"column_end":32},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":125},"to":{"krate":2,"index":2994}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\arena.rs","byte_start":72024,"byte_end":72035,"line_start":520,"line_end":520,"column_start":54,"column_end":65},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":125},"to":{"krate":2,"index":9401}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\arena.rs","byte_start":72195,"byte_end":72206,"line_start":526,"line_end":526,"column_start":35,"column_end":46},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":125},"to":{"krate":2,"index":3312}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\hlsl\\conv.rs","byte_start":91546,"byte_end":91556,"line_start":3,"line_end":3,"column_start":13,"column_end":23},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":5758},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\hlsl\\conv.rs","byte_start":92443,"byte_end":92452,"line_start":31,"line_end":31,"column_start":13,"column_end":22},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":6126},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\hlsl\\conv.rs","byte_start":92618,"byte_end":92631,"line_start":40,"line_end":40,"column_start":13,"column_end":26},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":6000},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\hlsl\\conv.rs","byte_start":93793,"byte_end":93800,"line_start":76,"line_end":76,"column_start":13,"column_end":20},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":5671},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\hlsl\\conv.rs","byte_start":95527,"byte_end":95540,"line_start":113,"line_end":113,"column_start":13,"column_end":26},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":5810},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\hlsl\\conv.rs","byte_start":95880,"byte_end":95888,"line_start":124,"line_end":124,"column_start":13,"column_end":21},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":5835},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\hlsl\\conv.rs","byte_start":96205,"byte_end":96219,"line_start":135,"line_end":135,"column_start":13,"column_end":27},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":6363},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\hlsl\\help.rs","byte_start":99326,"byte_end":99336,"line_start":89,"line_end":89,"column_start":34,"column_end":44},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":2767},"to":{"krate":2,"index":2922}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\hlsl\\help.rs","byte_start":99911,"byte_end":99917,"line_start":109,"line_end":109,"column_start":27,"column_end":33},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":471},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\hlsl\\storage.rs","byte_start":119547,"byte_end":119553,"line_start":38,"line_end":38,"column_start":28,"column_end":34},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":471},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\hlsl\\writer.rs","byte_start":137622,"byte_end":137634,"line_start":59,"line_end":59,"column_start":6,"column_end":18},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":2820},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\hlsl\\writer.rs","byte_start":138028,"byte_end":138034,"line_start":75,"line_end":75,"column_start":32,"column_end":38},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":471},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\hlsl\\mod.rs","byte_start":87246,"byte_end":87257,"line_start":53,"line_end":53,"column_start":6,"column_end":17},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":2872},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\hlsl\\mod.rs","byte_start":87453,"byte_end":87464,"line_start":63,"line_end":63,"column_start":13,"column_end":24},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":5612},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\hlsl\\mod.rs","byte_start":87671,"byte_end":87685,"line_start":73,"line_end":73,"column_start":13,"column_end":27},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":5879},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\hlsl\\mod.rs","byte_start":89047,"byte_end":89054,"line_start":111,"line_end":111,"column_start":18,"column_end":25},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":2910},"to":{"krate":2,"index":2994}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\hlsl\\mod.rs","byte_start":89305,"byte_end":89312,"line_start":122,"line_end":122,"column_start":6,"column_end":13},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":2910},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\hlsl\\mod.rs","byte_start":90882,"byte_end":90889,"line_start":168,"line_end":168,"column_start":6,"column_end":13},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":2965},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\spv\\block.rs","byte_start":244194,"byte_end":244200,"line_start":22,"line_end":22,"column_start":6,"column_end":12},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":1253},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\spv\\block.rs","byte_start":248340,"byte_end":248352,"line_start":146,"line_end":146,"column_start":10,"column_end":22},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":1238},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\spv\\helpers.rs","byte_start":317048,"byte_end":317060,"line_start":52,"line_end":52,"column_start":13,"column_end":25},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":5637},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\spv\\image.rs","byte_start":321523,"byte_end":321527,"line_start":104,"line_end":104,"column_start":6,"column_end":10},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":655},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\spv\\image.rs","byte_start":322884,"byte_end":322888,"line_start":143,"line_end":143,"column_start":17,"column_end":21},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":655},"to":{"krate":0,"index":650}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\spv\\image.rs","byte_start":324523,"byte_end":324528,"line_start":203,"line_end":203,"column_start":17,"column_end":22},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":666},"to":{"krate":0,"index":650}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\spv\\image.rs","byte_start":325189,"byte_end":325201,"line_start":229,"line_end":229,"column_start":10,"column_end":22},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":1238},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\spv\\index.rs","byte_start":361061,"byte_end":361073,"line_start":49,"line_end":49,"column_start":10,"column_end":22},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":1238},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\spv\\instructions.rs","byte_start":378320,"byte_end":378331,"line_start":19,"line_end":19,"column_start":13,"column_end":24},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":1183},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\spv\\instructions.rs","byte_start":404268,"byte_end":404279,"line_start":919,"line_end":919,"column_start":44,"column_end":55},"kind":{"Impl":{"id":55}},"from":{"krate":22,"index":2104},"to":{"krate":2,"index":2922}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\spv\\instructions.rs","byte_start":405817,"byte_end":405820,"line_start":959,"line_end":959,"column_start":45,"column_end":48},"kind":{"Impl":{"id":56}},"from":{"krate":22,"index":2005},"to":{"krate":2,"index":2922}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\spv\\layout.rs","byte_start":406299,"byte_end":406313,"line_start":8,"line_end":8,"column_start":6,"column_end":20},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":2972},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\spv\\layout.rs","byte_start":406927,"byte_end":406941,"line_start":28,"line_end":28,"column_start":40,"column_end":54},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":2972},"to":{"krate":0,"index":931}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\spv\\layout.rs","byte_start":407222,"byte_end":407235,"line_start":40,"line_end":40,"column_start":6,"column_end":19},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":2980},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\spv\\layout.rs","byte_start":407983,"byte_end":407996,"line_start":56,"line_end":56,"column_start":40,"column_end":53},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":2980},"to":{"krate":0,"index":931}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\spv\\layout.rs","byte_start":408704,"byte_end":408715,"line_start":74,"line_end":74,"column_start":6,"column_end":17},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":1183},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\spv\\layout.rs","byte_start":409950,"byte_end":409961,"line_start":118,"line_end":118,"column_start":6,"column_end":17},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":1183},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\spv\\recyclable.rs","byte_start":414497,"byte_end":414500,"line_start":32,"line_end":32,"column_start":24,"column_end":27},"kind":{"Impl":{"id":63}},"from":{"krate":5,"index":7064},"to":{"krate":0,"index":931}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\spv\\recyclable.rs","byte_start":414639,"byte_end":414646,"line_start":39,"line_end":39,"column_start":55,"column_end":62},"kind":{"Impl":{"id":64}},"from":{"krate":1,"index":1092},"to":{"krate":0,"index":931}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\spv\\recyclable.rs","byte_start":414788,"byte_end":414795,"line_start":46,"line_end":46,"column_start":52,"column_end":59},"kind":{"Impl":{"id":65}},"from":{"krate":1,"index":1809},"to":{"krate":0,"index":931}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\spv\\selection.rs","byte_start":418309,"byte_end":418318,"line_start":85,"line_end":85,"column_start":25,"column_end":34},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":959},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\spv\\selection.rs","byte_start":423670,"byte_end":423675,"line_start":214,"line_end":214,"column_start":30,"column_end":35},"kind":"SuperTrait","from":{"krate":2,"index":3021},"to":{"krate":0,"index":974}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\spv\\selection.rs","byte_start":424325,"byte_end":424329,"line_start":232,"line_end":232,"column_start":21,"column_end":25},"kind":{"Impl":{"id":67}},"from":{"krate":22,"index":7},"to":{"krate":0,"index":974}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\spv\\writer.rs","byte_start":425702,"byte_end":425710,"line_start":21,"line_end":21,"column_start":6,"column_end":14},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":3039},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\spv\\writer.rs","byte_start":426369,"byte_end":426375,"line_start":41,"line_end":41,"column_start":6,"column_end":12},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":1253},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\spv\\mod.rs","byte_start":225266,"byte_end":225277,"line_start":75,"line_end":75,"column_start":6,"column_end":17},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":3034},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\spv\\mod.rs","byte_start":226093,"byte_end":226098,"line_start":104,"line_end":104,"column_start":6,"column_end":11},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":1192},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\spv\\mod.rs","byte_start":226768,"byte_end":226776,"line_start":138,"line_end":138,"column_start":6,"column_end":14},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":3039},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\spv\\mod.rs","byte_start":228268,"byte_end":228282,"line_start":184,"line_end":184,"column_start":6,"column_end":20},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":3047},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\spv\\mod.rs","byte_start":233805,"byte_end":233815,"line_start":318,"line_end":318,"column_start":26,"column_end":36},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":3204},"to":{"krate":2,"index":2922}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\spv\\mod.rs","byte_start":236030,"byte_end":236047,"line_start":399,"line_end":399,"column_start":6,"column_end":23},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":3252},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\spv\\mod.rs","byte_start":236208,"byte_end":236225,"line_start":405,"line_end":405,"column_start":48,"column_end":65},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":3252},"to":{"krate":2,"index":3312}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\spv\\mod.rs","byte_start":236516,"byte_end":236533,"line_start":415,"line_end":415,"column_start":51,"column_end":68},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":3252},"to":{"krate":2,"index":3316}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\spv\\mod.rs","byte_start":236802,"byte_end":236819,"line_start":424,"line_end":424,"column_start":33,"column_end":50},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":3252},"to":{"krate":0,"index":931}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\spv\\mod.rs","byte_start":237279,"byte_end":237293,"line_start":441,"line_end":441,"column_start":6,"column_end":20},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":1228},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\spv\\mod.rs","byte_start":238587,"byte_end":238599,"line_start":490,"line_end":490,"column_start":6,"column_end":18},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":1238},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\spv\\mod.rs","byte_start":242158,"byte_end":242165,"line_start":595,"line_end":595,"column_start":18,"column_end":25},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":3371},"to":{"krate":2,"index":2994}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\mod.rs","byte_start":73767,"byte_end":73772,"line_start":28,"line_end":28,"column_start":6,"column_end":11},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":3397},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\mod.rs","byte_start":73886,"byte_end":73891,"line_start":35,"line_end":35,"column_start":28,"column_end":33},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":3397},"to":{"krate":2,"index":9408}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\mod.rs","byte_start":74993,"byte_end":75004,"line_start":66,"line_end":66,"column_start":10,"column_end":21},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":1291},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\mod.rs","byte_start":82599,"byte_end":82616,"line_start":231,"line_end":231,"column_start":18,"column_end":35},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":3403},"to":{"krate":2,"index":2994}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\mod.rs","byte_start":82704,"byte_end":82714,"line_start":237,"line_end":237,"column_start":13,"column_end":23},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":6756},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\back\\mod.rs","byte_start":85249,"byte_end":85258,"line_start":305,"line_end":305,"column_start":13,"column_end":22},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":6126},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\block.rs","byte_start":484129,"byte_end":484134,"line_start":15,"line_end":15,"column_start":6,"column_end":11},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":3426},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\block.rs","byte_start":486488,"byte_end":486493,"line_start":100,"line_end":100,"column_start":16,"column_end":21},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":3426},"to":{"krate":2,"index":3227}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\block.rs","byte_start":486611,"byte_end":486616,"line_start":107,"line_end":107,"column_start":19,"column_end":24},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":3426},"to":{"krate":2,"index":3240}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\block.rs","byte_start":487208,"byte_end":487213,"line_start":132,"line_end":132,"column_start":31,"column_end":36},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":3426},"to":{"krate":2,"index":2922}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\interpolator.rs","byte_start":491619,"byte_end":491626,"line_start":3,"line_end":3,"column_start":13,"column_end":20},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":6220},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\wgsl\\lexer.rs","byte_start":680987,"byte_end":681003,"line_start":48,"line_end":48,"column_start":6,"column_end":22},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":1425},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\wgsl\\lexer.rs","byte_start":693055,"byte_end":693060,"line_start":397,"line_end":397,"column_start":10,"column_end":15},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":3462},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\wgsl\\mod.rs","byte_start":498644,"byte_end":498649,"line_start":175,"line_end":175,"column_start":10,"column_end":15},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":3630},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\wgsl\\mod.rs","byte_start":513730,"byte_end":513743,"line_start":443,"line_end":443,"column_start":13,"column_end":26},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":6000},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\wgsl\\mod.rs","byte_start":515193,"byte_end":515202,"line_start":483,"line_end":483,"column_start":13,"column_end":22},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":6126},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\wgsl\\mod.rs","byte_start":522346,"byte_end":522356,"line_start":682,"line_end":682,"column_start":13,"column_end":23},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":5758},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\wgsl\\mod.rs","byte_start":522977,"byte_end":522988,"line_start":701,"line_end":701,"column_start":36,"column_end":47},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":2691},"to":{"krate":0,"index":1679}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\wgsl\\mod.rs","byte_start":523822,"byte_end":523838,"line_start":721,"line_end":721,"column_start":17,"column_end":33},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":1687},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\wgsl\\mod.rs","byte_start":525691,"byte_end":525708,"line_start":780,"line_end":780,"column_start":10,"column_end":27},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":1710},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\wgsl\\mod.rs","byte_start":532648,"byte_end":532663,"line_start":958,"line_end":958,"column_start":6,"column_end":21},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":3753},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\wgsl\\mod.rs","byte_start":532945,"byte_end":532956,"line_start":972,"line_end":972,"column_start":6,"column_end":17},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":1740},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\wgsl\\mod.rs","byte_start":535105,"byte_end":535118,"line_start":1048,"line_end":1048,"column_start":6,"column_end":19},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":3797},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\wgsl\\mod.rs","byte_start":537763,"byte_end":537773,"line_start":1122,"line_end":1122,"column_start":6,"column_end":16},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":3804},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\wgsl\\mod.rs","byte_start":539816,"byte_end":539826,"line_start":1177,"line_end":1177,"column_start":28,"column_end":38},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":3804},"to":{"krate":2,"index":9408}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\wgsl\\mod.rs","byte_start":539976,"byte_end":539986,"line_start":1183,"line_end":1183,"column_start":28,"column_end":38},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":3804},"to":{"krate":1,"index":2341}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\wgsl\\mod.rs","byte_start":540224,"byte_end":540230,"line_start":1195,"line_end":1195,"column_start":6,"column_end":12},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":1783},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\wgsl\\mod.rs","byte_start":670789,"byte_end":670806,"line_start":4160,"line_end":4160,"column_start":6,"column_end":23},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":1908},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\wgsl\\mod.rs","byte_start":670986,"byte_end":671003,"line_start":4170,"line_end":4170,"column_start":16,"column_end":33},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":1908},"to":{"krate":1,"index":4406}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\wgsl\\mod.rs","byte_start":671212,"byte_end":671229,"line_start":4181,"line_end":4181,"column_start":21,"column_end":38},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":1908},"to":{"krate":27,"index":39}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\mod.rs","byte_start":487775,"byte_end":487782,"line_start":26,"line_end":26,"column_start":6,"column_end":13},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":3813},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\mod.rs","byte_start":488675,"byte_end":488688,"line_start":55,"line_end":55,"column_start":13,"column_end":26},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":6205},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\mod.rs","byte_start":489019,"byte_end":489027,"line_start":70,"line_end":70,"column_start":6,"column_end":14},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":3819},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\front\\mod.rs","byte_start":490867,"byte_end":490875,"line_start":126,"line_end":126,"column_start":48,"column_end":56},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":3819},"to":{"krate":2,"index":3312}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\index.rs","byte_start":723552,"byte_end":723561,"line_start":5,"line_end":5,"column_start":13,"column_end":22},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":6126},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\index.rs","byte_start":725871,"byte_end":725880,"line_start":60,"line_end":60,"column_start":13,"column_end":22},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":5785},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\layouter.rs","byte_start":727429,"byte_end":727437,"line_start":25,"line_end":25,"column_start":42,"column_end":50},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":3840},"to":{"krate":2,"index":3312}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\layouter.rs","byte_start":727746,"byte_end":727754,"line_start":36,"line_end":36,"column_start":6,"column_end":14},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":3840},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\namer.rs","byte_start":732649,"byte_end":732654,"line_start":31,"line_end":31,"column_start":6,"column_end":11},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":3909},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\typifier.rs","byte_start":747543,"byte_end":747557,"line_start":99,"line_end":99,"column_start":6,"column_end":20},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":3915},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\typifier.rs","byte_start":748067,"byte_end":748081,"line_start":116,"line_end":116,"column_start":16,"column_end":30},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":3915},"to":{"krate":2,"index":2637}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\typifier.rs","byte_start":749191,"byte_end":749204,"line_start":151,"line_end":151,"column_start":13,"column_end":26},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":6205},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\typifier.rs","byte_start":751102,"byte_end":751116,"line_start":207,"line_end":207,"column_start":10,"column_end":24},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":2082},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\mod.rs","byte_start":710082,"byte_end":710092,"line_start":25,"line_end":25,"column_start":44,"column_end":54},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":5758},"to":{"krate":2,"index":2922}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\mod.rs","byte_start":711509,"byte_end":711520,"line_start":65,"line_end":65,"column_start":13,"column_end":24},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":6185},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\mod.rs","byte_start":711881,"byte_end":711890,"line_start":78,"line_end":78,"column_start":13,"column_end":22},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":6126},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\mod.rs","byte_start":715810,"byte_end":715822,"line_start":187,"line_end":187,"column_start":13,"column_end":25},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":5637},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\mod.rs","byte_start":716351,"byte_end":716363,"line_start":202,"line_end":202,"column_start":13,"column_end":25},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":6455},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\mod.rs","byte_start":718705,"byte_end":718715,"line_start":281,"line_end":281,"column_start":13,"column_end":23},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":6756},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\mod.rs","byte_start":720018,"byte_end":720029,"line_start":316,"line_end":316,"column_start":13,"column_end":24},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":6600},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\mod.rs","byte_start":720256,"byte_end":720264,"line_start":325,"line_end":325,"column_start":13,"column_end":21},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":6175},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\mod.rs","byte_start":721701,"byte_end":721708,"line_start":356,"line_end":356,"column_start":13,"column_end":20},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":6220},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\mod.rs","byte_start":721983,"byte_end":721994,"line_start":366,"line_end":366,"column_start":27,"column_end":38},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":6185},"to":{"krate":2,"index":2667}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\mod.rs","byte_start":722369,"byte_end":722380,"line_start":377,"line_end":377,"column_start":20,"column_end":31},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":6185},"to":{"krate":2,"index":2672}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\mod.rs","byte_start":722416,"byte_end":722427,"line_start":378,"line_end":378,"column_start":33,"column_end":44},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":6185},"to":{"krate":2,"index":9608}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\proc\\mod.rs","byte_start":722733,"byte_end":722749,"line_start":389,"line_end":389,"column_start":13,"column_end":29},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":6641},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\span.rs","byte_start":779064,"byte_end":779068,"line_start":10,"line_end":10,"column_start":6,"column_end":10},"kind":{"Impl":{"id":154}},"from":{"krate":0,"index":3994},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\span.rs","byte_start":780670,"byte_end":780674,"line_start":61,"line_end":61,"column_start":29,"column_end":33},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":3994},"to":{"krate":2,"index":2922}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\analyzer.rs","byte_start":793869,"byte_end":793879,"line_start":51,"line_end":51,"column_start":6,"column_end":16},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":4105},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\analyzer.rs","byte_start":794678,"byte_end":794696,"line_start":79,"line_end":79,"column_start":21,"column_end":39},"kind":{"Impl":{"id":157}},"from":{"krate":0,"index":2249},"to":{"krate":2,"index":3144}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\analyzer.rs","byte_start":795159,"byte_end":795177,"line_start":95,"line_end":95,"column_start":6,"column_end":24},"kind":{"Impl":{"id":158}},"from":{"krate":0,"index":2249},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\analyzer.rs","byte_start":796823,"byte_end":796837,"line_start":147,"line_end":147,"column_start":6,"column_end":20},"kind":{"Impl":{"id":159}},"from":{"krate":0,"index":4318},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\analyzer.rs","byte_start":797515,"byte_end":797525,"line_start":170,"line_end":170,"column_start":13,"column_end":23},"kind":{"Impl":{"id":160}},"from":{"krate":0,"index":6756},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\analyzer.rs","byte_start":799171,"byte_end":799183,"line_start":215,"line_end":215,"column_start":6,"column_end":18},"kind":{"Impl":{"id":161}},"from":{"krate":0,"index":4366},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\analyzer.rs","byte_start":799740,"byte_end":799752,"line_start":234,"line_end":234,"column_start":52,"column_end":64},"kind":{"Impl":{"id":162}},"from":{"krate":0,"index":4366},"to":{"krate":2,"index":3312}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\analyzer.rs","byte_start":799957,"byte_end":799969,"line_start":241,"line_end":241,"column_start":48,"column_end":60},"kind":{"Impl":{"id":163}},"from":{"krate":0,"index":4366},"to":{"krate":2,"index":3312}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\analyzer.rs","byte_start":800629,"byte_end":800641,"line_start":260,"line_end":260,"column_start":6,"column_end":18},"kind":{"Impl":{"id":166}},"from":{"krate":0,"index":4366},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\analyzer.rs","byte_start":823891,"byte_end":823901,"line_start":806,"line_end":806,"column_start":6,"column_end":16},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":5478},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\expression.rs","byte_start":844410,"byte_end":844432,"line_start":126,"line_end":126,"column_start":10,"column_end":32},"kind":{"Impl":{"id":175}},"from":{"krate":0,"index":2354},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\expression.rs","byte_start":844799,"byte_end":844808,"line_start":140,"line_end":140,"column_start":13,"column_end":22},"kind":{"Impl":{"id":176}},"from":{"krate":0,"index":5483},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\function.rs","byte_start":907771,"byte_end":907783,"line_start":168,"line_end":168,"column_start":10,"column_end":22},"kind":{"Impl":{"id":186}},"from":{"krate":0,"index":2426},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\function.rs","byte_start":909916,"byte_end":909925,"line_start":238,"line_end":238,"column_start":13,"column_end":22},"kind":{"Impl":{"id":187}},"from":{"krate":0,"index":5483},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\interface.rs","byte_start":936946,"byte_end":936960,"line_start":103,"line_end":103,"column_start":6,"column_end":20},"kind":{"Impl":{"id":195}},"from":{"krate":0,"index":2497},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\interface.rs","byte_start":945873,"byte_end":945882,"line_start":320,"line_end":320,"column_start":13,"column_end":22},"kind":{"Impl":{"id":196}},"from":{"krate":0,"index":5483},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\type.rs","byte_start":959037,"byte_end":959045,"line_start":151,"line_end":151,"column_start":6,"column_end":14},"kind":{"Impl":{"id":201}},"from":{"krate":0,"index":5167},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\type.rs","byte_start":959477,"byte_end":959486,"line_start":170,"line_end":170,"column_start":13,"column_end":22},"kind":{"Impl":{"id":202}},"from":{"krate":0,"index":5483},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\mod.rs","byte_start":782412,"byte_end":782427,"line_start":52,"line_end":52,"column_start":18,"column_end":33},"kind":{"Impl":{"id":203}},"from":{"krate":0,"index":5175},"to":{"krate":2,"index":2994}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\mod.rs","byte_start":783600,"byte_end":783610,"line_start":93,"line_end":93,"column_start":46,"column_end":56},"kind":{"Impl":{"id":204}},"from":{"krate":0,"index":5478},"to":{"krate":2,"index":3312}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\mod.rs","byte_start":785719,"byte_end":785728,"line_start":169,"line_end":169,"column_start":13,"column_end":22},"kind":{"Impl":{"id":211}},"from":{"krate":0,"index":6126},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ethan\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.7.3\\src\\valid\\mod.rs","byte_start":787067,"byte_end":787076,"line_start":211,"line_end":211,"column_start":6,"column_end":15},"kind":{"Impl":{"id":212}},"from":{"krate":0,"index":5483},"to":{"krate":4294967295,"index":4294967295}}]}